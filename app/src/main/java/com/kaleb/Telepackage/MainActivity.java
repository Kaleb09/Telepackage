package com.kaleb.Telepackage;

import android.Manifest;
import android.annotation.SuppressLint;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.pm.PackageManager;
import android.graphics.Color;
import android.graphics.PixelFormat;
import android.graphics.PorterDuff;
import android.graphics.drawable.ColorDrawable;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings;
import android.speech.tts.TextToSpeech;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.SurfaceView;
import android.view.View;
import android.view.WindowManager;
import android.view.animation.Animation;
import android.view.animation.RotateAnimation;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;

import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.view.menu.MenuBuilder;
import androidx.appcompat.widget.SwitchCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentTransaction;
import androidx.viewpager.widget.PagerAdapter;
import androidx.viewpager.widget.ViewPager;

import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.tabs.TabLayout;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Objects;

/*import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.AdView;
import com.google.android.gms.ads.LoadAdError;
import com.google.android.gms.ads.MobileAds;
import com.google.android.gms.ads.initialization.InitializationStatus;
import com.google.android.gms.ads.initialization.OnInitializationCompleteListener;
import com.google.android.gms.tasks.OnSuccessListener;
/*import com.google.android.gms.vision.CameraSource;
import com.google.android.gms.vision.Detector;
import com.google.android.gms.vision.text.TextBlock;
import com.google.android.gms.vision.text.TextRecognizer;*/


public class MainActivity extends AppCompatActivity implements
        internet.OnFragmentInteractionListener, ClickListner,confirmlistner{
    WindowManager.LayoutParams params;boolean call=false,recharge=false,balance=false;String holiday="no";
    FirebaseDatabase fd;public static int pp=0;
    DatabaseReference dr;int total=0,loadinc=0;int[] totalsuccses = {0};
//   first run this kind of command         git remote set-url origin https://github.com/Kaleb09/Telepackage.git

    ArrayList<MyListData>
            tab1damlist =new ArrayList<>() , tab2damlist =new ArrayList<>() , tab3damlist =new ArrayList<>() , tab4damlist =new ArrayList<>(), tab5damlist =new ArrayList<>() , tab6damlist =new ArrayList<>()
            , tab7damlist =new ArrayList<>() , tab8damlist =new ArrayList<>() , tab9damlist =new ArrayList<>() , tab10damlist =new ArrayList<>() , tab11damlist =new ArrayList<>() , tab12damlist =new ArrayList<>()
            , tab1dlist =new ArrayList<>() , tab2dlist =new ArrayList<>() , tab3dlist =new ArrayList<>() , tab4dlist =new ArrayList<>() , tab5dlist =new ArrayList<>() , tab6dlist =new ArrayList<>(), tab7dlist =new ArrayList<>(), tab8dlist =new ArrayList<>(), tab9dlist =new ArrayList<>(), tab10dlist =new ArrayList<>(), tab11dlist =new ArrayList<>(), tab12dlist =new ArrayList<>()
            , tab1damsaflist = new ArrayList<>(), tab2damsaflist = new ArrayList<>(), tab3damsaflist = new ArrayList<>(), tab4damsaflist = new ArrayList<>(), tab5damsaflist = new ArrayList<>(), tab6damsaflist = new ArrayList<>(), tab7damsaflist = new ArrayList<>(), tab8damsaflist = new ArrayList<>(), tab9damsaflist = new ArrayList<>(), tab10damsaflist = new ArrayList<>(), tab11damsaflist = new ArrayList<>(), tab12damsaflist = new ArrayList<>()
            , tab1dsaflist = new ArrayList<>() , tab2dsaflist = new ArrayList<>() , tab3dsaflist = new ArrayList<>() , tab4dsaflist = new ArrayList<>() , tab5dsaflist = new ArrayList<>() , tab6dsaflist = new ArrayList<>(), tab7dsaflist = new ArrayList<>(), tab8dsaflist = new ArrayList<>(), tab9dsaflist = new ArrayList<>(), tab10dsaflist = new ArrayList<>(), tab11dsaflist = new ArrayList<>(), tab12dsaflist = new ArrayList<>()
            //weeeky##########################################

            , tab1wamlist =new ArrayList<>() , tab2wamlist =new ArrayList<>() , tab3wamlist =new ArrayList<>() , tab4wamlist =new ArrayList<>() , tab5wamlist =new ArrayList<>() , tab6wamlist =new ArrayList<>(), tab7wamlist =new ArrayList<>(), tab8wamlist =new ArrayList<>(), tab9wamlist =new ArrayList<>(), tab10wamlist = new ArrayList<>(), tab11wamlist = new ArrayList<>(), tab12wamlist = new ArrayList<>()
            , tab1wlist = new ArrayList<>() , tab2wlist = new ArrayList<>() , tab3wlist = new ArrayList<>() , tab4wlist = new ArrayList<>() , tab5wlist = new ArrayList<>() , tab6wlist = new ArrayList<>(), tab7wlist = new ArrayList<>(), tab8wlist = new ArrayList<>(), tab9wlist = new ArrayList<>(), tab10wlist = new ArrayList<>(), tab11wlist = new ArrayList<>(), tab12wlist = new ArrayList<>()
            , tab1wamsaflist = new ArrayList<>() , tab2wamsaflist = new ArrayList<>() , tab3wamsaflist = new ArrayList<>() , tab4wamsaflist = new ArrayList<>() , tab5wamsaflist = new ArrayList<>() , tab6wamsaflist = new ArrayList<>() , tab7wamsaflist = new ArrayList<>() , tab8wamsaflist = new ArrayList<>() , tab9wamsaflist = new ArrayList<>() , tab10wamsaflist =new ArrayList<>() , tab11wamsaflist =new ArrayList<>() , tab12wamsaflist =new ArrayList<>()
            , tab1wsaflist = new ArrayList<>(), tab2wsaflist = new ArrayList<>(), tab3wsaflist = new ArrayList<>(), tab4wsaflist = new ArrayList<>(), tab5wsaflist = new ArrayList<>(), tab6wsaflist = new ArrayList<>(), tab7wsaflist = new ArrayList<>(), tab8wsaflist = new ArrayList<>(), tab9wsaflist = new ArrayList<>(), tab10wsaflist = new ArrayList<>(), tab11wsaflist = new ArrayList<>(), tab12wsaflist = new ArrayList<>()
            //monthy###############################
            , tab1mamlist =new ArrayList<>(), tab2mamlist =new ArrayList<>(), tab3mamlist =new ArrayList<>(), tab4mamlist =new ArrayList<>(), tab5mamlist =new ArrayList<>(), tab6mamlist =new ArrayList<>(), tab7mamlist =new ArrayList<>(), tab8mamlist =new ArrayList<>(), tab9mamlist =new ArrayList<>(), tab10mamlist = new ArrayList<>(), tab11mamlist = new ArrayList<>(), tab12mamlist = new ArrayList<>(), tab1mlist =new ArrayList<>(), tab2mlist =new ArrayList<>(), tab3mlist =new ArrayList<>(), tab4mlist =new ArrayList<>(), tab5mlist =new ArrayList<>(), tab6mlist =new ArrayList<>(), tab7mlist =new ArrayList<>(), tab8mlist =new ArrayList<>(), tab9mlist =new ArrayList<>(), tab10mlist = new ArrayList<>(), tab11mlist = new ArrayList<>(), tab12mlist = new ArrayList<>()
            , tab1mamsaflist = new ArrayList<>(), tab2mamsaflist = new ArrayList<>(), tab3mamsaflist = new ArrayList<>(), tab4mamsaflist = new ArrayList<>(), tab5mamsaflist = new ArrayList<>(), tab6mamsaflist = new ArrayList<>(), tab7mamsaflist = new ArrayList<>(), tab8mamsaflist = new ArrayList<>(), tab9mamsaflist = new ArrayList<>(), tab10mamsaflist = new ArrayList<>(), tab11mamsaflist = new ArrayList<>(), tab12mamsaflist = new ArrayList<>()
            , tab1msaflist = new ArrayList<>(), tab2msaflist = new ArrayList<>(), tab3msaflist = new ArrayList<>(), tab4msaflist = new ArrayList<>(), tab5msaflist = new ArrayList<>(), tab6msaflist = new ArrayList<>(), tab7msaflist = new ArrayList<>(), tab8msaflist = new ArrayList<>(), tab9msaflist = new ArrayList<>(), tab10msaflist = new ArrayList<>(), tab11msaflist = new ArrayList<>(), tab12msaflist = new ArrayList<>()
            //night###################################
            , tab1namlist = new ArrayList<>(), tab2namlist = new ArrayList<>(), tab3namlist = new ArrayList<>(), tab4namlist = new ArrayList<>(), tab5namlist = new ArrayList<>(), tab6namlist = new ArrayList<>(), tab7namlist = new ArrayList<>(), tab8namlist = new ArrayList<>(), tab9namlist = new ArrayList<>(), tab10namlist = new ArrayList<>(), tab11namlist = new ArrayList<>(), tab12namlist = new ArrayList<>()
            , tab1nlist = new ArrayList<>(), tab2nlist = new ArrayList<>(), tab3nlist = new ArrayList<>(), tab4nlist = new ArrayList<>(), tab5nlist = new ArrayList<>(), tab6nlist = new ArrayList<>(), tab7nlist = new ArrayList<>(), tab8nlist = new ArrayList<>(), tab9nlist = new ArrayList<>(), tab10nlist = new ArrayList<>(), tab11nlist = new ArrayList<>(), tab12nlist = new ArrayList<>()
            , tab1namsaflist = new ArrayList<>(), tab2namsaflist = new ArrayList<>(), tab3namsaflist = new ArrayList<>(), tab4namsaflist = new ArrayList<>(), tab5namsaflist = new ArrayList<>(), tab6namsaflist = new ArrayList<>() , tab7namsaflist = new ArrayList<>() , tab8namsaflist = new ArrayList<>() , tab9namsaflist = new ArrayList<>() , tab10namsaflist = new ArrayList<>() , tab11namsaflist = new ArrayList<>() , tab12namsaflist = new ArrayList<>()
            , tab1nsaflist = new ArrayList<>(), tab2nsaflist = new ArrayList<>(), tab3nsaflist = new ArrayList<>(), tab4nsaflist = new ArrayList<>(), tab5nsaflist = new ArrayList<>(), tab6nsaflist = new ArrayList<>(), tab7nsaflist = new ArrayList<>(), tab8nsaflist = new ArrayList<>(), tab9nsaflist = new ArrayList<>(), tab10nsaflist = new ArrayList<>(), tab11nsaflist = new ArrayList<>(), tab12nsaflist = new ArrayList<>() ;

    String            Tabam1list=""  , Tabam2list=""  , Tabam3list=""  , Tabam4list=""  , Tabam5list=""  , Tabam6list=""  , Tabam7list=""  , Tabam8list=""  , Tabam9list=""  , Tabam10list=""  , Tabam11list=""  , Tabam12list="",
            Tab1list=""  , Tab2list=""  , Tab3list=""  , Tab4list=""  , Tab5list=""  , Tab6list=""  , Tab7list=""  , Tab8list=""  , Tab9list=""  , Tab10list=""  , Tab11list=""  , Tab12list="",
            Tabsafam1list=""  , Tabsafam2list=""  , Tabsafam3list=""  , Tabsafam4list=""  , Tabsafam5list=""  , Tabsafam6list=""  , Tabsafam7list=""  , Tabsafam8list=""  , Tabsafam9list=""  , Tabsafam10list=""  , Tabsafam11list=""  , Tabsafam12list="",
            Tabsaf1list=""  , Tabsaf2list=""  , Tabsaf3list=""  , Tabsaf4list=""  , Tabsaf5list=""  , Tabsaf6list=""  , Tabsaf7list=""  , Tabsaf8list=""  , Tabsaf9list=""  , Tabsaf10list=""  , Tabsaf11list=""  , Tabsaf12list="",
            Tabam1sub1list="",Tabam1sub2list="",Tabam1sub3list="",Tabam1sub4list="",Tabam2sub1list="",Tabam2sub2list="",Tabam2sub3list="",Tabam2sub4list="",Tabam3sub1list="",Tabam3sub2list="",Tabam3sub3list="",Tabam3sub4list=""
            ,Tabam4sub1list="",Tabam4sub2list="",Tabam4sub3list="",Tabam4sub4list="",Tabam5sub1list="",Tabam5sub2list="",Tabam5sub3list="",Tabam5sub4list=""
            ,Tabam6sub1list="",Tabam6sub2list="",Tabam6sub3list="",Tabam6sub4list="",Tabam7sub1list="",Tabam7sub2list="",Tabam7sub3list="",Tabam7sub4list="",Tabam8sub1list="",Tabam8sub2list="",Tabam8sub3list="",Tabam8sub4list=""
            ,Tabam9sub1list="",Tabam9sub2list="",Tabam9sub3list="",Tabam9sub4list="",Tabam10sub1list="",Tabam10sub2list="",Tabam10sub3list="",Tabam10sub4list="",Tabam11sub1list="",Tabam11sub2list="",Tabam11sub3list="",Tabam11sub4list="",Tabam12sub1list="",Tabam12sub2list="",Tabam12sub3list="",Tabam12sub4list=""
            ,Tabsafam1sub1list="",Tabsafam1sub2list="",Tabsafam1sub3list="",Tabsafam1sub4list="",Tabsafam2sub1list="",Tabsafam2sub2list="",Tabsafam2sub3list="",Tabsafam2sub4list="",Tabsafam3sub1list="",Tabsafam3sub2list="",Tabsafam3sub3list="",Tabsafam3sub4list=""
            ,Tabsafam4sub1list="",Tabsafam4sub2list="",Tabsafam4sub3list="",Tabsafam4sub4list="",Tabsafam5sub1list="",Tabsafam5sub2list="",Tabsafam5sub3list="",Tabsafam5sub4list=""
            ,Tabsafam6sub1list="",Tabsafam6sub2list="",Tabsafam6sub3list="",Tabsafam6sub4list="",Tabsafam7sub1list="",Tabsafam7sub2list="",Tabsafam7sub3list="",Tabsafam7sub4list="",Tabsafam8sub1list="",Tabsafam8sub2list="",Tabsafam8sub3list="",Tabsafam8sub4list=""
            ,Tabsafam9sub1list="",Tabsafam9sub2list="",Tabsafam9sub3list="",Tabsafam9sub4list="",Tabsafam10sub1list="",Tabsafam10sub2list="",Tabsafam10sub3list="",Tabsafam10sub4list="",Tabsafam11sub1list="",Tabsafam11sub2list="",Tabsafam11sub3list="",Tabsafam11sub4list="",Tabsafam12sub1list="",Tabsafam12sub2list="",Tabsafam12sub3list="",Tabsafam12sub4list=""
            ,Tabsaf1sub1list="",Tabsaf1sub2list="",Tabsaf1sub3list="",Tabsaf1sub4list="",Tabsaf2sub1list="",Tabsaf2sub2list="",Tabsaf2sub3list="",Tabsaf2sub4list="",Tabsaf3sub1list="",Tabsaf3sub2list="",Tabsaf3sub3list="",Tabsaf3sub4list=""
            ,Tabsaf4sub1list="",Tabsaf4sub2list="",Tabsaf4sub3list="",Tabsaf4sub4list="",Tabsaf5sub1list="",Tabsaf5sub2list="",Tabsaf5sub3list="",Tabsaf5sub4list=""
            ,Tabsaf6sub1list="",Tabsaf6sub2list="",Tabsaf6sub3list="",Tabsaf6sub4list="",Tabsaf7sub1list="",Tabsaf7sub2list="",Tabsaf7sub3list="",Tabsaf7sub4list="",Tabsaf8sub1list="",Tabsaf8sub2list="",Tabsaf8sub3list="",Tabsaf8sub4list=""
            ,Tabsaf9sub1list="",Tabsaf9sub2list="",Tabsaf9sub3list="",Tabsaf9sub4list="",Tabsaf10sub1list="",Tabsaf10sub2list="",Tabsaf10sub3list="",Tabsaf10sub4list="",Tabsaf11sub1list="",Tabsaf11sub2list="",Tabsaf11sub3list="",Tabsaf11sub4list="",Tabsaf12sub1list="",Tabsaf12sub2list="",Tabsaf12sub3list="",Tabsaf12sub4list=""
            ,Tab1sub1list="",Tab1sub2list="",Tab1sub3list="",Tab1sub4list="",Tab2sub1list="",Tab2sub2list="",Tab2sub3list="",Tab2sub4list="",Tab3sub1list="",Tab3sub2list="",Tab3sub3list="",Tab3sub4list=""
            ,Tab4sub1list="",Tab4sub2list="",Tab4sub3list="",Tab4sub4list="",Tab5sub1list="",Tab5sub2list="",Tab5sub3list="",Tab5sub4list=""
            ,Tab6sub1list="",Tab6sub2list="",Tab6sub3list="",Tab6sub4list="",Tab7sub1list="",Tab7sub2list="",Tab7sub3list="",Tab7sub4list="",Tab8sub1list="",Tab8sub2list="",Tab8sub3list="",Tab8sub4list=""
            ,Tab9sub1list="",Tab9sub2list="",Tab9sub3list="",Tab9sub4list="",Tab10sub1list="",Tab10sub2list="",Tab10sub3list="",Tab10sub4list="",Tab11sub1list="",Tab11sub2list="",Tab11sub3list="",Tab11sub4list="",Tab12sub1list="",Tab12sub2list="",Tab12sub3list="",Tab12sub4list="";


    // private AdView mAdView;
    Runnable myRunnable;  Handler handler;ImageView iv;
    DatabaseReference Imei,holidaydata,holidayname,holid0,holid1,holid2,holid3,holid4,holid5,holiw0,holiw1,holiw2,holiw3,holiw4,holiw5,holim0,holim1,holim2,holim3,holim4,holim5,holifd0,holifd1,holifd2,holifd3,holifd4,holifd5,holifw0,holifw1,holifw2,holifw3,holifw4,holifw5,holifm0,holifm1,holifm2,holifm3,holifm4,holifm5,holigd0,holigd1,holigd2,holigd3,holigd4,holigd5,holigw0,holigw1,holigw2,holigw3,holigw4,holigw5,holigm0,holigm1,holigm2,holigm3,holigm4,holigm5,holidtag0,holidtag1,holidtag2,holidtag3,holidtag4,holidtag5,holiwtag0,holiwtag1,holiwtag2,holiwtag3,holiwtag4,holiwtag5,holimtag0,holimtag1,holimtag2,holimtag3,holimtag4,holimtag5,tabd10,tabd11,tabd12,tabd13,tabd14,tabd15, tagd10,tagd11,tagd12,tagd13,tagd14,tagd15,foryoud10,foryoud11,foryoud12,foryoud13,foryoud14,foryoud15,giftd10,giftd11,giftd12,giftd13,giftd14,giftd15,tabd20,tabd21,tabd22,tabd23,tabd24,tabd25,tagd20,tagd21,tagd22,tagd23,tagd24,tagd25,foryoud20,foryoud21,foryoud22,foryoud23,foryoud24,foryoud25,giftd20,giftd21,giftd22,giftd23,giftd24,giftd25,tabd30,tabd31,tabd32,tabd33,tabd34,tabd35,tagd30,tagd31,tagd32,tagd33,tagd34,tagd35,foryoud30,foryoud31,foryoud32,foryoud33,foryoud34,foryoud35,giftd30,giftd31,giftd32,giftd33,giftd34,giftd35,tabd40,tabd41,tabd42,tabd43,tabd44,tabd45,
            tagd40,tagd41,tagd42,tagd43,tagd44,tagd45, foryoud40,foryoud41,foryoud42,foryoud43,foryoud44,foryoud45,giftd40,giftd41,giftd42,giftd43,giftd44,giftd45,tabd50,tabd51,tabd52,tabd53,tabd54,tabd55,tagd50,tagd51,tagd52,tagd53,tagd54,tagd55,foryoud50,foryoud51,foryoud52,foryoud53,foryoud54,foryoud55,giftd50,giftd51,giftd52,giftd53,giftd54,giftd55,tabd60,tabd61,tabd62,tabd63,tabd64,tabd65,tagd60,tagd61,tagd62,tagd63,tagd64,tagd65,foryoud60,foryoud61,foryoud62,foryoud63,foryoud64,foryoud65,giftd60,giftd61,giftd62,giftd63,giftd64,giftd65,tabd70,tabd71,tabd72,tabd73,tabd74,tabd75,tagd70,tagd71,tagd72,tagd73,tagd74,tagd75,foryoud70,foryoud71,foryoud72,foryoud73,foryoud74,
            foryoud75,giftd70,giftd71,giftd72,giftd73,giftd74,giftd75,tabd80,tabd81,tabd82,tabd83,tabd84,tabd85,tagd80,tagd81,tagd82,tagd83,tagd84,tagd85,foryoud80,foryoud81,foryoud82,foryoud83,foryoud84,foryoud85,giftd80,giftd81,giftd82,giftd83,giftd84,giftd85,tabd90,tabd91,tabd92,tabd93,tabd94,tabd95,tagd90,tagd91,tagd92,tagd93,tagd94,tagd95,foryoud90,foryoud91,foryoud92,foryoud93,foryoud94,foryoud95,giftd90,giftd91,giftd92,giftd93,giftd94,giftd95,tabd100,tabd101,tabd102,tabd103,tabd104,tabd105,tagd100,tagd101,tagd102,tagd103,tagd104,tagd105
            ,foryoud100,foryoud101,foryoud102,foryoud103,foryoud104,foryoud105,giftd100,giftd101,giftd102,giftd103,giftd104,giftd105,tabd110,tabd111,tabd112,tabd113,tabd114,tabd115,tagd110,tagd111,tagd112,tagd113,tagd114,tagd115,foryoud110,foryoud111,foryoud112,foryoud113,foryoud114,foryoud115,giftd110,giftd111,giftd112,giftd113,giftd114,giftd115,tabd120,tabd121,tabd122,tabd123,tabd124,tabd125,tagd120,tagd121,tagd122,tagd123,tagd124,tagd125,foryoud120,foryoud121,foryoud122,foryoud123,foryoud124,foryoud125,giftd120,giftd121,giftd122,giftd123,giftd124,giftd125,tab13,tab14,tab15,tab16,
            tabw10,tabw11,tabw12,tabw13,tabw14,tabw15,tagw10,tagw11,tagw12,tagw13,tagw14,tagw15,foryouw10,foryouw11,foryouw12,foryouw13,foryouw14,foryouw15,giftw10,giftw11,giftw12,giftw13,giftw14,giftw15,tabw20,tabw21,tabw22,tabw23,tabw24,tabw25,tagw20,tagw21,tagw22,tagw23,tagw24,tagw25,foryouw20,foryouw21,foryouw22,foryouw23,foryouw24,foryouw25,giftw20,giftw21,giftw22,giftw23,giftw24,giftw25,tabw30,tabw31,tabw32,tabw33,tabw34,tabw35,tagw30,tagw31,tagw32,tagw33,tagw34,tagw35,foryouw30,foryouw31,foryouw32,foryouw33,foryouw34,foryouw35,giftw30,giftw31,giftw32,giftw33,giftw34,giftw35,tabw40,tabw41,tabw42,tabw43,tabw44,tabw45,tagw40,tagw41,tagw42,tagw43,tagw44,tagw45,
            foryouw40,foryouw41,foryouw42,foryouw43,foryouw44,foryouw45,giftw40,giftw41,giftw42,giftw43,giftw44,giftw45,tabw50,tabw51,tabw52,tabw53,tabw54,tabw55,tagw50,tagw51,tagw52,tagw53,tagw54,tagw55,foryouw50,foryouw51,foryouw52,foryouw53,foryouw54,foryouw55,giftw50,giftw51,giftw52,giftw53,giftw54,giftw55,tabw60,tabw61,tabw62,tabw63,tabw64,tabw65,tagw60,tagw61,tagw62,tagw63,tagw64,tagw65,foryouw60,foryouw61,foryouw62,foryouw63,foryouw64,foryouw65,giftw60,giftw61,giftw62,giftw63,giftw64,giftw65,tabw70,tabw71,tabw72,tabw73,tabw74,tabw75,tagw70,tagw71,tagw72,tagw73,tagw74,tagw75,foryouw70,foryouw71,foryouw72,foryouw73,foryouw74,
            foryouw75,giftw70,giftw71,giftw72,giftw73,giftw74,giftw75,tabw80,tabw81,tabw82,tabw83,tabw84,tabw85,tagw80,tagw81,tagw82,tagw83,tagw84,tagw85,foryouw80,foryouw81,foryouw82,foryouw83,foryouw84,foryouw85,giftw80,giftw81,giftw82,giftw83,giftw84,giftw85,tabw90,tabw91,tabw92,tabw93,tabw94,tabw95,tagw90,tagw91,tagw92,tagw93,tagw94,tagw95,foryouw90,foryouw91,foryouw92,foryouw93,foryouw94,foryouw95,giftw90,giftw91,giftw92,giftw93,giftw94,giftw95,tabw100,tabw101,tabw102,tabw103,tabw104,tabw105,tagw100,tagw101,tagw102,tagw103,tagw104,tagw105
            ,foryouw100,foryouw101,foryouw102,foryouw103,foryouw104,foryouw105,giftw100,giftw101,giftw102,giftw103,giftw104,giftw105,tabw110,tabw111,tabw112,tabw113,tabw114,tabw115,tagw110,tagw111,tagw112,tagw113,tagw114,tagw115,foryouw110,foryouw111,foryouw112,foryouw113,foryouw114,foryouw115,giftw110,giftw111,giftw112,giftw113,giftw114,giftw115,tabw120,tabw121,tabw122,tabw123,tabw124,tabw125,tagw120,tagw121,tagw122,tagw123,tagw124,tagw125,foryouw120,foryouw121,foryouw122,foryouw123,foryouw124,foryouw125,giftw120,giftw121,giftw122,giftw123,giftw124,giftw125

            ,tabm10,tabm11,tabm12,tabm13,tabm14,tabm15,tagm10,tagm11,tagm12,tagm13,tagm14,tagm15,foryoum10,foryoum11,foryoum12,foryoum13,foryoum14,foryoum15,giftm10,giftm11,giftm12,giftm13,giftm14,giftm15,tabm20,tabm21,tabm22,tabm23,tabm24,tabm25,tagm20,tagm21,tagm22,tagm23,tagm24,tagm25,foryoum20,foryoum21,foryoum22,foryoum23,foryoum24,foryoum25,giftm20,giftm21,giftm22,giftm23,giftm24,giftm25,tabm30,tabm31,tabm32,tabm33,tabm34,tabm35,tagm30,tagm31,tagm32,tagm33,tagm34,tagm35,foryoum30,foryoum31,foryoum32,foryoum33,foryoum34,foryoum35,giftm30,giftm31,giftm32,giftm33,giftm34,giftm35,tabm40,tabm41,tabm42,tabm43,tabm44,tabm45,tagm40,tagm41,tagm42,tagm43,tagm44,tagm45,
            foryoum40,foryoum41,foryoum42,foryoum43,foryoum44,foryoum45,giftm40,giftm41,giftm42,giftm43,giftm44,giftm45,tabm50,tabm51,tabm52,tabm53,tabm54,tabm55,tagm50,tagm51,tagm52,tagm53,tagm54,tagm55,foryoum50,foryoum51,foryoum52,foryoum53,foryoum54,foryoum55,giftm50,giftm51,giftm52,giftm53,giftm54,giftm55,tabm60,tabm61,tabm62,tabm63,tabm64,tabm65,tagm60,tagm61,tagm62,tagm63,tagm64,tagm65,foryoum60,foryoum61,foryoum62,foryoum63,foryoum64,foryoum65,giftm60,giftm61,giftm62,giftm63,giftm64,giftm65,tabm70,tabm71,tabm72,tabm73,tabm74,tabm75,tagm70,tagm71,tagm72,tagm73,tagm74,tagm75,foryoum70,foryoum71,foryoum72,foryoum73,foryoum74,
            foryoum75,giftm70,giftm71,giftm72,giftm73,giftm74,giftm75,tabm80,tabm81,tabm82,tabm83,tabm84,tabm85,tagm80,tagm81,tagm82,tagm83,tagm84,tagm85,foryoum80,foryoum81,foryoum82,foryoum83,foryoum84,foryoum85,giftm80,giftm81,giftm82,giftm83,giftm84,giftm85,tabm90,tabm91,tabm92,tabm93,tabm94,tabm95,tagm90,tagm91,tagm92,tagm93,tagm94,tagm95,foryoum90,foryoum91,foryoum92,foryoum93,foryoum94,foryoum95,giftm90,giftm91,giftm92,giftm93,giftm94,giftm95,tabm100,tabm101,tabm102,tabm103,tabm104,tabm105,tagm100,tagm101,tagm102,tagm103,tagm104,tagm105
            ,foryoum100,foryoum101,foryoum102,foryoum103,foryoum104,foryoum105,giftm100,giftm101,giftm102,giftm103,giftm104,giftm105,tabm110,tabm111,tabm112,tabm113,tabm114,tabm115,tagm110,tagm111,tagm112,tagm113,tagm114,tagm115,foryoum110,foryoum111,foryoum112,foryoum113,foryoum114,foryoum115,giftm110,giftm111,giftm112,giftm113,giftm114,giftm115,tabm120,tabm121,tabm122,tabm123,tabm124,tabm125,tagm120,tagm121,tagm122,tagm123,tagm124,tagm125,foryoum120,foryoum121,foryoum122,foryoum123,foryoum124,foryoum125,giftm120,giftm121,giftm122,giftm123,giftm124,giftm125

            ,tabn10,tabn11,tabn12,tabn13,tabn14,tabn15,tagn10,tagn11,tagn12,tagn13,tagn14,tagn15,foryoun10,foryoun11,foryoun12,foryoun13,foryoun14,foryoun15,giftn10,giftn11,giftn12,giftn13,giftn14,giftn15,tabn20,tabn21,tabn22,tabn23,tabn24,tabn25,tagn20,tagn21,tagn22,tagn23,tagn24,tagn25,foryoun20,foryoun21,foryoun22,foryoun23,foryoun24,foryoun25,giftn20,giftn21,giftn22,giftn23,giftn24,giftn25,tabn30,tabn31,tabn32,tabn33,tabn34,tabn35,tagn30,tagn31,tagn32,tagn33,tagn34,tagn35,foryoun30,foryoun31,foryoun32,foryoun33,foryoun34,foryoun35,giftn30,giftn31,giftn32,giftn33,giftn34,giftn35,tabn40,tabn41,tabn42,tabn43,tabn44,tabn45,tagn40,tagn41,tagn42,tagn43,tagn44,tagn45,
            foryoun40,foryoun41,foryoun42,foryoun43,foryoun44,foryoun45,giftn40,giftn41,giftn42,giftn43,giftn44,giftn45,tabn50,tabn51,tabn52,tabn53,tabn54,tabn55,tagn50,tagn51,tagn52,tagn53,tagn54,tagn55,foryoun50,foryoun51,foryoun52,foryoun53,foryoun54,foryoun55,giftn50,giftn51,giftn52,giftn53,giftn54,giftn55,tabn60,tabn61,tabn62,tabn63,tabn64,tabn65,tagn60,tagn61,tagn62,tagn63,tagn64,tagn65,foryoun60,foryoun61,foryoun62,foryoun63,foryoun64,foryoun65,giftn60,giftn61,giftn62,giftn63,giftn64,giftn65,tabn70,tabn71,tabn72,tabn73,tabn74,tabn75,tagn70,tagn71,tagn72,tagn73,tagn74,tagn75,foryoun70,foryoun71,foryoun72,foryoun73,foryoun74,foryoun75
            ,giftn70,giftn71,giftn72,giftn73,giftn74,giftn75,tabn80,tabn81,tabn82,tabn83,tabn84,tabn85,tagn80,tagn81,tagn82,tagn83,tagn84,tagn85,foryoun80,foryoun81,foryoun82,foryoun83,foryoun84,foryoun85,giftn80,giftn81,giftn82,giftn83,giftn84,giftn85,tabn90,tabn91,tabn92,tabn93,tabn94,tabn95,tagn90,tagn91,tagn92,tagn93,tagn94,tagn95,foryoun90,foryoun91,foryoun92,foryoun93,foryoun94,foryoun95,giftn90,giftn91,giftn92,giftn93,giftn94,giftn95,tabn100,tabn101,tabn102,tabn103,tabn104,tabn105
            ,tagn100,tagn101,tagn102,tagn103,tagn104,tagn105,foryoun100,foryoun101,foryoun102,foryoun103,foryoun104,foryoun105,giftn100,giftn101,giftn102,giftn103,giftn104,giftn105,tabn110,tabn111,tabn112,tabn113,tabn114,tabn115,tagn110,tagn111,tagn112,tagn113,tagn114,tagn115,foryoun110,foryoun111,foryoun112,foryoun113,foryoun114,foryoun115,giftn110,giftn111,giftn112,giftn113,giftn114,giftn115,tabn120,tabn121,tabn122,tabn123,tabn124,tabn125,tagn120,tagn121,tagn122,tagn123,tagn124,tagn125,foryoun120,foryoun121,foryoun122,foryoun123,foryoun124,foryoun125,giftn120,giftn121,giftn122,giftn123,giftn124,giftn125

            ,tabdam10,tabdam11,tabdam12,tabdam13,tabdam14,tabdam15,tabdam20,tabdam21,tabdam22,tabdam23,tabdam24,tabdam25,tabdam30,tabdam31,tabdam32,tabdam33,tabdam34,tabdam35,tabdam40,tabdam41,tabdam42,tabdam43,tabdam44,tabdam45,tabdam50,tabdam51,tabdam52,tabdam53,tabdam54,tabdam55,tabdam60,tabdam61,tabdam62,tabdam63,tabdam64,tabdam65, tabdam70,tabdam71,tabdam72,tabdam73,tabdam74,tabdam75,tabdam80,tabdam81,tabdam82,tabdam83,tabdam84,tabdam85,tabdam90,tabdam91,tabdam92,tabdam93,tabdam94,tabdam95,tabdam100,tabdam101,tabdam102,tabdam103,tabdam104,tabdam105,tabdam110,tabdam111,tabdam112,tabdam113,tabdam114,tabdam115,tabdam120,tabdam121,tabdam122,tabdam123,tabdam124,tabdam125
            ,tabwam10,tabwam11,tabwam12,tabwam13,tabwam14,tabwam15,tabwam20,tabwam21,tabwam22,tabwam23,tabwam24,tabwam25,tabwam30,tabwam31,tabwam32,tabwam33,tabwam34,tabwam35,tabwam40,tabwam41,tabwam42,tabwam43,tabwam44,tabwam45,tabwam50,tabwam51,tabwam52,tabwam53,tabwam54,tabwam55,tabwam60,tabwam61,tabwam62,tabwam63,tabwam64,tabwam65, tabwam70,tabwam71,tabwam72,tabwam73,tabwam74,tabwam75,tabwam80,tabwam81,tabwam82,tabwam83,tabwam84,tabwam85,tabwam90,tabwam91,tabwam92,tabwam93,tabwam94,tabwam95,tabwam100,tabwam101,tabwam102,tabwam103,tabwam104,tabwam105,tabwam110,tabwam111,tabwam112,tabwam113,tabwam114,tabwam115,tabwam120,tabwam121,tabwam122,tabwam123,tabwam124,tabwam125
            ,tabmam10,tabmam11,tabmam12,tabmam13,tabmam14,tabmam15,tabmam20,tabmam21,tabmam22,tabmam23,tabmam24,tabmam25,tabmam30,tabmam31,tabmam32,tabmam33,tabmam34,tabmam35,tabmam40,tabmam41,tabmam42,tabmam43,tabmam44,tabmam45,tabmam50,tabmam51,tabmam52,tabmam53,tabmam54,tabmam55,tabmam60,tabmam61,tabmam62,tabmam63,tabmam64,tabmam65, tabmam70,tabmam71,tabmam72,tabmam73,tabmam74,tabmam75,tabmam80,tabmam81,tabmam82,tabmam83,tabmam84,tabmam85,tabmam90,tabmam91,tabmam92,tabmam93,tabmam94,tabmam95,tabmam100,tabmam101,tabmam102,tabmam103,tabmam104,tabmam105,tabmam110,tabmam111,tabmam112,tabmam113,tabmam114,tabmam115,tabmam120,tabmam121,tabmam122,tabmam123,tabmam124,tabmam125
            ,tabnam10,tabnam11,tabnam12,tabnam13,tabnam14,tabnam15,tabnam20,tabnam21,tabnam22,tabnam23,tabnam24,tabnam25,tabnam30,tabnam31,tabnam32,tabnam33,tabnam34,tabnam35,tabnam40,tabnam41,tabnam42,tabnam43,tabnam44,tabnam45,tabnam50,tabnam51,tabnam52,tabnam53,tabnam54,tabnam55,tabnam60,tabnam61,tabnam62,tabnam63,tabnam64,tabnam65, tabnam70,tabnam71,tabnam72,tabnam73,tabnam74,tabnam75,tabnam80,tabnam81,tabnam82,tabnam83,tabnam84,tabnam85,tabnam90,tabnam91,tabnam92,tabnam93,tabnam94,tabnam95,tabnam100,tabnam101,tabnam102,tabnam103,tabnam104,tabnam105,tabnam110,tabnam111,tabnam112,tabnam113,tabnam114,tabnam115,tabnam120,tabnam121,tabnam122,tabnam123,tabnam124,tabnam125;

    WindowManager wm;
    TextView textView,textemp,title;public static int t=0;
    ProgressBar p;public static String data="",check="";
    EditText editTex;BroadcastReceiver broadcastReceiver,serviceconnected;boolean isdualsim=false;public static int slot;
    LayoutInflater in;
    forothersdialog cd;confirm_dialog cdd;recharge rech;
    String tabd10t="",tabd11t="",tabd12t="",tabd13t="",tabd14t="",tabd15t="",tagd10t="",tagd11t="",tagd12t="",tagd13t="",tagd14t="",tagd15t="",foryoud10t="",foryoud11t="",foryoud12t="",foryoud13t="",foryoud14t="",foryoud15t="",giftd10t="",giftd11t="",giftd12t="",giftd13t="",giftd14t="",giftd15t="",tabd20t="",tabd21t="",tabd22t="",tabd23t="",tabd24t="",tabd25t="",tagd20t="",tagd21t="",tagd22t="",tagd23t="",tagd24t="",tagd25t="",foryoud20t="",foryoud21t="",foryoud22t="",foryoud23t="",foryoud24t="",foryoud25t="",giftd20t="",giftd21t="",giftd22t="",giftd23t="",giftd24t="",giftd25t="",tabd30t="",tabd31t="",tabd32t="",tabd33t="",tabd34t="",tabd35t="",tagd30t="",tagd31t="",tagd32t="",tagd33t="",tagd34t="",tagd35t="",foryoud30t="",foryoud31t="",foryoud32t="",foryoud33t="",foryoud34t="",foryoud35t="",giftd30t="",giftd31t="",giftd32t="",giftd33t="",giftd34t="",giftd35t="",tabd40t="",tabd41t="",tabd42t="",tabd43t="",tabd44t="",tabd45t="",
            tagd40t="",tagd41t="",tagd42t="",tagd43t="",tagd44t="",tagd45t="", foryoud40t="",foryoud41t="",foryoud42t="",foryoud43t="",foryoud44t="",foryoud45t="",giftd40t="",giftd41t="",giftd42t="",giftd43t="",giftd44t="",giftd45t="",tabd50t="",tabd51t="",tabd52t="",tabd53t="",tabd54t="",tabd55t="",tagd50t="",tagd51t="",tagd52t="",tagd53t="",tagd54t="",tagd55t="",foryoud50t="",foryoud51t="",foryoud52t="",foryoud53t="",foryoud54t="",foryoud55t="",giftd50t="",giftd51t="",giftd52t="",giftd53t="",giftd54t="",giftd55t="",tabd60t="",tabd61t="",tabd62t="",tabd63t="",tabd64t="",tabd65t="",tagd60t="",tagd61t="",tagd62t="",tagd63t="",tagd64t="",tagd65t="",foryoud60t="",foryoud61t="",foryoud62t="",foryoud63t="",foryoud64t="",foryoud65t="",giftd60t="",giftd61t="",giftd62t="",giftd63t="",giftd64t="",giftd65t="",tabd70t="",tabd71t="",tabd72t="",tabd73t="",tabd74t="",tabd75t="",tagd70t="",tagd71t="",tagd72t="",tagd73t="",tagd74t="",tagd75t="",foryoud70t="",foryoud71t="",foryoud72t="",foryoud73t="",foryoud74t="",
            foryoud75t="",giftd70t="",giftd71t="",giftd72t="",giftd73t="",giftd74t="",giftd75t="",tabd80t="",tabd81t="",tabd82t="",tabd83t="",tabd84t="",tabd85t="",tagd80t="",tagd81t="",tagd82t="",tagd83t="",tagd84t="",tagd85t="",foryoud80t="",foryoud81t="",foryoud82t="",foryoud83t="",foryoud84t="",foryoud85t="",giftd80t="",giftd81t="",giftd82t="",giftd83t="",giftd84t="",giftd85t="",tabd90t="",tabd91t="",tabd92t="",tabd93t="",tabd94t="",tabd95t="",tagd90t="",tagd91t="",tagd92t="",tagd93t="",tagd94t="",tagd95t="",foryoud90t="",foryoud91t="",foryoud92t="",foryoud93t="",foryoud94t="",foryoud95t="",giftd90t="",giftd91t="",giftd92t="",giftd93t="",giftd94t="",giftd95t="",tabd100t="",tabd101t="",tabd102t="",tabd103t="",tabd104t="",tabd105t=""
            , tagd100t="",tagd101t="",tagd102t="",tagd103t="",tagd104t="",tagd105t ="",foryoud100t="",foryoud101t="",foryoud102t="",foryoud103t="",foryoud104t="",foryoud105t="",giftd100t="",giftd101t="",giftd102t="",giftd103t="",giftd104t="",giftd105t="",tabd110t="",tabd111t="",tabd112t="",tabd113t="",tabd114t="",tabd115t="",tagd110t="",tagd111t="",tagd112t="",tagd113t="",tagd114t="",tagd115t="",foryoud110t="",foryoud111t="",foryoud112t="",foryoud113t="",foryoud114t="",foryoud115t="",giftd110t="",giftd111t="",giftd112t="",giftd113t="",giftd114t="",giftd115t="",tabd120t="",tabd121t="",tabd122t="",tabd123t="",tabd124t="",tabd125t="",tagd120t="",tagd121t="",tagd122t="",tagd123t="",tagd124t="",tagd125t="",foryoud120t="",foryoud121t="",foryoud122t="",foryoud123t="",foryoud124t="",foryoud125t="",giftd120t="",giftd121t="",giftd122t="",giftd123t="",giftd124t="",giftd125t="",tab13t="",tab14t="",tab15t="",tab16t="",
            tabw10t="",tabw11t="",tabw12t="",tabw13t="",tabw14t="",tabw15t="",tagw10t="",tagw11t="",tagw12t="",tagw13t="",tagw14t="",tagw15t="",foryouw10t="",foryouw11t="",foryouw12t="",foryouw13t="",foryouw14t="",foryouw15t="",giftw10t="",giftw11t="",giftw12t="",giftw13t="",giftw14t="",giftw15t="",tabw20t="",tabw21t="",tabw22t="",tabw23t="",tabw24t="",tabw25t="",tagw20t="",tagw21t="",tagw22t="",tagw23t="",tagw24t="",tagw25t="",foryouw20t="",foryouw21t="",foryouw22t="",foryouw23t="",foryouw24t="",foryouw25t="",giftw20t="",giftw21t="",giftw22t="",giftw23t="",giftw24t="",giftw25t="",tabw30t="",tabw31t="",tabw32t="",tabw33t="",tabw34t="",tabw35t="",tagw30t="",tagw31t="",tagw32t="",tagw33t="",tagw34t="",tagw35t="",foryouw30t="",foryouw31t="",foryouw32t="",foryouw33t="",foryouw34t="",foryouw35t="",giftw30t="",giftw31t="",giftw32t="",giftw33t="",giftw34t="",giftw35t="",tabw40t="",tabw41t="",tabw42t="",tabw43t="",tabw44t="",tabw45t="",
            tagw40t="",tagw41t="",tagw42t="",tagw43t="",tagw44t="",tagw45t="",  foryouw40t="",foryouw41t="",foryouw42t,foryouw43t="",foryouw44t="",foryouw45t="",giftw40t="",giftw41t="",giftw42t="",giftw43t="",giftw44t="",giftw45t="",tabw50t="",tabw51t="",tabw52t="",tabw53t="",tabw54t="",tabw55t="",tagw50t="",tagw51t="",tagw52t="",tagw53t="",tagw54t="",tagw55t="",foryouw50t="",foryouw51t="",foryouw52t="",foryouw53t="",foryouw54t="",foryouw55t="",giftw50t="",giftw51t="",giftw52t="",giftw53t="",giftw54t="",giftw55t="",tabw60t="",tabw61t="",tabw62t="",tabw63t="",tabw64t="",tabw65t="",tagw60t="",tagw61t="",tagw62t="",tagw63t="",tagw64t="",tagw65t="",foryouw60t="",foryouw61t="",foryouw62t="",foryouw63t="",foryouw64t="",foryouw65t="",giftw60t="",giftw61t="",giftw62t="",giftw63t="",giftw64t="",giftw65t="",tabw70t="",tabw71t="",tabw72t="",tabw73t="",tabw74t="",tabw75t="",tagw70t="",tagw71t="",tagw72t="",tagw73t="",tagw74t="",tagw75t="",foryouw70t="",foryouw71t="",foryouw72t="",foryouw73t="",foryouw74t="",
            foryouw75t="",giftw70t="",giftw71t="",giftw72t="",giftw73t="",giftw74t="",giftw75t="",tabw80t="",tabw81t="",tabw82t="",tabw83t="",tabw84t="",tabw85t="",tagw80t="",tagw81t="",tagw82t="",tagw83t="",tagw84t="",tagw85t="",foryouw80t="",foryouw81t="",foryouw82t="",foryouw83t="",foryouw84t="",foryouw85t="",giftw80t="",giftw81t="",giftw82t="",giftw83t="",giftw84t="",giftw85t="",tabw90t="",tabw91t="",tabw92t="",tabw93t="",tabw94t="",tabw95t="",tagw90t="",tagw91t="",tagw92t="",tagw93t="",tagw94t="",tagw95t="",foryouw90t="",foryouw91t="",foryouw92t="",foryouw93t="",foryouw94t="",foryouw95t="",giftw90t="",giftw91t="",giftw92t="",giftw93t="",giftw94t="",giftw95t="",tabw100t="",tabw101t="",tabw102t="",tabw103t="",tabw104t="",tabw105t="",tagw100t="",tagw101t="",tagw102t="",tagw103t="",tagw104t="",tagw105t=""
            ,foryouw100t="",foryouw101t="",foryouw102t="",foryouw103t="",foryouw104t="",foryouw105t="",giftw100t="",giftw101t="",giftw102t="",giftw103t="",giftw104t="",giftw105t="",tabw110t="",tabw111t="",tabw112t="",tabw113t="",tabw114t="",tabw115t="",tagw110t="",tagw111t="",tagw112t="",tagw113t="",tagw114t="",tagw115t="",foryouw110t="",foryouw111t="",foryouw112t="",foryouw113t="",foryouw114t="",foryouw115t="",giftw110t="",giftw111t="",giftw112t="",giftw113t="",giftw114t="",giftw115t="",tabw120t="",tabw121t="",tabw122t="",tabw123t="",tabw124t="",tabw125t="",tagw120t="",tagw121t="",tagw122t="",tagw123t="",tagw124t="",tagw125t="",foryouw120t="",foryouw121t="",foryouw122t="",foryouw123t="",foryouw124t="",foryouw125t="",giftw120t="",giftw121t="",giftw122t="",giftw123t="",giftw124t="",giftw125t=""

            ,tabm10t="",tabm11t="",tabm12t="",tabm13t="",tabm14t="",tabm15t="",tagm10t="",tagm11t="",tagm12t="",tagm13t="",tagm14t="",tagm15t="",foryoum10t="",foryoum11t="",foryoum12t="",foryoum13t="",foryoum14t="",foryoum15t="",giftm10t="",giftm11t="",giftm12t="",giftm13t="",giftm14t="",giftm15t="",tabm20t="",tabm21t="",tabm22t="",tabm23t="",tabm24t="",tabm25t="",tagm20t="",tagm21t="",tagm22t="",tagm23t="",tagm24t="",tagm25t="",foryoum20t="",foryoum21t="",foryoum22t="",foryoum23t="",foryoum24t="",foryoum25t="",giftm20t="",giftm21t="",giftm22t="",giftm23t="",giftm24t="",giftm25t="",tabm30t="",tabm31t="",tabm32t="",tabm33t="",tabm34t="",tabm35t="",tagm30t="",tagm31t="",tagm32t="",tagm33t="",tagm34t="",tagm35t="",foryoum30t="",foryoum31t="",foryoum32t="",foryoum33t="",foryoum34t="",foryoum35t="",giftm30t="",giftm31t="",giftm32t="",giftm33t="",giftm34t="",giftm35t="",tabm40t="",tabm41t="",tabm42t="",tabm43t="",tabm44t="",tabm45t="",
            tagm40t="",tagm41t="",tagm42t="",tagm43t="",tagm44t="",tagm45t="", foryoum40t="",foryoum41t="",foryoum42t="",foryoum43t="",foryoum44t="",foryoum45t="",giftm40t="",giftm41t="",giftm42t="",giftm43t="",giftm44t="",giftm45t,tabm50t="",tabm51t="",tabm52t="",tabm53t="",tabm54t="",tabm55t="",tagm50t="",tagm51t="",tagm52t="",tagm53t="",tagm54t="",tagm55t="",foryoum50t="",foryoum51t="",foryoum52t="",foryoum53t="",foryoum54t="",foryoum55t="",giftm50t="",giftm51t="",giftm52t="",giftm53t="",giftm54t="",giftm55t="",tabm60t="",tabm61t="",tabm62t="",tabm63t="",tabm64t="",tabm65t="",tagm60t="",tagm61t="",tagm62t="",tagm63t="",tagm64t="",tagm65t="",foryoum60t="",foryoum61t="",foryoum62t="",foryoum63t="",foryoum64t="",foryoum65t="",giftm60t="",giftm61t="",giftm62t="",giftm63t="",giftm64t="",giftm65t="",tabm70t="",tabm71t="",tabm72t="",tabm73t="",tabm74t="",tabm75t="",tagm70t="",tagm71t="",tagm72t="",tagm73t="",tagm74t="",tagm75t="",foryoum70t="",foryoum71t="",foryoum72t="",foryoum73t="",foryoum74t="",
            foryoum75t="",giftm70t="",giftm71t="",giftm72t="",giftm73t="",giftm74t="",giftm75t="",tabm80t="",tabm81t="",tabm82t="",tabm83t="",tabm84t="",tabm85t="",tagm80t="",tagm81t="",tagm82t="",tagm83t="",tagm84t="",tagm85t="",foryoum80t="",foryoum81t="",foryoum82t="",foryoum83t="",foryoum84t="",foryoum85t="",giftm80t="",giftm81t="",giftm82t="",giftm83t="",giftm84t="",giftm85t="",tabm90t="",tabm91t="",tabm92t="",tabm93t="",tabm94t="",tabm95t="",tagm90t="",tagm91t="",tagm92t="",tagm93t="",tagm94t="",tagm95t="",foryoum90t="",foryoum91t="",foryoum92t="",foryoum93t="",foryoum94t="",foryoum95t="",giftm90t="",giftm91t="",giftm92t="",giftm93t="",giftm94t="",giftm95t="",tabm100t="",tabm101t="",tabm102t="",tabm103t="",tabm104t="",tabm105t="",tagm100t="",tagm101t="",tagm102t="",tagm103t="",tagm104t="",tagm105t=""
            ,foryoum100t="",foryoum101t="",foryoum102t="",foryoum103t="",foryoum104t="",foryoum105t="",giftm100t="",giftm101t="",giftm102t="",giftm103t="",giftm104t="",giftm105t="",tabm110t="",tabm111t="",tabm112t="",tabm113t="",tabm114t="",tabm115t="",tagm110t="",tagm111t="",tagm112t="",tagm113t="",tagm114t="",tagm115t="",foryoum110t="",foryoum111t="",foryoum112t="",foryoum113t="",foryoum114t="",foryoum115t="",giftm110t="",giftm111t="",giftm112t="",giftm113t="",giftm114t="",giftm115t="",tabm120t="",tabm121t="",tabm122t="",tabm123t="",tabm124t="",tabm125t="",tagm120t="",tagm121t="",tagm122t="",tagm123t="",tagm124t="",tagm125t="",foryoum120t="",foryoum121t="",foryoum122t="",foryoum123t="",foryoum124t="",foryoum125t="",giftm120t="",giftm121t="",giftm122t="",giftm123t="",giftm124t="",giftm125t=""

            ,tabn10t="",tabn11t="",tabn12t="",tabn13t="",tabn14t="",tabn15t="",tagn10t="",tagn11t="",tagn12t="",tagn13t="",tagn14t="",tagn15t="",foryoun10t="",foryoun11t="",foryoun12t="",foryoun13t="",foryoun14t="",foryoun15t="",giftn10t="",giftn11t="",giftn12t="",giftn13t="",giftn14t="",giftn15t="",tabn20t="",tabn21t="",tabn22t="",tabn23t="",tabn24t="",tabn25t="",tagn20t="",tagn21t="",tagn22t="",tagn23t="",tagn24t="",tagn25t="",foryoun20t="",foryoun21t="",foryoun22t="",foryoun23t="",foryoun24t="",foryoun25t="",giftn20t="",giftn21t="",giftn22t="",giftn23t="",giftn24t="",giftn25t="",tabn30t="",tabn31t="",tabn32t="",tabn33t="",tabn34t="",tabn35t="",tagn30t="",tagn31t="",tagn32t="",tagn33t="",tagn34t="",tagn35t="",foryoun30t="",foryoun31t="",foryoun32t="",foryoun33t="",foryoun34t="",foryoun35t="",giftn30t="",giftn31t="",giftn32t="",giftn33t="",giftn34t="",giftn35t="",tabn40t="",tabn41t="",tabn42t="",tabn43t="",tabn44t="",tabn45t="",tagn40t="",tagn41t="",tagn42t="",tagn43t="",tagn44t="",tagn45t="",
            foryoun40t="",foryoun41t="",foryoun42t="",foryoun43t="",foryoun44t="",foryoun45t="",giftn40t="",giftn41t="",giftn42t="",giftn43t="",giftn44t="",giftn45t="",tabn50t="",tabn51t="",tabn52t="",tabn53t="",tabn54t="",tabn55t="",tagn50t="",tagn51t="",tagn52t="",tagn53t="",tagn54t="",tagn55t="",foryoun50t="",foryoun51t="",foryoun52t="",foryoun53t="",foryoun54t="",foryoun55t="",giftn50t="",giftn51t="",giftn52t="",giftn53t="",giftn54t="",giftn55t="",tabn60t="",tabn61t="",tabn62t="",tabn63t="",tabn64t="",tabn65t="",tagn60t="",tagn61t="",tagn62t="",tagn63t="",tagn64t="",tagn65t="",foryoun60t="",foryoun61t="",foryoun62t="",foryoun63t="",foryoun64t="",foryoun65t="",giftn60t="",giftn61t="",giftn62t="",giftn63t="",giftn64t="",giftn65t="",tabn70t="",tabn71t="",tabn72t="",tabn73t="",tabn74t="",tabn75t="",tagn70t="",tagn71t="",tagn72t="",tagn73t="",tagn74t="",tagn75t="",foryoun70t="",foryoun71t="",foryoun72t="",foryoun73t="",foryoun74t="",foryoun75t=""
            ,giftn70t="",giftn71t="",giftn72t="",giftn73t="",giftn74t="",giftn75t="",tabn80t="",tabn81t="",tabn82t="",tabn83t="",tabn84t="",tabn85t="",tagn80t="",tagn81t="",tagn82t="",tagn83t="",tagn84t="",tagn85t="",foryoun80t="",foryoun81t="",foryoun82t="",foryoun83t="",foryoun84t="",foryoun85t="",giftn80t="",giftn81t="",giftn82t="",giftn83t="",giftn84t="",giftn85t="",tabn90t="",tabn91t="",tabn92t="",tabn93t="",tabn94t="",tabn95t="",tagn90t="",tagn91t="",tagn92t="",tagn93t="",tagn94t="",tagn95t="",foryoun90t="",foryoun91t="",foryoun92t="",foryoun93t="",foryoun94t="",foryoun95t="",giftn90t="",giftn91t="",giftn92t="",giftn93t="",giftn94t="",giftn95t="",tabn100t="",tabn101t="",tabn102t="",tabn103t="",tabn104t="",tabn105t=""
            ,tagn100t="",tagn101t="",tagn102t="",tagn103t="",tagn104t="",tagn105t="",foryoun100t="",foryoun101t="",foryoun102t="",foryoun103t="",foryoun104t="",foryoun105t="",giftn100t="",giftn101t="",giftn102t="",giftn103t="",giftn104t="",giftn105t="",tabn110t="",tabn111t="",tabn112t="",tabn113t="",tabn114t="",tabn115t="",tagn110t="",tagn111t="",tagn112t="",tagn113t="",tagn114t="",tagn115t="",foryoun110t="",foryoun111t="",foryoun112t="",foryoun113t="",foryoun114t="",foryoun115t="",giftn110t="",giftn111t="",giftn112t="",giftn113t="",giftn114t="",giftn115t="",tabn120t="",tabn121t="",tabn122t="",tabn123t="",tabn124t="",tabn125t="",tagn120t="",tagn121t="",tagn122t="",tagn123t="",tagn124t="",tagn125t="",foryoun120t="",foryoun121t="",foryoun122t="",foryoun123t="",foryoun124t="",foryoun125t="",giftn120t="",giftn121t="",giftn122t="",giftn123t="",giftn124t="",giftn125t=""

            ,tabdam10t="",tabdam11t="",tabdam12t="",tabdam13t="",tabdam14t="",tabdam15t="",tabdam20t="",tabdam21t="",tabdam22t="",tabdam23t="",tabdam24t="",tabdam25t="",tabdam30t="",tabdam31t="",tabdam32t="",tabdam33t="",tabdam34t="",tabdam35t="",tabdam40t="",tabdam41t="",tabdam42t="",tabdam43t="",tabdam44t="",tabdam45t="",tabdam50t="",tabdam51t="",tabdam52t="",tabdam53t="",tabdam54t="",tabdam55t="",tabdam60t="",tabdam61t="",tabdam62t="",tabdam63t="",tabdam64t="",tabdam65t="", tabdam70t="",tabdam71t="",tabdam72t="",tabdam73t="",tabdam74t="",tabdam75t="",tabdam80t="",tabdam81t="",tabdam82t="",tabdam83t="",tabdam84t="",tabdam85t="",tabdam90t="",tabdam91t="",tabdam92t="",tabdam93t="",tabdam94t="",tabdam95t="",tabdam100t="",tabdam101t="",tabdam102t="",tabdam103t="",tabdam104t="",tabdam105t="",tabdam110t="",tabdam111t="",tabdam112t="",tabdam113t="",tabdam114t="",tabdam115t="",tabdam120t="",tabdam121t="",tabdam122t="",tabdam123t="",tabdam124t="",tabdam125t=""
            ,tabwam10t="",tabwam11t="",tabwam12t="",tabwam13t="",tabwam14t="",tabwam15t="",tabwam20t="",tabwam21t="",tabwam22t="",tabwam23t="",tabwam24t="",tabwam25t="",tabwam30t="",tabwam31t="",tabwam32t="",tabwam33t="",tabwam34t="",tabwam35t="",tabwam40t="",tabwam41t="",tabwam42t="",tabwam43t="",tabwam44t="",tabwam45t="",tabwam50t="",tabwam51t="",tabwam52t="",tabwam53t="",tabwam54t="",tabwam55t="",tabwam60t="",tabwam61t="",tabwam62t="",tabwam63t="",tabwam64t="",tabwam65t="", tabwam70t="",tabwam71t="",tabwam72t="",tabwam73t="",tabwam74t="",tabwam75t="",tabwam80t="",tabwam81t="",tabwam82t="",tabwam83t="",tabwam84t="",tabwam85t="",tabwam90t="",tabwam91t="",tabwam92t="",tabwam93t="",tabwam94t="",tabwam95t="",tabwam100t="",tabwam101t="",tabwam102t="",tabwam103t="",tabwam104t="",tabwam105t="",tabwam110t="",tabwam111t="",tabwamt112t="",tabwam113t="",tabwam114t="",tabwam115t="",tabwam120t="",tabwam121t="",tabwamt122t="",tabwam123t="",tabwam124t="",tabwam125t=""
            ,tabmam10t="",tabmam11t="",tabmam12t="",tabmam13t="",tabmam14t="",tabmam15t="",tabmam20t="",tabmam21t="",tabmam22t="",tabmam23t="",tabmam24t="",tabmam25t="",tabmam30t="",tabmam31t="",tabmam32t="",tabmam33t="",tabmam34t="",tabmam35t="",tabmam40t="",tabmam41t="",tabmam42t="",tabmam43t="",tabmam44t="",tabmam45t="",tabmam50t="",tabmam51t="",tabmam52t="",tabmam53t="",tabmam54t="",tabmam55t="",tabmam60t="",tabmam61t="",tabmam62t="",tabmam63t="",tabmam64t="",tabmam65t="", tabmam70t="",tabmam71t="",tabmam72t="",tabmam73t="",tabmam74t="",tabmam75t="",tabmam80t="",tabmam81t="",tabmam82t="",tabmam83t="",tabmam84t="",tabmam85t="",tabmam90t="",tabmam91t="",tabmam92t="",tabmam93t="",tabmam94t="",tabmam95t="",tabmam100t="",tabmam101t="",tabmam102t="",tabmam103t="",tabmam104t="",tabmam105t="",tabmam110t="",tabmam111t="",tabmam112t="",tabmam113t="",tabmam114t="",tabmam115t="",tabmam120t="",tabmam121t="",tabmam122t="",tabmam123t="",tabmam124t="",tabmam125t=""
            ,tabnam10t="",tabnam11t="",tabnam12t="",tabnam13t="",tabnam14t="",tabnam15t="",tabnam20t="",tabnam21t="",tabnam22t="",tabnam23t="",tabnam24t="",tabnam25t="",tabnam30t="",tabnam31t="",tabnam32t="",tabnam33t="",tabnam34t="",tabnam35t="",tabnam40t="",tabnam41t="",tabnam42t="",tabnam43t="",tabnam44t="",tabnam45t="",tabnam50t="",tabnam51t="",tabnam52t="",tabnam53t="",tabnam54t="",tabnam55t="",tabnam60t="",tabnam61t="",tabnam62t="",tabnam63t="",tabnam64t="",tabnam65t="", tabnam70t="",tabnam71t="",tabnam72t="",tabnam73t="",tabnam74t="",tabnam75t="",tabnam80t="",tabnam81t="",tabnam82t="",tabnam83t="",tabnam84t="",tabnam85t="",tabnam90t="",tabnam91t="",tabnam92t="",tabnam93t="",tabnam94t="",tabnam95t="",tabnam100t="",tabnam101t="",tabnam102t="",tabnam103t="",tabnam104t="",tabnam105t="",tabnam110t="",tabnam111t="",tabnam112t="",tabnam113t="",tabnam114t="",tabnam115t="",tabnam120t="",tabnam121t="",tabnam122t="",tabnam123t="",tabnam124t="",tabnam125t="";


    public static RotateAnimation rotateAnimation;  View view1;LoginDataBaseAdapter loginDataBaseAdapter;public static int adcount=0;SharedPreferences sharedPreferences;
    private TextView textViewocr;
    private SurfaceView surfaceView;
SwitchCompat etsaf;
    /*private CameraSource cameraSource;
    private TextRecognizer textRecognizer;*/
    TelephonyManager telephonyManager;
    boolean isupdate=false;
    private TextToSpeech textToSpeech;
    private String stringResult = null;
    TabLayout tabLayout;
    public CardView cardlarge,cardsmall;
    int frx=0,tox=112;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        /*ActivityCompat.requestPermissions(this, new String[]{CAMERA}, PackageManager.PERMISSION_GRANTED);
        textToSpeech = new TextToSpeech(this, new TextToSpeech.OnInitListener() {
            @Override
            public void onInit(int status) {
            }
        });*/
        sharedPreferences=getSharedPreferences("but", Context.MODE_PRIVATE);
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        etsaf=findViewById(R.id.switchButton);
        if(sharedPreferences.getBoolean("issafaricom",false)){
            etsaf.setChecked(false);
        }else {
            etsaf.setChecked(true);

        }
        etsaf.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if(sharedPreferences.getBoolean("issafaricom",false)){
                    SharedPreferences.Editor editor=sharedPreferences.edit();
                    editor.putBoolean("issafaricom",false);
                    editor.commit();
                    //item.setIcon(R.drawable.ethio_telecom);
                }else {
                    SharedPreferences.Editor editor=sharedPreferences.edit();
                    editor.putBoolean("issafaricom",true);
                    editor.commit();
                    //item.setIcon(R.drawable.safari);

                }
                Intent intent=new Intent(getApplicationContext(),MainActivity.class);
                startActivity(intent);
                overridePendingTransition(R.anim.slide_in_left,R.anim.slide_in_right);

                finish();
               // overridePendingTransition(R.anim.slide_in_left,R.anim.slide_in_right);
                //overridePendingTransition(R.anim.slide_in_left,0);


               // overridePendingTransition(R.anim.slide_in_left,R.anim.slide_in_right);

            }
        });
        /*cardlarge=findViewById(R.id.cardlarge);
        cardsmall=findViewById(R.id.cardsmall);
        cardsmall.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
               /* Drawable unwrappedDrawable = AppCompatResources.getDrawable(getApplicationContext(), R.drawable.internet);
                Drawable wrappedDrawable = DrawableCompat.wrap(unwrappedDrawable);
                DrawableCompat.setTint(wrappedDrawable, Color.RED);*/
                /*tox = cardlarge.getMeasuredWidth()-cardsmall.getMeasuredWidth();

                Animation animation = new TranslateAnimation(frx, tox,0, 0);
                animation.setDuration(500);
                animation.setFillAfter(true);
                cardsmall.startAnimation(animation);
                int temp=frx;
                frx=tox;
                tox=temp;
                // cardsmall.setVisibility(0);
            }
        });
        cardlarge.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
               /* Drawable unwrappedDrawable = AppCompatResources.getDrawable(getApplicationContext(), R.drawable.internet);
                Drawable wrappedDrawable = DrawableCompat.wrap(unwrappedDrawable);
                DrawableCompat.setTint(wrappedDrawable, Color.RED);*/
               /* tox = cardlarge.getMeasuredWidth()-cardsmall.getMeasuredWidth();
                Animation animation = new TranslateAnimation(frx, tox,0, 0);
                animation.setDuration(500);
                animation.setFillAfter(true);
                cardsmall.startAnimation(animation);
                int temp=frx;
                frx=tox;
                tox=temp;
                // cardsmall.setVisibility(0);
            }
        });*/
        fd=FirebaseDatabase.getInstance();
        dr=fd.getReference("kaleb");
        holidaydata=fd.getReference("Telepackage/holiday");
        holidayname=fd.getReference("Telepackage/holiday/name");
        loginDataBaseAdapter = new LoginDataBaseAdapter(this);
        loginDataBaseAdapter = loginDataBaseAdapter.open();
        //loginDataBaseAdapter.setsubtab("wee","2","2",loginDataBaseAdapter.subtabet);


       /*++++ for(int i=1;i<13;i++){
            loginDataBaseAdapter.settabname("kalebb",""+String.valueOf(i),loginDataBaseAdapter.tabnameet);
            loginDataBaseAdapter.settabname("kalebbam",""+i,loginDataBaseAdapter.tabnameetam);
            loginDataBaseAdapter.settabname("kalebsaf",""+String.valueOf(i),loginDataBaseAdapter.tabnamesaf);
            loginDataBaseAdapter.settabname("kalebsafam",""+i,loginDataBaseAdapter.tabnamesafam);
        }*/

        if(!(sharedPreferences.getBoolean("updated",false))){
            if(loginDataBaseAdapter.isempty1(loginDataBaseAdapter.tabledaily)){
                //databaseassign();
                //databaseassignamharic();
            }
        }
        // datareference();
        //databasereferenceamharic();
        telephonyManager = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);
        if(telephonyManager.getSimState(2)==TelephonyManager.SIM_STATE_ABSENT){
            //Toast.makeText(getApplicationContext(), "sim 2 is absent", Toast.LENGTH_SHORT).show();
            isdualsim=false;
        }else{
            isdualsim=true;
        }

        if(Objects.equals(sharedPreferences.getString("sim","sim1"),"sim1")){
            slot=0;
        }else{
            slot=1;
        }
        rotateAnimation = new RotateAnimation(360, 0, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);
        rotateAnimation.setDuration((long) 2*500);
        rotateAnimation.setRepeatCount(Animation.INFINITE);
        /* Typeface yourTypeface1 = Typeface.createFromAsset(getAssets(), "font/lobsterregular.ttf");
title=(TextView) toolbar.getChildAt(0);
title.setTypeface(yourTypeface1);*/
        textView=findViewById(R.id.language);
        //  textemp=findViewById(R.id.texttemp);
        Intent intent = getIntent();
        String notification="";
        notification = intent.getStringExtra("notif");

        // Toast.makeText(getApplicationContext(),notification, Toast.LENGTH_SHORT).show();
        if(Objects.equals(notification,"u")){
            //Toast.makeText(getApplicationContext(),  loginDataBaseAdapter.get(loginDataBaseAdapter.tableweekly).get(1).getTab1(), Toast.LENGTH_SHORT).show();
            //  getfire();
        }else if(Objects.equals(notification,"l")){
            Intent intent1 = new Intent("android.intent.action.VIEW",
                    Uri.parse("https://techideatips.wordpress.com/"));
            startActivity(intent1);
        }
        rech = new recharge(this,this);
        /*LayoutInflater inflater = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        View vi = inflater.inflate(R.layout.row, null); //log.xml is your file.
        TextView tv = (TextView)vi.findViewById(R.id.you);
        tv.setText("hytdh");*/
        if(connection()){
            int permissionCheck = ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE);

            if (permissionCheck != PackageManager.PERMISSION_GRANTED) {
                ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.READ_PHONE_STATE}, 3);
            } else {
                String android_id = Settings.Secure.getString(getApplicationContext().getContentResolver(),
                        Settings.Secure.ANDROID_ID);
               // String imei= telephonyManager.getImei(); imei is nott supported from android version 10 it is supported for only system apps
                Imei=fd.getReference("Userimei/"+android_id);
                Imei.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {

                        if(dataSnapshot.exists()){

                        }else{
                            Imei.setValue(android_id);
                        }

                    }
                    @Override
                    public void onCancelled(@NonNull DatabaseError databaseError) {

                    }
                });
                //  getfire();
            }

        }
        /*MyListData m=new MyListData();
        m.setDescription("kaleb"); m.setStep("adamu");m.setTab1("biyad");*/
        //loginDataBaseAdapter.inserttotable(m);
        // testass();
         /*Toast.makeText(getApplicationContext(),  loginDataBaseAdapter.get(loginDataBaseAdapter.tabledailyam).get(0).getTab1(), Toast.LENGTH_SHORT).show();
        Toast.makeText(getApplicationContext(),  loginDataBaseAdapter.get(loginDataBaseAdapter.tableweekly).get(1).getTab1(), Toast.LENGTH_SHORT).show();
        Toast.makeText(getApplicationContext(),  loginDataBaseAdapter.get(loginDataBaseAdapter.tablemonthly).get(2).getTab1(), Toast.LENGTH_SHORT).show();
        */


       /* MobileAds.initialize(this, new OnInitializationCompleteListener() {
            @Override
            public void onInitializationComplete(@NonNull InitializationStatus initializationStatus) {

            }

        });
        mAdView = findViewById(R.id.adView);
        mAdView.setVisibility(View.GONE);
        AdRequest adRequest = new AdRequest.Builder().build();
        mAdView.loadAd(adRequest);
        mAdView.setAdListener(new AdListener() {
            @Override
            public void onAdClicked() {
                // Code to be executed when the user clicks on an ad.
            }

            @Override
            public void onAdClosed() {
                // Code to be executed when the user is loading to return
                // to the app after tapping on an ad.
            }

            @Override
            public void onAdFailedToLoad(LoadAdError adError) {
                Toast.makeText(getApplicationContext(),  "adfailed"+adError, Toast.LENGTH_SHORT).show();
                adcount=adcount+1;
                if(adcount<5){
                mAdView.loadAd(adRequest);}
            }

            @Override
            public void onAdImpression() {
                // Code to be executed when an impression is recorded
                // for an ad.
            }

            @Override
            public void onAdLoaded() {
                Toast.makeText(getApplicationContext(),  "adshown", Toast.LENGTH_SHORT).show();
                mAdView.setVisibility(View.VISIBLE);
            }

            @Override
            public void onAdOpened() {
                // Code to be executed when an ad opens an overlay that
                // covers the screen.
            }
        });*/
        FloatingActionButton fab = findViewById(R.id.fab);

        SharedPreferences.Editor editor=sharedPreferences.edit();
        //  String tl=sharedPreferences.getString("language","Am");
        String tl=sharedPreferences.getString("language","Am");

        if(Objects.equals(tl,"Am")){
            textView.setText("En");
        }else{
            textView.setText("አማ");
        }

        textView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                SharedPreferences sharedPreferences=getSharedPreferences("but", Context.MODE_PRIVATE);
                if(Objects.equals(sharedPreferences.getString("language","Am"), "Am")){
                    textView.setText("አማ");
                    SharedPreferences.Editor editor=sharedPreferences.edit();
                    editor.putString("language","En");
                    editor.commit();
                }else{
                    textView.setText("En");
                    SharedPreferences.Editor editor=sharedPreferences.edit();
                    editor.putString("language","Am");
                    editor.commit();
                }
                Intent intent=new Intent(getApplicationContext(),MainActivity.class);
                finish();
                overridePendingTransition(0,0);
                startActivity(intent);
                overridePendingTransition(0,0);
            }
        });

        /*if(sharedPreferences.getBoolean("call",true)){
        ActivityCompat.requestPermissions(this,new String[]{Manifest.permission.CALL_PHONE},1);}else{
            if(!checkAccessibilityPermission()){
                Toast.makeText(MainActivity.this, "Permission denied", Toast.LENGTH_SHORT).show();
            }
        }*/
        /*if(!checkAccessibilityPermission()){
            Toast.makeText(MainActivity.this, "Permission denied", Toast.LENGTH_SHORT).show();
        }*/
        tabLayout = findViewById(R.id.tab_layout);

        configureTabLayout();
        configureTabLayout1();
       /* if(Objects.equals(sharedPreferences.getString("language","Am"), "En")){
            textView.setText("አማ");
            TextView tabOne = (TextView) LayoutInflater.from(this).inflate(R.layout.activity_main, null);
            tabOne.setTextSize(25); // set font size as per your requirement

        }*/
        //USSDApi ussd= USSDController.getInstance(cont);
        // p=findViewById(R.id.progressBar);

        if (Build.VERSION.SDK_INT> Build.VERSION_CODES.O) {
            params=new WindowManager.LayoutParams(WindowManager.LayoutParams.MATCH_PARENT,WindowManager.LayoutParams.MATCH_PARENT,
                    WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY,WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE|WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL
                    |WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH  , PixelFormat.TRANSLUCENT);
        }else{
            params=new WindowManager.LayoutParams(WindowManager.LayoutParams.MATCH_PARENT,WindowManager.LayoutParams.MATCH_PARENT,
                    WindowManager.LayoutParams.TYPE_SYSTEM_ALERT,WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE|WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL
                    |WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH  , PixelFormat.TRANSLUCENT);}
        wm=(WindowManager) getSystemService(WINDOW_SERVICE);
        in=(LayoutInflater) getSystemService(LAYOUT_INFLATER_SERVICE);
        view1=in.inflate(R.layout.loading,null);


        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                //mAdView.loadAd(adRequest);

               /* String ussd = "*" + "804" + Uri.encode("#");
                data=ussd;
                balance=true;
                ussd();*/
                Toast.makeText(getApplicationContext(), String.valueOf(loginDataBaseAdapter.get(loginDataBaseAdapter.tabledaily).size()) + " and " + String.valueOf(loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)), Toast.LENGTH_SHORT).show();
                loginDataBaseAdapter.setsubtab("skeww", "1", "1", loginDataBaseAdapter.subtabetam);

                for(int i=1;i<13;i++){
                    for(int j=1;j<5;j++){
                        loginDataBaseAdapter.setsubtab("skeww",String.valueOf(i),String.valueOf(j),loginDataBaseAdapter.subtabet);
                        loginDataBaseAdapter.setsubtab("skeww",String.valueOf(i),String.valueOf(j),loginDataBaseAdapter.subtabetam);
                        loginDataBaseAdapter.setsubtab("skeww",String.valueOf(i),String.valueOf(j),loginDataBaseAdapter.subtabsaf);
                        loginDataBaseAdapter.setsubtab("skeww",String.valueOf(i),String.valueOf(j),loginDataBaseAdapter.subtabsafam);

                    }
                }











                final int[] succ = {0};

              /*  for(int i=0;i<6;i++){

                DatabaseReference tab1dam = fd.getReference("Telepackage/dailyam/Tab1/"+i), tab2dam = fd.getReference("Telepackage/dailyam/Tab2/"+i), tab3dam = fd.getReference("Telepackage/dailyam/Tab3/"+i), tab4dam = fd.getReference("Telepackage/dailyam/Tab4/"+i), tab5dam = fd.getReference("Telepackage/dailyam/Tab5/"+i), tab6dam = fd.getReference("Telepackage/dailyam/Tab6/"+i), tab7dam = fd.getReference("Telepackage/dailyam/Tab7/"+i), tab8dam = fd.getReference("Telepackage/dailyam/Tab8/"+i), tab9dam = fd.getReference("Telepackage/dailyam/Tab9/"+i), tab10dam = fd.getReference("Telepackage/dailyam/Tab10/"+i), tab11dam = fd.getReference("Telepackage/dailyam/Tab11/"+i), tab12dam = fd.getReference("Telepackage/dailyam/Tab12/"+i)

                        , tab1d = fd.getReference("Telepackage/daily/Tab1/"+i), tab2d = fd.getReference("Telepackage/daily/Tab2/"+i), tab3d = fd.getReference("Telepackage/daily/Tab3/"+i), tab4d = fd.getReference("Telepackage/daily/Tab4/"+i), tab5d = fd.getReference("Telepackage/daily/Tab5/"+i), tab6d = fd.getReference("Telepackage/daily/Tab6/"+i), tab7d = fd.getReference("Telepackage/daily/Tab7/"+i), tab8d = fd.getReference("Telepackage/daily/Tab8/"+i), tab9d = fd.getReference("Telepackage/daily/Tab9/"+i), tab10d = fd.getReference("Telepackage/daily/Tab10/"+i), tab11d = fd.getReference("Telepackage/daily/Tab11/"+i), tab12d = fd.getReference("Telepackage/daily/Tab12/"+i)

                        , tab1damsaf = fd.getReference("Telepackage/dailyamsaf/Tab1/"+i), tab2damsaf = fd.getReference("Telepackage/dailyamsaf/Tab2/"+i), tab3damsaf = fd.getReference("Telepackage/dailyamsaf/Tab3/"+i), tab4damsaf = fd.getReference("Telepackage/dailyamsaf/Tab4/"+i), tab5damsaf = fd.getReference("Telepackage/dailyamsaf/Tab5/"+i), tab6damsaf = fd.getReference("Telepackage/dailyamsaf/Tab6/"+i), tab7damsaf = fd.getReference("Telepackage/dailyamsaf/Tab7/"+i), tab8damsaf = fd.getReference("Telepackage/dailyamsaf/Tab8/"+i), tab9damsaf = fd.getReference("Telepackage/dailyamsaf/Tab9/"+i), tab10damsaf = fd.getReference("Telepackage/dailyamsaf/Tab10/"+i), tab11damsaf = fd.getReference("Telepackage/dailyamsaf/Tab11/"+i), tab12damsaf = fd.getReference("Telepackage/dailyamsaf/Tab12/"+i)

                        , tab1dsaf = fd.getReference("Telepackage/dailysaf/Tab1/"+i), tab2dsaf = fd.getReference("Telepackage/dailysaf/Tab2/"+i), tab3dsaf = fd.getReference("Telepackage/dailysaf/Tab3/"+i), tab4dsaf = fd.getReference("Telepackage/dailysaf/Tab4/"+i), tab5dsaf = fd.getReference("Telepackage/dailysaf/Tab5/"+i), tab6dsaf = fd.getReference("Telepackage/dailysaf/Tab6/"+i), tab7dsaf = fd.getReference("Telepackage/dailysaf/Tab7/"+i), tab8dsaf = fd.getReference("Telepackage/dailysaf/Tab8/"+i), tab9dsaf = fd.getReference("Telepackage/dailysaf/Tab9/"+i), tab10dsaf = fd.getReference("Telepackage/dailysaf/Tab10/"+i), tab11dsaf = fd.getReference("Telepackage/dailysaf/Tab11/"+i), tab12dsaf = fd.getReference("Telepackage/dailysaf/Tab12/"+i)
                        //weeeky##########################################
                        , tab1wam = fd.getReference("Telepackage/weeklyam/Tab1/"+i), tab2wam = fd.getReference("Telepackage/weeklyam/Tab2/"+i), tab3wam = fd.getReference("Telepackage/weeklyam/Tab3/"+i), tab4wam = fd.getReference("Telepackage/weeklyam/Tab4/"+i), tab5wam = fd.getReference("Telepackage/weeklyam/Tab5/"+i), tab6wam = fd.getReference("Telepackage/weeklyam/Tab6/"+i), tab7wam = fd.getReference("Telepackage/weeklyam/Tab7/"+i), tab8wam = fd.getReference("Telepackage/weeklyam/Tab8/"+i), tab9wam = fd.getReference("Telepackage/weeklyam/Tab9/"+i), tab10wam = fd.getReference("Telepackage/weeklyam/Tab10/"+i), tab11wam = fd.getReference("Telepackage/weeklyam/Tab11/"+i), tab12wam = fd.getReference("Telepackage/weeklyam/Tab12/"+i)

                        , tab1w = fd.getReference("Telepackage/weekly/Tab1/"+i), tab2w = fd.getReference("Telepackage/weekly/Tab2/"+i), tab3w = fd.getReference("Telepackage/weekly/Tab3/"+i), tab4w = fd.getReference("Telepackage/weekly/Tab4/"+i), tab5w = fd.getReference("Telepackage/weekly/Tab5/"+i), tab6w = fd.getReference("Telepackage/weekly/Tab6/"+i), tab7w = fd.getReference("Telepackage/weekly/Tab7/"+i), tab8w = fd.getReference("Telepackage/weekly/Tab8/"+i), tab9w = fd.getReference("Telepackage/weekly/Tab9/"+i), tab10w = fd.getReference("Telepackage/weekly/Tab10/"+i), tab11w = fd.getReference("Telepackage/weekly/Tab11/"+i), tab12w = fd.getReference("Telepackage/weekly/Tab12/"+i)

                        , tab1wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab1/"+i), tab2wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab2/"+i), tab3wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab3/"+i), tab4wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab4/"+i), tab5wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab5/"+i), tab6wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab6/"+i), tab7wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab7/"+i), tab8wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab8/"+i), tab9wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab9/"+i), tab10wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab10/"+i), tab11wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab11/"+i), tab12wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab12/"+i)

                        , tab1wsaf = fd.getReference("Telepackage/weeklysaf/Tab1/"+i), tab2wsaf = fd.getReference("Telepackage/weeklysaf/Tab2/"+i), tab3wsaf = fd.getReference("Telepackage/weeklysaf/Tab3/"+i), tab4wsaf = fd.getReference("Telepackage/weeklysaf/Tab4/"+i), tab5wsaf = fd.getReference("Telepackage/weeklysaf/Tab5/"+i), tab6wsaf = fd.getReference("Telepackage/weeklysaf/Tab6/"+i), tab7wsaf = fd.getReference("Telepackage/weeklysaf/Tab7/"+i), tab8wsaf = fd.getReference("Telepackage/weeklysaf/Tab8/"+i), tab9wsaf = fd.getReference("Telepackage/weeklysaf/Tab9/"+i), tab10wsaf = fd.getReference("Telepackage/weeklysaf/Tab10/"+i), tab11wsaf = fd.getReference("Telepackage/weeklysaf/Tab11/"+i), tab12wsaf = fd.getReference("Telepackage/weeklysaf/Tab12/"+i)
                        //monthy###############################
                        , tab1mam = fd.getReference("Telepackage/monthlyam/Tab1/"+i), tab2mam = fd.getReference("Telepackage/monthlyam/Tab2/"+i), tab3mam = fd.getReference("Telepackage/monthlyam/Tab3/"+i), tab4mam = fd.getReference("Telepackage/monthlyam/Tab4/"+i), tab5mam = fd.getReference("Telepackage/monthlyam/Tab5/"+i), tab6mam = fd.getReference("Telepackage/monthlyam/Tab6/"+i), tab7mam = fd.getReference("Telepackage/monthlyam/Tab7/"+i), tab8mam = fd.getReference("Telepackage/monthlyam/Tab8/"+i), tab9mam = fd.getReference("Telepackage/monthlyam/Tab9/"+i), tab10mam = fd.getReference("Telepackage/monthlyam/Tab10/"+i), tab11mam = fd.getReference("Telepackage/monthlyam/Tab11/"+i), tab12mam = fd.getReference("Telepackage/monthlyam/Tab12/"+i)

                        , tab1m = fd.getReference("Telepackage/monthly/Tab1/"+i), tab2m = fd.getReference("Telepackage/monthly/Tab2/"+i), tab3m = fd.getReference("Telepackage/monthly/Tab3/"+i), tab4m = fd.getReference("Telepackage/monthly/Tab4/"+i), tab5m = fd.getReference("Telepackage/monthly/Tab5/"+i), tab6m = fd.getReference("Telepackage/monthly/Tab6/"+i), tab7m = fd.getReference("Telepackage/monthly/Tab7/"+i), tab8m = fd.getReference("Telepackage/monthly/Tab8/"+i), tab9m = fd.getReference("Telepackage/monthly/Tab9/"+i), tab10m = fd.getReference("Telepackage/monthly/Tab10/"+i), tab11m = fd.getReference("Telepackage/monthly/Tab11/"+i), tab12m = fd.getReference("Telepackage/monthly/Tab12/"+i)

                        , tab1mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab1/"+i), tab2mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab2/"+i), tab3mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab3/"+i), tab4mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab4/"+i), tab5mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab5/"+i), tab6mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab6/"+i), tab7mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab7/"+i), tab8mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab8/"+i), tab9mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab9/"+i), tab10mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab10/"+i), tab11mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab11/"+i), tab12mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab12/"+i)

                        , tab1msaf = fd.getReference("Telepackage/monthlysaf/Tab1/"+i), tab2msaf = fd.getReference("Telepackage/monthlysaf/Tab2/"+i), tab3msaf = fd.getReference("Telepackage/monthlysaf/Tab3/"+i), tab4msaf = fd.getReference("Telepackage/monthlysaf/Tab4/"+i), tab5msaf = fd.getReference("Telepackage/monthlysaf/Tab5/"+i), tab6msaf = fd.getReference("Telepackage/monthlysaf/Tab6/"+i), tab7msaf = fd.getReference("Telepackage/monthlysaf/Tab7/"+i), tab8msaf = fd.getReference("Telepackage/monthlysaf/Tab8/"+i), tab9msaf = fd.getReference("Telepackage/monthlysaf/Tab9/"+i), tab10msaf = fd.getReference("Telepackage/monthlysaf/Tab10/"+i), tab11msaf = fd.getReference("Telepackage/monthlysaf/Tab11/"+i), tab12msaf = fd.getReference("Telepackage/monthlysaf/Tab12/"+i)
                        //night###################################

                        , tab1nam = fd.getReference("Telepackage/nightam/Tab1/"+i), tab2nam = fd.getReference("Telepackage/nightam/Tab2/"+i), tab3nam = fd.getReference("Telepackage/nightam/Tab3/"+i), tab4nam = fd.getReference("Telepackage/nightam/Tab4/"+i), tab5nam = fd.getReference("Telepackage/nightam/Tab5/"+i), tab6nam = fd.getReference("Telepackage/nightam/Tab6/"+i), tab7nam = fd.getReference("Telepackage/nightam/Tab7/"+i), tab8nam = fd.getReference("Telepackage/nightam/Tab8/"+i), tab9nam = fd.getReference("Telepackage/nightam/Tab9/"+i), tab10nam = fd.getReference("Telepackage/nightam/Tab10/"+i), tab11nam = fd.getReference("Telepackage/nightam/Tab11/"+i), tab12nam = fd.getReference("Telepackage/nightam/Tab12/"+i)

                        , tab1n = fd.getReference("Telepackage/night/Tab1/"+i), tab2n = fd.getReference("Telepackage/night/Tab2/"+i), tab3n = fd.getReference("Telepackage/night/Tab3/"+i), tab4n = fd.getReference("Telepackage/night/Tab4/"+i), tab5n = fd.getReference("Telepackage/night/Tab5/"+i), tab6n = fd.getReference("Telepackage/night/Tab6/"+i), tab7n = fd.getReference("Telepackage/night/Tab7/"+i), tab8n = fd.getReference("Telepackage/night/Tab8/"+i), tab9n = fd.getReference("Telepackage/night/Tab9/"+i), tab10n = fd.getReference("Telepackage/night/Tab10/"+i), tab11n = fd.getReference("Telepackage/night/Tab11/"+i), tab12n = fd.getReference("Telepackage/night/Tab12/"+i)

                        , tab1namsaf = fd.getReference("Telepackage/nightamsaf/Tab1/"+i), tab2namsaf = fd.getReference("Telepackage/nightamsaf/Tab2/"+i), tab3namsaf = fd.getReference("Telepackage/nightamsaf/Tab3/"+i), tab4namsaf = fd.getReference("Telepackage/nightamsaf/Tab4/"+i), tab5namsaf = fd.getReference("Telepackage/nightamsaf/Tab5/"+i), tab6namsaf = fd.getReference("Telepackage/nightamsaf/Tab6/"+i), tab7namsaf = fd.getReference("Telepackage/nightamsaf/Tab7/"+i), tab8namsaf = fd.getReference("Telepackage/nightamsaf/Tab8/"+i), tab9namsaf = fd.getReference("Telepackage/nightamsaf/Tab9/"+i), tab10namsaf = fd.getReference("Telepackage/nightamsaf/Tab10/"+i), tab11namsaf = fd.getReference("Telepackage/nightamsaf/Tab11/"+i), tab12namsaf = fd.getReference("Telepackage/nightamsaf/Tab12/"+i)

                        , tab1nsaf = fd.getReference("Telepackage/nightsaf/Tab1/"+i), tab2nsaf = fd.getReference("Telepackage/nightsaf/Tab2/"+i), tab3nsaf = fd.getReference("Telepackage/nightsaf/Tab3/"+i), tab4nsaf = fd.getReference("Telepackage/nightsaf/Tab4/"+i), tab5nsaf = fd.getReference("Telepackage/nightsaf/Tab5/"+i), tab6nsaf = fd.getReference("Telepackage/nightsaf/Tab6/"+i), tab7nsaf = fd.getReference("Telepackage/nightsaf/Tab7/"+i), tab8nsaf = fd.getReference("Telepackage/nightsaf/Tab8/"+i), tab9nsaf = fd.getReference("Telepackage/nightsaf/Tab9/"+i), tab10nsaf = fd.getReference("Telepackage/nightsaf/Tab10/"+i), tab11nsaf = fd.getReference("Telepackage/nightsaf/Tab11/"+i), tab12nsaf = fd.getReference("Telepackage/nightsaf/Tab12/"+i)
                        //###########tagggggg





                        , tagd1 = fd.getReference("Telepackage/daily/Tag1/"+i), tagd2 = fd.getReference("Telepackage/daily/Tag2/"+i), tagd3 = fd.getReference("Telepackage/daily/Tag3/"+i), tagd4 = fd.getReference("Telepackage/daily/Tag4/"+i), tagd5 = fd.getReference("Telepackage/daily/Tag5/"+i), tagd6 = fd.getReference("Telepackage/daily/Tag6/"+i), tagd7 = fd.getReference("Telepackage/daily/Tag7/"+i), tagd8 = fd.getReference("Telepackage/daily/Tag8/"+i), tagd9 = fd.getReference("Telepackage/daily/Tag9/"+i), tagd10 = fd.getReference("Telepackage/daily/Tag10/"+i), tagd11 = fd.getReference("Telepackage/daily/Tag11/"+i), tagd12 = fd.getReference("Telepackage/daily/Tag12/"+i)

                        , tagw1 = fd.getReference("Telepackage/weekly/Tag1/"+i), tagw2 = fd.getReference("Telepackage/weekly/Tag2/"+i), tagw3 = fd.getReference("Telepackage/weekly/Tag3/"+i), tagw4 = fd.getReference("Telepackage/weekly/Tag4/"+i), tagw5 = fd.getReference("Telepackage/weekly/Tag5/"+i), tagw6 = fd.getReference("Telepackage/weekly/Tag6/"+i), tagw7 = fd.getReference("Telepackage/weekly/Tag7/"+i), tagw8 = fd.getReference("Telepackage/weekly/Tag8/"+i), tagw9 = fd.getReference("Telepackage/weekly/Tag9/"+i), tagw10 = fd.getReference("Telepackage/weekly/Tag10/"+i), tagw11 = fd.getReference("Telepackage/weekly/Tag11/"+i), tagw12 = fd.getReference("Telepackage/weekly/Tag12/"+i)

                        , tagm1 = fd.getReference("Telepackage/monthly/Tag1/"+i), tagm2 = fd.getReference("Telepackage/monthly/Tag2/"+i), tagm3 = fd.getReference("Telepackage/monthly/Tag3/"+i), tagm4 = fd.getReference("Telepackage/monthly/Tag4/"+i), tagm5 = fd.getReference("Telepackage/monthly/Tag5/"+i), tagm6 = fd.getReference("Telepackage/monthly/Tag6/"+i), tagm7 = fd.getReference("Telepackage/monthly/Tag7/"+i), tagm8 = fd.getReference("Telepackage/monthly/Tag8/"+i), tagm9 = fd.getReference("Telepackage/monthly/Tag9/"+i), tagm10 = fd.getReference("Telepackage/monthly/Tag10/"+i), tagm11 = fd.getReference("Telepackage/monthly/Tag11/"+i), tagm12 = fd.getReference("Telepackage/monthly/Tag12/"+i)

                        , tagn1 = fd.getReference("Telepackage/night/Tag1/"+i), tagn2 = fd.getReference("Telepackage/night/Tag2/"+i), tagn3 = fd.getReference("Telepackage/night/Tag3/"+i), tagn4 = fd.getReference("Telepackage/night/Tag4/"+i), tagn5 = fd.getReference("Telepackage/night/Tag5/"+i), tagn6 = fd.getReference("Telepackage/night/Tag6/"+i), tagn7 = fd.getReference("Telepackage/night/Tag7/"+i), tagn8 = fd.getReference("Telepackage/night/Tag8/"+i), tagn9 = fd.getReference("Telepackage/night/Tag9/"+i), tagn10 = fd.getReference("Telepackage/night/Tag10/"+i), tagn11 = fd.getReference("Telepackage/night/Tag11/"+i), tagn12 = fd.getReference("Telepackage/night/Tag12/"+i)


                        , tagdsaf1 = fd.getReference("Telepackage/dailysaf/Tag1/"+i), tagdsaf2 = fd.getReference("Telepackage/dailysaf/Tag2/"+i), tagdsaf3 = fd.getReference("Telepackage/dailysaf/Tag3/"+i), tagdsaf4 = fd.getReference("Telepackage/dailysaf/Tag4/"+i), tagdsaf5 = fd.getReference("Telepackage/dailysaf/Tag5/"+i), tagdsaf6 = fd.getReference("Telepackage/dailysaf/Tag6/"+i), tagdsaf7 = fd.getReference("Telepackage/dailysaf/Tag7/"+i), tagdsaf8 = fd.getReference("Telepackage/dailysaf/Tag8/"+i), tagdsaf9 = fd.getReference("Telepackage/dailysaf/Tag9/"+i), tagdsaf10 = fd.getReference("Telepackage/dailysaf/Tag10/"+i), tagdsaf11 = fd.getReference("Telepackage/dailysaf/Tag11/"+i), tagdsaf12 = fd.getReference("Telepackage/dailysaf/Tag12/"+i)

                        , tagwsaf1 = fd.getReference("Telepackage/weeklysaf/Tag1/"+i), tagwsaf2 = fd.getReference("Telepackage/weeklysaf/Tag2/"+i), tagwsaf3 = fd.getReference("Telepackage/weeklysaf/Tag3/"+i), tagwsaf4 = fd.getReference("Telepackage/weeklysaf/Tag4/"+i), tagwsaf5 = fd.getReference("Telepackage/weeklysaf/Tag5/"+i), tagwsaf6 = fd.getReference("Telepackage/weeklysaf/Tag6/"+i), tagwsaf7 = fd.getReference("Telepackage/weeklysaf/Tag7/"+i), tagwsaf8 = fd.getReference("Telepackage/weeklysaf/Tag8/"+i), tagwsaf9 = fd.getReference("Telepackage/weeklysaf/Tag9/"+i), tagwsaf10 = fd.getReference("Telepackage/weeklysaf/Tag10/"+i), tagwsaf11 = fd.getReference("Telepackage/weeklysaf/Tag11/"+i), tagwsaf12 = fd.getReference("Telepackage/weeklysaf/Tag12/"+i)

                        , tagmsaf1 = fd.getReference("Telepackage/monthlysaf/Tag1/"+i), tagmsaf2 = fd.getReference("Telepackage/monthlysaf/Tag2/"+i), tagmsaf3 = fd.getReference("Telepackage/monthlysaf/Tag3/"+i), tagmsaf4 = fd.getReference("Telepackage/monthlysaf/Tag4/"+i), tagmsaf5 = fd.getReference("Telepackage/monthlysaf/Tag5/"+i), tagmsaf6 = fd.getReference("Telepackage/monthlysaf/Tag6/"+i), tagmsaf7 = fd.getReference("Telepackage/monthlysaf/Tag7/"+i), tagmsaf8 = fd.getReference("Telepackage/monthlysaf/Tag8/"+i), tagmsaf9 = fd.getReference("Telepackage/monthlysaf/Tag9/"+i), tagmsaf10 = fd.getReference("Telepackage/monthlysaf/Tag10/"+i), tagmsaf11 = fd.getReference("Telepackage/monthlysaf/Tag11/"+i), tagmsaf12 = fd.getReference("Telepackage/monthlysaf/Tag12/"+i)

                        , tagnsaf1 = fd.getReference("Telepackage/nightsaf/Tag1/"+i), tagnsaf2 = fd.getReference("Telepackage/nightsaf/Tag2/"+i), tagnsaf3 = fd.getReference("Telepackage/nightsaf/Tag3/"+i), tagnsaf4 = fd.getReference("Telepackage/nightsaf/Tag4/"+i), tagnsaf5 = fd.getReference("Telepackage/nightsaf/Tag5/"+i), tagnsaf6 = fd.getReference("Telepackage/nightsaf/Tag6/"+i), tagnsaf7 = fd.getReference("Telepackage/nightsaf/Tag7/"+i), tagnsaf8 = fd.getReference("Telepackage/nightsaf/Tag8/"+i), tagnsaf9 = fd.getReference("Telepackage/nightsaf/Tag9/"+i), tagnsaf10 = fd.getReference("Telepackage/nightsaf/Tag10/"+i), tagnsaf11 = fd.getReference("Telepackage/nightsaf/Tag11/"+i), tagnsaf12 = fd.getReference("Telepackage/nightsaf/Tag12/"+i)

                        , gift1d = fd.getReference("Telepackage/daily/gift1/"+i), gift2d = fd.getReference("Telepackage/daily/gift2/"+i), gift3d = fd.getReference("Telepackage/daily/gift3/"+i), gift4d = fd.getReference("Telepackage/daily/gift4/"+i), gift5d = fd.getReference("Telepackage/daily/gift5/"+i), gift6d = fd.getReference("Telepackage/daily/gift6/"+i), gift7d = fd.getReference("Telepackage/daily/gift7/"+i), gift8d = fd.getReference("Telepackage/daily/gift8/"+i), gift9d = fd.getReference("Telepackage/daily/gift9/"+i), gift10d = fd.getReference("Telepackage/daily/gift10/"+i), gift11d = fd.getReference("Telepackage/daily/gift11/"+i), gift12d = fd.getReference("Telepackage/daily/gift12/"+i)

                        , gift1w = fd.getReference("Telepackage/weekly/gift1/"+i), gift2w = fd.getReference("Telepackage/weekly/gift2/"+i), gift3w = fd.getReference("Telepackage/weekly/gift3/"+i), gift4w = fd.getReference("Telepackage/weekly/gift4/"+i), gift5w = fd.getReference("Telepackage/weekly/gift5/"+i), gift6w = fd.getReference("Telepackage/weekly/gift6/"+i), gift7w = fd.getReference("Telepackage/weekly/gift7/"+i), gift8w = fd.getReference("Telepackage/weekly/gift8/"+i), gift9w = fd.getReference("Telepackage/weekly/gift9/"+i), gift10w = fd.getReference("Telepackage/weekly/gift10/"+i), gift11w = fd.getReference("Telepackage/weekly/gift11/"+i), gift12w = fd.getReference("Telepackage/weekly/gift12/"+i)

                        , gift1m = fd.getReference("Telepackage/monthly/gift1/"+i), gift2m = fd.getReference("Telepackage/monthly/gift2/"+i), gift3m = fd.getReference("Telepackage/monthly/gift3/"+i), gift4m = fd.getReference("Telepackage/monthly/gift4/"+i), gift5m = fd.getReference("Telepackage/monthly/gift5/"+i), gift6m = fd.getReference("Telepackage/monthly/gift6/"+i), gift7m = fd.getReference("Telepackage/monthly/gift7/"+i), gift8m = fd.getReference("Telepackage/monthly/gift8/"+i), gift9m = fd.getReference("Telepackage/monthly/gift9/"+i), gift10m = fd.getReference("Telepackage/monthly/gift10/"+i), gift11m = fd.getReference("Telepackage/monthly/gift11/"+i), gift12m = fd.getReference("Telepackage/monthly/gift12/"+i)

                        , gift1n = fd.getReference("Telepackage/night/gift1/"+i), gift2n = fd.getReference("Telepackage/night/gift2/"+i), gift3n = fd.getReference("Telepackage/night/gift3/"+i), gift4n = fd.getReference("Telepackage/night/gift4/"+i), gift5n = fd.getReference("Telepackage/night/gift5/"+i), gift6n = fd.getReference("Telepackage/night/gift6/"+i), gift7n = fd.getReference("Telepackage/night/gift7/"+i), gift8n = fd.getReference("Telepackage/night/gift8/"+i), gift9n = fd.getReference("Telepackage/night/gift9/"+i), gift10n = fd.getReference("Telepackage/night/gift10/"+i), gift11n = fd.getReference("Telepackage/night/gift11/"+i), gift12n = fd.getReference("Telepackage/night/gift12/"+i)


                        , gift1dsaf = fd.getReference("Telepackage/dailysaf/gift1/"+i), gift2dsaf = fd.getReference("Telepackage/dailysaf/gift2/"+i), gift3dsaf = fd.getReference("Telepackage/dailysaf/gift3/"+i), gift4dsaf = fd.getReference("Telepackage/dailysaf/gift4/"+i), gift5dsaf = fd.getReference("Telepackage/dailysaf/gift5/"+i), gift6dsaf = fd.getReference("Telepackage/dailysaf/gift6/"+i), gift7dsaf = fd.getReference("Telepackage/dailysaf/gift7/"+i), gift8dsaf = fd.getReference("Telepackage/dailysaf/gift8/"+i), gift9dsaf = fd.getReference("Telepackage/dailysaf/gift9/"+i), gift10dsaf = fd.getReference("Telepackage/dailysaf/gift10/"+i), gift11dsaf = fd.getReference("Telepackage/dailysaf/gift11/"+i), gift12dsaf = fd.getReference("Telepackage/dailysaf/gift12/"+i)

                        , gift1wsaf = fd.getReference("Telepackage/weeklysaf/gift1/"+i), gift2wsaf = fd.getReference("Telepackage/weeklysaf/gift2/"+i), gift3wsaf = fd.getReference("Telepackage/weeklysaf/gift3/"+i), gift4wsaf = fd.getReference("Telepackage/weeklysaf/gift4/"+i), gift5wsaf = fd.getReference("Telepackage/weeklysaf/gift5/"+i), gift6wsaf = fd.getReference("Telepackage/weeklysaf/gift6/"+i), gift7wsaf = fd.getReference("Telepackage/weeklysaf/gift7/"+i), gift8wsaf = fd.getReference("Telepackage/weeklysaf/gift8/"+i), gift9wsaf = fd.getReference("Telepackage/weeklysaf/gift9/"+i), gift10wsaf = fd.getReference("Telepackage/weeklysaf/gift10/"+i), gift11wsaf = fd.getReference("Telepackage/weeklysaf/gift11/"+i), gift12wsaf = fd.getReference("Telepackage/weeklysaf/gift12/"+i)

                        , gift1msaf = fd.getReference("Telepackage/monthlysaf/gift1/"+i), gift2msaf = fd.getReference("Telepackage/monthlysaf/gift2/"+i), gift3msaf = fd.getReference("Telepackage/monthlysaf/gift3/"+i), gift4msaf = fd.getReference("Telepackage/monthlysaf/gift4/"+i), gift5msaf = fd.getReference("Telepackage/monthlysaf/gift5/"+i), gift6msaf = fd.getReference("Telepackage/monthlysaf/gift6/"+i), gift7msaf = fd.getReference("Telepackage/monthlysaf/gift7/"+i), gift8msaf = fd.getReference("Telepackage/monthlysaf/gift8/"+i), gift9msaf = fd.getReference("Telepackage/monthlysaf/gift9/"+i), gift10msaf = fd.getReference("Telepackage/monthlysaf/gift10/"+i), gift11msaf = fd.getReference("Telepackage/monthlysaf/gift11/"+i), gift12msaf = fd.getReference("Telepackage/monthlysaf/gift12/"+i)

                        , gift1nsaf = fd.getReference("Telepackage/nightsaf/gift1/"+i), gift2nsaf = fd.getReference("Telepackage/nightsaf/gift2/"+i), gift3nsaf = fd.getReference("Telepackage/nightsaf/gift3/"+i), gift4nsaf = fd.getReference("Telepackage/nightsaf/gift4/"+i), gift5nsaf = fd.getReference("Telepackage/nightsaf/gift5/"+i), gift6nsaf = fd.getReference("Telepackage/nightsaf/gift6/"+i), gift7nsaf = fd.getReference("Telepackage/nightsaf/gift7/"+i), gift8nsaf = fd.getReference("Telepackage/nightsaf/gift8/"+i), gift9nsaf = fd.getReference("Telepackage/nightsaf/gift9/"+i), gift10nsaf = fd.getReference("Telepackage/nightsaf/gift10/"+i), gift11nsaf = fd.getReference("Telepackage/nightsaf/gift11/"+i), gift12nsaf = fd.getReference("Telepackage/nightsaf/gift12/"+i)

                        , foryou1d = fd.getReference("Telepackage/daily/foryou1/"+i), foryou2d = fd.getReference("Telepackage/daily/foryou2/"+i), foryou3d = fd.getReference("Telepackage/daily/foryou3/"+i), foryou4d = fd.getReference("Telepackage/daily/foryou4/"+i), foryou5d = fd.getReference("Telepackage/daily/foryou5/"+i), foryou6d = fd.getReference("Telepackage/daily/foryou6/"+i), foryou7d = fd.getReference("Telepackage/daily/foryou7/"+i), foryou8d = fd.getReference("Telepackage/daily/foryou8/"+i), foryou9d = fd.getReference("Telepackage/daily/foryou9/"+i), foryou10d = fd.getReference("Telepackage/daily/foryou10/"+i), foryou11d = fd.getReference("Telepackage/daily/foryou11/"+i), foryou12d = fd.getReference("Telepackage/daily/foryou12/"+i)

                        , foryou1w = fd.getReference("Telepackage/weekly/foryou1/"+i), foryou2w = fd.getReference("Telepackage/weekly/foryou2/"+i), foryou3w = fd.getReference("Telepackage/weekly/foryou3/"+i), foryou4w = fd.getReference("Telepackage/weekly/foryou4/"+i), foryou5w = fd.getReference("Telepackage/weekly/foryou5/"+i), foryou6w = fd.getReference("Telepackage/weekly/foryou6/"+i), foryou7w = fd.getReference("Telepackage/weekly/foryou7/"+i), foryou8w = fd.getReference("Telepackage/weekly/foryou8/"+i), foryou9w = fd.getReference("Telepackage/weekly/foryou9/"+i), foryou10w = fd.getReference("Telepackage/weekly/foryou10/"+i), foryou11w = fd.getReference("Telepackage/weekly/foryou11/"+i), foryou12w = fd.getReference("Telepackage/weekly/foryou12/"+i)


                        , foryou1m = fd.getReference("Telepackage/monthly/foryou1/"+i), foryou2m = fd.getReference("Telepackage/monthly/foryou2/"+i), foryou3m = fd.getReference("Telepackage/monthly/foryou3/"+i), foryou4m = fd.getReference("Telepackage/monthly/foryou4/"+i), foryou5m = fd.getReference("Telepackage/monthly/foryou5/"+i), foryou6m = fd.getReference("Telepackage/monthly/foryou6/"+i), foryou7m = fd.getReference("Telepackage/monthly/foryou7/"+i), foryou8m = fd.getReference("Telepackage/monthly/foryou8/"+i), foryou9m = fd.getReference("Telepackage/monthly/foryou9/"+i), foryou10m = fd.getReference("Telepackage/monthly/foryou10/"+i), foryou11m = fd.getReference("Telepackage/monthly/foryou11/"+i), foryou12m = fd.getReference("Telepackage/monthly/foryou12/"+i)

                        , foryou1n = fd.getReference("Telepackage/night/foryou1/"+i), foryou2n = fd.getReference("Telepackage/night/foryou2/"+i), foryou3n = fd.getReference("Telepackage/night/foryou3/"+i), foryou4n = fd.getReference("Telepackage/night/foryou4/"+i), foryou5n = fd.getReference("Telepackage/night/foryou5/"+i), foryou6n = fd.getReference("Telepackage/night/foryou6/"+i), foryou7n = fd.getReference("Telepackage/night/foryou7/"+i), foryou8n = fd.getReference("Telepackage/night/foryou8/"+i), foryou9n = fd.getReference("Telepackage/night/foryou9/"+i), foryou10n = fd.getReference("Telepackage/night/foryou10/"+i), foryou11n = fd.getReference("Telepackage/night/foryou11/"+i), foryou12n = fd.getReference("Telepackage/night/foryou12/"+i)


                        , foryou1dsaf = fd.getReference("Telepackage/dailysaf/foryou1/"+i), foryou2dsaf = fd.getReference("Telepackage/dailysaf/foryou2/"+i), foryou3dsaf = fd.getReference("Telepackage/dailysaf/foryou3/"+i), foryou4dsaf = fd.getReference("Telepackage/dailysaf/foryou4/"+i), foryou5dsaf = fd.getReference("Telepackage/dailysaf/foryou5/"+i), foryou6dsaf = fd.getReference("Telepackage/dailysaf/foryou6/"+i), foryou7dsaf = fd.getReference("Telepackage/dailysaf/foryou7/"+i), foryou8dsaf = fd.getReference("Telepackage/dailysaf/foryou8/"+i), foryou9dsaf = fd.getReference("Telepackage/dailysaf/foryou9/"+i), foryou10dsaf = fd.getReference("Telepackage/dailysaf/foryou10/"+i), foryou11dsaf = fd.getReference("Telepackage/dailysaf/foryou11/"+i), foryou12dsaf = fd.getReference("Telepackage/dailysaf/foryou12/"+i)

                        , foryou1wsaf = fd.getReference("Telepackage/weeklysaf/foryou1/"+i), foryou2wsaf = fd.getReference("Telepackage/weeklysaf/foryou2/"+i), foryou3wsaf = fd.getReference("Telepackage/weeklysaf/foryou3/"+i), foryou4wsaf = fd.getReference("Telepackage/weeklysaf/foryou4/"+i), foryou5wsaf = fd.getReference("Telepackage/weeklysaf/foryou5/"+i), foryou6wsaf = fd.getReference("Telepackage/weeklysaf/foryou6/"+i), foryou7wsaf = fd.getReference("Telepackage/weeklysaf/foryou7/"+i), foryou8wsaf = fd.getReference("Telepackage/weeklysaf/foryou8/"+i), foryou9wsaf = fd.getReference("Telepackage/weeklysaf/foryou9/"+i), foryou10wsaf = fd.getReference("Telepackage/weeklysaf/foryou10/"+i), foryou11wsaf = fd.getReference("Telepackage/weeklysaf/foryou11/"+i), foryou12wsaf = fd.getReference("Telepackage/weeklysaf/foryou12/"+i)


                        , foryou1msaf = fd.getReference("Telepackage/monthlysaf/foryou1/"+i), foryou2msaf = fd.getReference("Telepackage/monthlysaf/foryou2/"+i), foryou3msaf = fd.getReference("Telepackage/monthlysaf/foryou3/"+i), foryou4msaf = fd.getReference("Telepackage/monthlysaf/foryou4/"+i), foryou5msaf = fd.getReference("Telepackage/monthlysaf/foryou5/"+i), foryou6msaf = fd.getReference("Telepackage/monthlysaf/foryou6/"+i), foryou7msaf = fd.getReference("Telepackage/monthlysaf/foryou7/"+i), foryou8msaf = fd.getReference("Telepackage/monthlysaf/foryou8/"+i), foryou9msaf = fd.getReference("Telepackage/monthlysaf/foryou9/"+i), foryou10msaf = fd.getReference("Telepackage/monthlysaf/foryou10/"+i), foryou11msaf = fd.getReference("Telepackage/monthlysaf/foryou11/"+i), foryou12msaf = fd.getReference("Telepackage/monthlysaf/foryou12/"+i)

                        , foryou1nsaf = fd.getReference("Telepackage/nightsaf/foryou1/"+i), foryou2nsaf = fd.getReference("Telepackage/nightsaf/foryou2/"+i), foryou3nsaf = fd.getReference("Telepackage/nightsaf/foryou3/"+i), foryou4nsaf = fd.getReference("Telepackage/nightsaf/foryou4/"+i), foryou5nsaf = fd.getReference("Telepackage/nightsaf/foryou5/"+i), foryou6nsaf = fd.getReference("Telepackage/nightsaf/foryou6/"+i), foryou7nsaf = fd.getReference("Telepackage/nightsaf/foryou7/"+i), foryou8nsaf = fd.getReference("Telepackage/nightsaf/foryou8/"+i), foryou9nsaf = fd.getReference("Telepackage/nightsaf/foryou9/"+i), foryou10nsaf = fd.getReference("Telepackage/nightsaf/foryou10/"+i), foryou11nsaf = fd.getReference("Telepackage/nightsaf/foryou11/"+i), foryou12nsaf = fd.getReference("Telepackage/nightsaf/foryou12/"+i);

                tab1dam.setValue("tab1dam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2dam.setValue("tab2dam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3dam.setValue("tab3dam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4dam.setValue("tab4dam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5dam.setValue("tab5dam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6dam.setValue("tab6dam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7dam.setValue("tab7dam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8dam.setValue("tab8dam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9dam.setValue("tab9dam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10dam.setValue("tab10dam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11dam.setValue("tab11dam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12dam.setValue("tab12dam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});



                    tab1wam.setValue("tab1wam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2wam.setValue("tab2wam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3wam.setValue("tab3wam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4wam.setValue("tab4wam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5wam.setValue("tab5wam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6wam.setValue("tab6wam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7wam.setValue("tab7wam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8wam.setValue("tab8wam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9wam.setValue("tab9wam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10wam.setValue("tab10wam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11wam.setValue("tab11wam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12wam.setValue("tab12wam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab1mam.setValue("tab1mam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2mam.setValue("tab2mam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3mam.setValue("tab3mam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4mam.setValue("tab4mam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5mam.setValue("tab5mam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6mam.setValue("tab6mam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7mam.setValue("tab7mam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8mam.setValue("tab8mam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9mam.setValue("tab9mam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10mam.setValue("tab10mam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11mam.setValue("tab11mam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12mam.setValue("tab12mam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab1nam.setValue("tab1nam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2nam.setValue("tab2nam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3nam.setValue("tab3nam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4nam.setValue("tab4nam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5nam.setValue("tab5nam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6nam.setValue("tab6nam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7nam.setValue("tab7nam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8nam.setValue("tab8nam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9nam.setValue("tab9nam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10nam.setValue("tab10nam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11nam.setValue("tab11nam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12nam.setValue("tab12nam"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

//##################english

                    tab1d.setValue("tab1d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2d.setValue("tab2d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3d.setValue("tab3d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4d.setValue("tab4d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5d.setValue("tab5d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6d.setValue("tab6d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7d.setValue("tab7d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8d.setValue("tab8d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9d.setValue("tab9d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10d.setValue("tab10d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11d.setValue("tab11d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12d.setValue("tab12d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});



                    tab1w.setValue("tab1w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2w.setValue("tab2w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3w.setValue("tab3w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4w.setValue("tab4w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5w.setValue("tab5w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6w.setValue("tab6w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7w.setValue("tab7w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8w.setValue("tab8w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9w.setValue("tab9w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10w.setValue("tab10w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11w.setValue("tab11w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12w.setValue("tab12w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab1m.setValue("tab1m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2m.setValue("tab2m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3m.setValue("tab3m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4m.setValue("tab4m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5m.setValue("tab5m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6m.setValue("tab6m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7m.setValue("tab7m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8m.setValue("tab8m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9m.setValue("tab9m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10m.setValue("tab10m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11m.setValue("tab11m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12m.setValue("tab12m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab1n.setValue("tab1n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2n.setValue("tab2n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3n.setValue("tab3n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4n.setValue("tab4n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5n.setValue("tab5n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6n.setValue("tab6n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7n.setValue("tab7n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8n.setValue("tab8n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9n.setValue("tab9n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10n.setValue("tab10n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11n.setValue("tab11n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12n.setValue("tab12n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab1dsaf.setValue("tab1dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2dsaf.setValue("tab2dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3dsaf.setValue("tab3dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4dsaf.setValue("tab4dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5dsaf.setValue("tab5dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6dsaf.setValue("tab6dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7dsaf.setValue("tab7dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8dsaf.setValue("tab8dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9dsaf.setValue("tab9dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10dsaf.setValue("tab10dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11dsaf.setValue("tab11dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12dsaf.setValue("tab12dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});



                    tab1wsaf.setValue("tab1wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2wsaf.setValue("tab2wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3wsaf.setValue("tab3wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4wsaf.setValue("tab4wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5wsaf.setValue("tab5wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6wsaf.setValue("tab6wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7wsaf.setValue("tab7wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8wsaf.setValue("tab8wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9wsaf.setValue("tab9wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10wsaf.setValue("tab10wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11wsaf.setValue("tab11wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12wsaf.setValue("tab12wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab1msaf.setValue("tab1msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2msaf.setValue("tab2msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3msaf.setValue("tab3msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4msaf.setValue("tab4msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5msaf.setValue("tab5msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6msaf.setValue("tab6msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7msaf.setValue("tab7msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8msaf.setValue("tab8msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9msaf.setValue("tab9msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10msaf.setValue("tab10msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11msaf.setValue("tab11msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12msaf.setValue("tab12msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab1nsaf.setValue("tab1nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2nsaf.setValue("tab2nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3nsaf.setValue("tab3nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4nsaf.setValue("tab4nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5nsaf.setValue("tab5nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6nsaf.setValue("tab6nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7nsaf.setValue("tab7nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8nsaf.setValue("tab8nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9nsaf.setValue("tab9nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10nsaf.setValue("tab10nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11nsaf.setValue("tab11nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12nsaf.setValue("tab12nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab1damsaf.setValue("tab1damsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2damsaf.setValue("tab2damsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3damsaf.setValue("tab3damsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4damsaf.setValue("tab4damsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5damsaf.setValue("tab5damsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6damsaf.setValue("tab6damsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7damsaf.setValue("tab7damsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8damsaf.setValue("tab8damsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9damsaf.setValue("tab9damsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10damsaf.setValue("tab10damsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11damsaf.setValue("tab11damsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12damsaf.setValue("tab12damsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});



                    tab1wamsaf.setValue("tab1wamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2wamsaf.setValue("tab2wamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3wamsaf.setValue("tab3wamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4wamsaf.setValue("tab4wamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5wamsaf.setValue("tab5wamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6wamsaf.setValue("tab6wamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7wamsaf.setValue("tab7wamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8wamsaf.setValue("tab8wamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9wamsaf.setValue("tab9wamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10wamsaf.setValue("tab10wamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11wamsaf.setValue("tab11wamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12wamsaf.setValue("tab12wamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab1mamsaf.setValue("tab1mamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2mamsaf.setValue("tab2mamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3mamsaf.setValue("tab3mamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4mamsaf.setValue("tab4mamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5mamsaf.setValue("tab5mamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6mamsaf.setValue("tab6mamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7mamsaf.setValue("tab7mamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8mamsaf.setValue("tab8mamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9mamsaf.setValue("tab9mamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10mamsaf.setValue("tab10mamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11mamsaf.setValue("tab11mamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12mamsaf.setValue("tab12mamsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab1namsaf.setValue("tab1namsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tab2namsaf.setValue("tab2namsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab3namsaf.setValue("tab3namsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab4namsaf.setValue("tab4namsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab5namsaf.setValue("tab5namsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab6namsaf.setValue("tab6namsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab7namsaf.setValue("tab7namsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab8namsaf.setValue("tab8namsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab9namsaf.setValue("tab9namsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab10namsaf.setValue("tab10namsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tab11namsaf.setValue("tab11namsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tab12namsaf.setValue("tab12namsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                   //#################tagggg
                    tagd1.setValue("tagd1"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagd2.setValue("tagd2"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagd3.setValue("tagd3"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagd4.setValue("tagd4"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagd5.setValue("tagd5"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagd6.setValue("tagd6"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagd7.setValue("tagd7"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagd8.setValue("tagd8"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagd9.setValue("tagd9"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagd10.setValue("tagd10"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagd11.setValue("tagd11"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagd12.setValue("tagd12"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagw1.setValue("tagw1"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagw2.setValue("tagw2"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagw3.setValue("tagw3"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagw4.setValue("tagw4"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagw5.setValue("tagw5"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagw6.setValue("tagw6"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagw7.setValue("tagw7"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagw8.setValue("tagw8"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagw9.setValue("tagw9"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagw10.setValue("tagw10"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagw11.setValue("tagw11"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagw12.setValue("tagw12"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagm1.setValue("tagm1"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagm2.setValue("tagm2"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagm3.setValue("tagm3"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagm4.setValue("tagm4"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagm5.setValue("tagm5"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagm6.setValue("tagm6"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagm7.setValue("tagm7"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagm8.setValue("tagm8"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagm9.setValue("tagm9"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagm10.setValue("tagm10"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagm11.setValue("tagm11"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagm12.setValue("tagm12"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagn1.setValue("tagn1"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagn2.setValue("tagn2"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagn3.setValue("tagn3"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagn4.setValue("tagn4"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagn5.setValue("tagn5"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagn6.setValue("tagn6"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagn7.setValue("tagn7"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagn8.setValue("tagn8"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagn9.setValue("tagn9"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagn10.setValue("tagn10"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagn11.setValue("tagn11"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagn12.setValue("tagn12"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagdsaf1.setValue("tagdsaf1"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagdsaf2.setValue("tagdsaf2"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagdsaf3.setValue("tagdsaf3"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagdsaf4.setValue("tagdsaf4"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagdsaf5.setValue("tagdsaf5"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagdsaf6.setValue("tagdsaf6"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagdsaf7.setValue("tagdsaf7"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagdsaf8.setValue("tagdsaf8"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagdsaf9.setValue("tagdsaf9"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagdsaf10.setValue("tagdsaf10"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagdsaf11.setValue("tagdsaf11"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagdsaf12.setValue("tagdsaf12"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagwsaf1.setValue("tagwsaf1"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagwsaf2.setValue("tagwsaf2"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagwsaf3.setValue("tagwsaf3"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagwsaf4.setValue("tagwsaf4"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagwsaf5.setValue("tagwsaf5"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagwsaf6.setValue("tagwsaf6"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagwsaf7.setValue("tagwsaf7"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagwsaf8.setValue("tagwsaf8"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagwsaf9.setValue("tagwsaf9"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagwsaf10.setValue("tagwsaf10"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagwsaf11.setValue("tagwsaf11"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagwsaf12.setValue("tagwsaf12"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagmsaf1.setValue("tagmsaf1"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagmsaf2.setValue("tagmsaf2"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagmsaf3.setValue("tagmsaf3"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagmsaf4.setValue("tagmsaf4"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagmsaf5.setValue("tagmsaf5"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagmsaf6.setValue("tagmsaf6"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagmsaf7.setValue("tagmsaf7"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagmsaf8.setValue("tagmsaf8"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagmsaf9.setValue("tagmsaf9"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagmsaf10.setValue("tagmsaf10"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagmsaf11.setValue("tagmsaf11"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagmsaf12.setValue("tagmsaf12"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagnsaf1.setValue("tagnsaf1"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    tagnsaf2.setValue("tagnsaf2"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagnsaf3.setValue("tagnsaf3"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagnsaf4.setValue("tagnsaf4"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagnsaf5.setValue("tagnsaf5"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagnsaf6.setValue("tagnsaf6"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagnsaf7.setValue("tagnsaf7"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagnsaf8.setValue("tagnsaf8"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); tagnsaf9.setValue("tagnsaf9"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagnsaf10.setValue("tagnsaf10"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagnsaf11.setValue("tagnsaf11"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    tagnsaf12.setValue("tagnsaf12"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou1d.setValue("foryou1d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou2d.setValue("foryou2d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou3d.setValue("foryou3d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou4d.setValue("foryou4d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou5d.setValue("foryou5d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou6d.setValue("foryou6d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou7d.setValue("foryou7d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou8d.setValue("foryou8d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou9d.setValue("foryou9d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou10d.setValue("foryou10d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou11d.setValue("foryou11d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou12d.setValue("foryou12d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou1w.setValue("foryou1w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou2w.setValue("foryou2w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou3w.setValue("foryou3w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou4w.setValue("foryou4w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou5w.setValue("foryou5w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou6w.setValue("foryou6w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou7w.setValue("foryou7w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou8w.setValue("foryou8w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou9w.setValue("foryou9w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou10w.setValue("foryou10w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou11w.setValue("foryou11w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou12w.setValue("foryou12w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou1m.setValue("foryou1m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou2m.setValue("foryou2m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou3m.setValue("foryou3m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou4m.setValue("foryou4m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou5m.setValue("foryou5m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou6m.setValue("foryou6m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou7m.setValue("foryou7m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou8m.setValue("foryou8m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou9m.setValue("foryou9m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou10m.setValue("foryou10m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou11m.setValue("foryou11m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou12m.setValue("foryou12m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou1n.setValue("foryou1n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou2n.setValue("foryou2n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou3n.setValue("foryou3n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou4n.setValue("foryou4n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou5n.setValue("foryou5n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou6n.setValue("foryou6n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou7n.setValue("foryou7n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou8n.setValue("foryou8n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou9n.setValue("foryou9n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou10n.setValue("foryou10n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou11n.setValue("foryou11n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou12n.setValue("foryou12n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou1dsaf.setValue("foryou1dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou2dsaf.setValue("foryou2dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou3dsaf.setValue("foryou3dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou4dsaf.setValue("foryou4dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou5dsaf.setValue("foryou5dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou6dsaf.setValue("foryou6dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou7dsaf.setValue("foryou7dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou8dsaf.setValue("foryou8dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou9dsaf.setValue("foryou9dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou10dsaf.setValue("foryou10dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou11dsaf.setValue("foryou11dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou12dsaf.setValue("foryou12dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou1wsaf.setValue("foryou1wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou2wsaf.setValue("foryou2wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou3wsaf.setValue("foryou3wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou4wsaf.setValue("foryou4wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou5wsaf.setValue("foryou5wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou6wsaf.setValue("foryou6wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou7wsaf.setValue("foryou7wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou8wsaf.setValue("foryou8wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou9wsaf.setValue("foryou9wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou10wsaf.setValue("foryou10wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou11wsaf.setValue("foryou11wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou12wsaf.setValue("foryou12wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou1msaf.setValue("foryou1msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou2msaf.setValue("foryou2msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou3msaf.setValue("foryou3msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou4msaf.setValue("foryou4msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou5msaf.setValue("foryou5msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou6msaf.setValue("foryou6msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou7msaf.setValue("foryou7msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou8msaf.setValue("foryou8msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou9msaf.setValue("foryou9msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou10msaf.setValue("foryou10msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou11msaf.setValue("foryou11msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou12msaf.setValue("foryou12msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou1nsaf.setValue("foryou1nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou2nsaf.setValue("foryou2nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou3nsaf.setValue("foryou3nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou4nsaf.setValue("foryou4nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou5nsaf.setValue("foryou5nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou6nsaf.setValue("foryou6nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou7nsaf.setValue("foryou7nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou8nsaf.setValue("foryou8nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou9nsaf.setValue("foryou9nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou10nsaf.setValue("foryou10nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    foryou11nsaf.setValue("foryou11nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    foryou12nsaf.setValue("foryou12nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift1d.setValue("gift1d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift2d.setValue("gift2d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift3d.setValue("gift3d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift4d.setValue("gift4d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift5d.setValue("gift5d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift6d.setValue("gift6d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift7d.setValue("gift7d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift8d.setValue("gift8d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift9d.setValue("gift9d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift10d.setValue("gift10d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift11d.setValue("gift11d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift12d.setValue("gift12d"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    gift1w.setValue("gift1w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift2w.setValue("gift2w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift3w.setValue("gift3w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift4w.setValue("gift4w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift5w.setValue("gift5w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift6w.setValue("gift6w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift7w.setValue("gift7w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift8w.setValue("gift8w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift9w.setValue("gift9w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift10w.setValue("gift10w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift11w.setValue("gift11w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift12w.setValue("gift12w"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift1m.setValue("gift1m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift2m.setValue("gift2m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift3m.setValue("gift3m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift4m.setValue("gift4m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift5m.setValue("gift5m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift6m.setValue("gift6m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift7m.setValue("gift7m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift8m.setValue("gift8m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift9m.setValue("gift9m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift10m.setValue("gift10m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift11m.setValue("gift11m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift12m.setValue("gift12m"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    gift1n.setValue("gift1n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift2n.setValue("gift2n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift3n.setValue("gift3n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift4n.setValue("gift4n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift5n.setValue("gift5n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift6n.setValue("gift6n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift7n.setValue("gift7n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift8n.setValue("gift8n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift9n.setValue("gift9n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift10n.setValue("gift10n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift11n.setValue("gift11n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift12n.setValue("gift12n"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});


                    gift1dsaf.setValue("gift1dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift2dsaf.setValue("gift2dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift3dsaf.setValue("gift3dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift4dsaf.setValue("gift4dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift5dsaf.setValue("gift5dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift6dsaf.setValue("gift6dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift7dsaf.setValue("gift7dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift8dsaf.setValue("gift8dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift9dsaf.setValue("gift9dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift10dsaf.setValue("gift10dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift11dsaf.setValue("gift11dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift12dsaf.setValue("gift12dsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    gift1wsaf.setValue("gift1wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift2wsaf.setValue("gift2wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift3wsaf.setValue("gift3wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift4wsaf.setValue("gift4wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift5wsaf.setValue("gift5wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift6wsaf.setValue("gift6wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift7wsaf.setValue("gift7wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift8wsaf.setValue("gift8wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift9wsaf.setValue("gift9wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift10wsaf.setValue("gift10wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift11wsaf.setValue("gift11wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift12wsaf.setValue("gift12wsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift1msaf.setValue("gift1msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift2msaf.setValue("gift2msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift3msaf.setValue("gift3msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift4msaf.setValue("gift4msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift5msaf.setValue("gift5msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift6msaf.setValue("gift6msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift7msaf.setValue("gift7msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift8msaf.setValue("gift8msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift9msaf.setValue("gift9msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift10msaf.setValue("gift10msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift11msaf.setValue("gift11msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift12msaf.setValue("gift12msaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                    gift1nsaf.setValue("gift1nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift2nsaf.setValue("gift2nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift3nsaf.setValue("gift3nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift4nsaf.setValue("gift4nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift5nsaf.setValue("gift5nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift6nsaf.setValue("gift6nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }}); gift7nsaf.setValue("gift7nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift8nsaf.setValue("gift8nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift9nsaf.setValue("gift9nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift10nsaf.setValue("gift10nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift11nsaf.setValue("gift11nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});
                    gift12nsaf.setValue("gift12nsaf"+i) .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
                        succ[0] = succ[0] +1;
                        if(succ[0] ==2880){
                            Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

                        }
                    }});

                }*/



            }
        });

        broadcastReceiver=new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                try{
                    unregisterReceiver(broadcastReceiver);
                    try{
                        handler.removeCallbacks(myRunnable);
                    }catch(IllegalArgumentException e){
                        //Toast.makeText(getApplicationContext(),"view not found", Toast.LENGTH_SHORT).show();
                    }
                    wm.removeView(view1);
                }catch(IllegalArgumentException e){
                    //Toast.makeText(getApplicationContext(),"view not found", Toast.LENGTH_SHORT).show();
                }
                //
            }
        };
        serviceconnected=new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                try{
                    unregisterReceiver(serviceconnected);

                    if (Build.VERSION.SDK_INT>=Build.VERSION_CODES.M&&!Settings.canDrawOverlays(getApplicationContext())) {
                        Intent intentt = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse("package:" + getPackageName()));
                        startActivityForResult(intentt, 2);
                    }else{
                        //Toast.makeText(getApplicationContext(),"service connected", Toast.LENGTH_SHORT).show();
                        editor.putBoolean("isservice",false);
                        editor.commit();
                        ussd();
                    }

                }catch(IllegalArgumentException e){
                    //Toast.makeText(getApplicationContext(),"view not found", Toast.LENGTH_SHORT).show();
                }
                //
            }
        };
        registerReceiver(serviceconnected,new IntentFilter("serviceconnected"));

      /*  BroadcastReceiver recharge=new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                String card=intent.getStringExtra("card");
                String ussd = "*" + "805*" + card+Uri.encode("#");
                Intent i=new Intent(Intent.ACTION_CALL,Uri.parse("tel:"+ussd));
                startActivity(i);
                //Toast.makeText(getApplicationContext(),"recharge", Toast.LENGTH_SHORT).show();

            }
        };
        registerReceiver(recharge,new IntentFilter("recharge"));*/
    }
   /* private void textRecognizer() {
        if (ContextCompat.checkSelfPermission(getApplicationContext(), Manifest.permission.CAMERA)
                == PackageManager.PERMISSION_DENIED) {
            ActivityCompat.requestPermissions(this, new String[] {Manifest.permission.CAMERA}, 5);
        }else{
        textRecognizer = new TextRecognizer.Builder(getApplicationContext()).build();
        cameraSource = new CameraSource.Builder(getApplicationContext(), textRecognizer)
                .setRequestedPreviewSize(1280, 1024)
                .build();

        surfaceView = findViewById(R.id.surfaceView);
        surfaceView.getHolder().addCallback(new SurfaceHolder.Callback() {
            @Override
            public void surfaceCreated(SurfaceHolder holder) {
                try {
                    cameraSource.start(surfaceView.getHolder());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            @Override
            public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) {
            }

            @Override
            public void surfaceDestroyed(SurfaceHolder holder) {
                cameraSource.stop();
            }
        });


        textRecognizer.setProcessor(new Detector.Processor<TextBlock>() {
            @Override
            public void release() {
            }

            @Override
            public void receiveDetections(Detector.Detections<TextBlock> detections) {

                SparseArray<TextBlock> sparseArray = detections.getDetectedItems();
                StringBuilder stringBuilder = new StringBuilder();

                for (int i = 0; i < sparseArray.size(); ++i) {
                    TextBlock textBlock = sparseArray.valueAt(i);
                    if (textBlock != null && textBlock.getValue() != null) {
                        stringBuilder.append(textBlock.getValue() + " ");
                    }
                }

                final String stringText = stringBuilder.toString();

                Handler handler = new Handler(Looper.getMainLooper());
                handler.post(new Runnable() {
                    @Override
                    public void run() {
                        stringResult = stringText;
                        resultObtained();
                    }
                });
            }
        });
    }
    }*/

    private void resultObtained(){
       /* setContentView(R.layout.activity_main);
        textViewocr = findViewById(R.id.textViewoc);
        textViewocr.setText(stringResult);
        Toast.makeText(getApplicationContext(), stringResult, Toast.LENGTH_SHORT).show();*/
        //textToSpeech.speak(stringResult, TextToSpeech.QUEUE_FLUSH, null, null);
    }

    public void buttonStart(View view){
        setContentView(R.layout.surfaceview);
        //textRecognizer();
    }

    public boolean connection() {
        ConnectivityManager connMgr = (ConnectivityManager) getSystemService(CONNECTIVITY_SERVICE);
        NetworkInfo netin = connMgr.getActiveNetworkInfo();
        return netin != null && netin.isConnected();
    }

    public void addtab(String name,int drawableid) {

    }
    private void configureTabLayout() {
        SharedPreferences sharedPreferences = getSharedPreferences("but", Context.MODE_PRIVATE);
        if(!sharedPreferences.getBoolean("issafaricom",false)) {
       /*tabLayout.addTab(tabLayout.newTab().setText("internet").setIcon(R.drawable.morning));
        tabLayout.addTab(tabLayout.newTab().setText("voice"));
        tabLayout.addTab(tabLayout.newTab().setText("sms package"));
        tabLayout.addTab(tabLayout.newTab().setText("internet & voice"));
        tabLayout.addTab(tabLayout.newTab().setText("flexi"));
        tabLayout.addTab(tabLayout.newTab().setText("international voice"));
        tabLayout.addTab(tabLayout.newTab().setText("morning package"));
        tabLayout.addTab(tabLayout.newTab().setText("long term package"));
        tabLayout.addTab(tabLayout.newTab().setText("unlimited premium service"));*/
            String s = sharedPreferences.getString("language", "Am");
            if (sharedPreferences.getBoolean("holiday", false)) {
                if (Objects.equals(s, "Am")) {
                    tabLayout.addTab(tabLayout.newTab().setText("ametbal").setIcon(R.drawable.internet));
                }
                if (Objects.equals(s, "En")) {
                    tabLayout.addTab(tabLayout.newTab().setText("holiday").setIcon(R.drawable.internet));
                }
                if (tabLayout.getTabAt(10).isSelected()) {
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab1);
                    tabLayout.getTabAt(10).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                } else {
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                    tabLayout.getTabAt(10).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                }
            }
            if (Objects.equals(s, "Am")) {
                // tabLayout.addTab(tabLayout.newTab().setText("ኢንተርኔት").setIcon(R.drawable.internet));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab1name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab1name()).setIcon(R.drawable.internet));
                }
            }
            if (Objects.equals(s, "En")) {
                // tabLayout.addTab(tabLayout.newTab().setText("internet").setIcon(R.drawable.internet));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab1name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab1name()).setIcon(R.drawable.internet));
                }
            }

            if (Objects.equals(s, "Am")) {
                // tabLayout.addTab(tabLayout.newTab().setText("ድምፅ").setIcon(R.drawable.voicepackage));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab2name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab2name()).setIcon(R.drawable.voicepackage));
                }
            }

            if (Objects.equals(s, "En")) {
                //tabLayout.addTab(tabLayout.newTab().setText("voice").setIcon(R.drawable.voicepackage));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab2name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab2name()).setIcon(R.drawable.voicepackage));
                }
            }
            if (Objects.equals(s, "Am")) {
                //tabLayout.addTab(tabLayout.newTab().setText("መልዕክት").setIcon(R.drawable.sms));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab3name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab3name()).setIcon(R.drawable.sms));
                }
            }
            if (Objects.equals(s, "En")) {
                //tabLayout.addTab(tabLayout.newTab().setText("sms package").setIcon(R.drawable.sms));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab3name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab3name()).setIcon(R.drawable.sms));
                }
            }
            if (Objects.equals(s, "Am")) {
                //tabLayout.addTab(tabLayout.newTab().setText("ኢንተርኔት እና ድምፅ").setIcon(R.drawable.internetandvoice));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab4name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab4name()).setIcon(R.drawable.internetandvoice));
                }
            }
            if (Objects.equals(s, "En")) {
                // tabLayout.addTab(tabLayout.newTab().setText("internet & voice").setIcon(R.drawable.internetandvoice));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab4name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab4name()).setIcon(R.drawable.internetandvoice));
                }
            }
            if (Objects.equals(s, "Am")) {
                //tabLayout.addTab(tabLayout.newTab().setText("ፍሌክሲ").setIcon(R.drawable.flexi));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).size()>0&&!loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab5name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab5name()).setIcon(R.drawable.flexi));
                }
            }
            if (Objects.equals(s, "En")) {
                //tabLayout.addTab(tabLayout.newTab().setText("flexi").setIcon(R.drawable.flexi));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).size()>0&&!loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab5name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab5name()).setIcon(R.drawable.flexi));
                }
            }
            if (Objects.equals(s, "Am")) {
                // tabLayout.addTab(tabLayout.newTab().setText("አለም አቀፍ ድምፅ").setIcon(R.drawable.internationalcall));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).size()>0&&!loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab6name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab6name()).setIcon(R.drawable.internationalcall));
                }
            }
            if (Objects.equals(s, "En")) {
                //tabLayout.addTab(tabLayout.newTab().setText("international voice").setIcon(R.drawable.internationalcall));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).size()>0&&!loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab6name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab6name()).setIcon(R.drawable.internationalcall));
                }
            }
            if (Objects.equals(s, "Am")) {
                // tabLayout.addTab(tabLayout.newTab().setText("ማለዳ ጥቅል").setIcon(R.drawable.morning));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).size()>0&&!loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab7name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab7name()).setIcon(R.drawable.morning));
                }
            }
            if (Objects.equals(s, "En")) {
                //    tabLayout.addTab(tabLayout.newTab().setText("morning package").setIcon(R.drawable.morning));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).size()>0&&!loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab7name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab7name()).setIcon(R.drawable.morning));
                }
            }
            if (Objects.equals(s, "Am")) {
                //tabLayout.addTab(tabLayout.newTab().setText("ረጅም ጊዜ ጥቅል").setIcon(R.drawable.longterm));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).size()>0&&!loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab8name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab8name()).setIcon(R.drawable.longterm));
                }
            }
            if (Objects.equals(s, "En")) {
                //tabLayout.addTab(tabLayout.newTab().setText("long term package").setIcon(R.drawable.longterm));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).size()>0&&!loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab8name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab8name()).setIcon(R.drawable.longterm));
                }
            }
            if (Objects.equals(s, "Am")) {
                //tabLayout.addTab(tabLayout.newTab().setText("ያልተገደበ ጥቅል").setIcon(R.drawable.unlimitedinternet));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab9name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab9name()).setIcon(R.drawable.unlimitedinternet));
                }
            }
            if (Objects.equals(s, "En")) {
                //tabLayout.addTab(tabLayout.newTab().setText("unlimited premium service").setIcon(R.drawable.unlimitedinternet));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).size()>0&&!loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab9name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab9name()).setIcon(R.drawable.unlimitedinternet));
                }
            }
            if (Objects.equals(s, "Am")) {
                // tabLayout.addTab(tabLayout.newTab().setText("የ 1 ብር ጥቅል").setIcon(R.drawable.onebirr));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).size()>0&&!loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab10name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab10name()).setIcon(R.drawable.onebirr));
                }
            }
            if (Objects.equals(s, "En")) {
                //     tabLayout.addTab(tabLayout.newTab().setText("1 Birr Package").setIcon(R.drawable.onebirr));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).size()>0&&!loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab10name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab10name()).setIcon(R.drawable.onebirr));
                }
            }
            if(s.equals("Am")){
                // tabLayout.addTab(tabLayout.newTab().setText("ጥቅልዎን ይቀይሩ").setIcon(R.drawable.convert));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab11name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab11name()).setIcon(R.drawable.convert));
                }
            }
            if(s.equals("En")){
                // tabLayout.addTab(tabLayout.newTab().setText("Convert Package").setIcon(R.drawable.convert));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab11name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab11name()).setIcon(R.drawable.convert));
                }
            }
            if(s.equals("Am")){
                // tabLayout.addTab(tabLayout.newTab().setText("ጥቅል ለማስተላለፍ").setIcon(R.drawable.transferpackage));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab12name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab12name()).setIcon(R.drawable.transferpackage));
                }
            }
            if(s.equals("En")){
                // tabLayout.addTab(tabLayout.newTab().setText("Transfer Package").setIcon(R.drawable.transferpackage));
                if(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).size()>0&& !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab12name().equals("")){
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab12name()).setIcon(R.drawable.transferpackage));
                }
            }

            for(int i=0;i<tabLayout.getTabCount();i++){
                if (tabLayout.getTabAt(i).isSelected()) {
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab1);
                    tabLayout.getTabAt(i).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                } else {
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                    tabLayout.getTabAt(i).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                }
            }


            final ViewPager viewPager = findViewById(R.id.pager);
            final PagerAdapter adapter = new TabPagerAdapter
                    (getSupportFragmentManager(),
                            tabLayout.getTabCount(), sharedPreferences);
            viewPager.setAdapter(adapter);
            viewPager.addOnPageChangeListener(new
                    TabLayout.TabLayoutOnPageChangeListener(tabLayout));
            tabLayout.addOnTabSelectedListener(new
                                                       TabLayout.OnTabSelectedListener() {
                                                           @Override
                                                           public void onTabSelected(TabLayout.Tab tab) {
                                                               int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab1);
                                                               viewPager.setCurrentItem(tab.getPosition());
                                                               tab.getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);

                                                           }

                                                           @Override
                                                           public void onTabUnselected(TabLayout.Tab tab) {
                                                               int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                                                               tab.getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                                                           }

                                                           @Override
                                                           public void onTabReselected(TabLayout.Tab tab) {
                                                               int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab1);
                                                               tab.getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                                                           }
                                                       });
        }else {
            String s = sharedPreferences.getString("language", "Am");

            if (sharedPreferences.getBoolean("holiday", false)) {
                if (Objects.equals(s, "Am")) {
                    tabLayout.addTab(tabLayout.newTab().setText("ametbal").setIcon(R.drawable.internet));
                }
                if (Objects.equals(s, "En")) {
                    tabLayout.addTab(tabLayout.newTab().setText("holiday").setIcon(R.drawable.internet));
                }
                if (tabLayout.getTabAt(10).isSelected()) {
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab1);
                    tabLayout.getTabAt(10).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                } else {
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                    tabLayout.getTabAt(10).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                }
            }
            if (Objects.equals(s, "Am")) {
                // tabLayout.addTab(tabLayout.newTab().setText("ኢንተርኔት").setIcon(R.drawable.internet));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab1name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).get(0).gettab1name()).setIcon(R.drawable.internet));
                }
            }

            if (Objects.equals(s, "En")) {
                // tabLayout.addTab(tabLayout.newTab().setText("internet").setIcon(R.drawable.internet));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab1name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).get(0).gettab1name()).setIcon(R.drawable.internet));
                }
            }

            if (Objects.equals(s, "Am")) {
                // tabLayout.addTab(tabLayout.newTab().setText("ድምፅ").setIcon(R.drawable.voicepackage));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab2name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).get(0).gettab2name()).setIcon(R.drawable.voicepackage));
                }
            }
            if (Objects.equals(s, "En")) {
                //tabLayout.addTab(tabLayout.newTab().setText("voice").setIcon(R.drawable.voicepackage));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab2name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).get(0).gettab2name()).setIcon(R.drawable.voicepackage));
                }
            }
            if (Objects.equals(s, "Am")) {
                //tabLayout.addTab(tabLayout.newTab().setText("መልዕክት").setIcon(R.drawable.sms));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab3name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).get(0).gettab3name()).setIcon(R.drawable.sms));
                }
            }
            if (Objects.equals(s, "En")) {
                //tabLayout.addTab(tabLayout.newTab().setText("sms package").setIcon(R.drawable.sms));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab3name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).get(0).gettab3name()).setIcon(R.drawable.sms));
                }
            }
            if (Objects.equals(s, "Am")) {
                //tabLayout.addTab(tabLayout.newTab().setText("ኢንተርኔት እና ድምፅ").setIcon(R.drawable.internetandvoice));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab4name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).get(0).gettab4name()).setIcon(R.drawable.internetandvoice));
                }
            }
            if (Objects.equals(s, "En")) {
                // tabLayout.addTab(tabLayout.newTab().setText("internet & voice").setIcon(R.drawable.internetandvoice));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab4name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).get(0).gettab4name()).setIcon(R.drawable.internetandvoice));
                }
            }
            if (Objects.equals(s, "Am")) {
                //tabLayout.addTab(tabLayout.newTab().setText("ፍሌክሲ").setIcon(R.drawable.flexi));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab5name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).get(0).gettab5name()).setIcon(R.drawable.flexi));
                }
            }
            if (Objects.equals(s, "En")) {
                // tabLayout.addTab(tabLayout.newTab().setText("flexi").setIcon(R.drawable.flexi));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab5name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).get(0).gettab5name()).setIcon(R.drawable.flexi));
                }
            }
            if (Objects.equals(s, "Am")) {
                // tabLayout.addTab(tabLayout.newTab().setText("አለም አቀፍ ድምፅ").setIcon(R.drawable.internationalcall));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab6name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).get(0).gettab6name()).setIcon(R.drawable.internationalcall));
                }
            }
            if (Objects.equals(s, "En")) {
                //tabLayout.addTab(tabLayout.newTab().setText("international voice").setIcon(R.drawable.internationalcall));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab6name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).get(0).gettab6name()).setIcon(R.drawable.internationalcall));
                }
            }
            if (Objects.equals(s, "Am")) {
                // tabLayout.addTab(tabLayout.newTab().setText("ማለዳ ጥቅል").setIcon(R.drawable.morning));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab7name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).get(0).gettab7name()).setIcon(R.drawable.morning));
                }
            }
            if (Objects.equals(s, "En")) {
                //    tabLayout.addTab(tabLayout.newTab().setText("morning package").setIcon(R.drawable.morning));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab7name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).get(0).gettab7name()).setIcon(R.drawable.morning));
                }
            }
            if (Objects.equals(s, "Am")) {
                //tabLayout.addTab(tabLayout.newTab().setText("ረጅም ጊዜ ጥቅል").setIcon(R.drawable.longterm));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab8name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).get(0).gettab8name()).setIcon(R.drawable.longterm));
                }
            }
            if (Objects.equals(s, "En")) {
                //tabLayout.addTab(tabLayout.newTab().setText("long term package").setIcon(R.drawable.longterm));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab8name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).get(0).gettab8name()).setIcon(R.drawable.longterm));
                }
            }
            if (Objects.equals(s, "Am")) {
                //tabLayout.addTab(tabLayout.newTab().setText("ያልተገደበ ጥቅል").setIcon(R.drawable.unlimitedinternet));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab9name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).get(0).gettab9name()).setIcon(R.drawable.unlimitedinternet));
                }
            }
            if (Objects.equals(s, "En")) {
                //tabLayout.addTab(tabLayout.newTab().setText("unlimited premium service").setIcon(R.drawable.unlimitedinternet));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab9name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).get(0).gettab9name()).setIcon(R.drawable.unlimitedinternet));
                }
            }
            if (Objects.equals(s, "Am")) {
                // tabLayout.addTab(tabLayout.newTab().setText("የ 1 ብር ጥቅል").setIcon(R.drawable.onebirr));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab10name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).get(0).gettab10name()).setIcon(R.drawable.onebirr));
                }
            }
            if (Objects.equals(s, "En")) {
                //     tabLayout.addTab(tabLayout.newTab().setText("1 Birr Package").setIcon(R.drawable.onebirr));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab10name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).get(0).gettab10name()).setIcon(R.drawable.onebirr));
                }
            }
            if (s.equals("Am")) {
                // tabLayout.addTab(tabLayout.newTab().setText("ጥቅልዎን ይቀይሩ").setIcon(R.drawable.convert));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab11name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).get(0).gettab11name()).setIcon(R.drawable.convert));
                }
            }
            if (s.equals("En")) {
                // tabLayout.addTab(tabLayout.newTab().setText("Convert Package").setIcon(R.drawable.convert));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab11name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).get(0).gettab11name()).setIcon(R.drawable.convert));
                }
            }
            if (s.equals("Am")) {
                // tabLayout.addTab(tabLayout.newTab().setText("ጥቅል ለማስተላለፍ").setIcon(R.drawable.transferpackage));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameetam).get(0).gettab12name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesafam).get(0).gettab12name()).setIcon(R.drawable.transferpackage));
                }
            }
            if (s.equals("En")) {
                // tabLayout.addTab(tabLayout.newTab().setText("Transfer Package").setIcon(R.drawable.transferpackage));
                if (loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).size() > 0 && !loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnameet).get(0).gettab12name().equals("")) {
                    tabLayout.addTab(tabLayout.newTab().setText(loginDataBaseAdapter.gettabname(loginDataBaseAdapter.tabnamesaf).get(0).gettab12name()).setIcon(R.drawable.transferpackage));
                }
            }

            for (int i = 0; i < tabLayout.getTabCount(); i++) {
                if (tabLayout.getTabAt(i).isSelected()) {
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab1);
                    tabLayout.getTabAt(i).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                } else {
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                    tabLayout.getTabAt(i).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                }
            }


            final ViewPager viewPager = findViewById(R.id.pager);
            final PagerAdapter adapter = new TabPagerAdapter
                    (getSupportFragmentManager(),
                            tabLayout.getTabCount(), sharedPreferences);
            viewPager.setAdapter(adapter);
            viewPager.addOnPageChangeListener(new
                    TabLayout.TabLayoutOnPageChangeListener(tabLayout));
            tabLayout.addOnTabSelectedListener(new
                                                       TabLayout.OnTabSelectedListener() {
                                                           @Override
                                                           public void onTabSelected(TabLayout.Tab tab) {
                                                               int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab1);
                                                               viewPager.setCurrentItem(tab.getPosition());
                                                               tab.getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);

                                                           }

                                                           @Override
                                                           public void onTabUnselected(TabLayout.Tab tab) {
                                                               int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                                                               tab.getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                                                           }

                                                           @Override
                                                           public void onTabReselected(TabLayout.Tab tab) {
                                                               int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab1);
                                                               tab.getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                                                           }
                                                       });
        }
    }

    private void configureTabLayout1() {
        final TabLayout tabLayout = findViewById(R.id.tab_layoutb);
        SharedPreferences sharedPreferences = getSharedPreferences("but", Context.MODE_PRIVATE);
        if(!sharedPreferences.getBoolean("issafaricom",false)){
            String s = sharedPreferences.getString("language", "Am");
            // tabLayout.addTab(tabLayout.newTab().setText("Home").setIcon(R.drawable.home));
        /* tabLayout.addTab(tabLayout.newTab().setText("1 Birr package").setIcon(R.drawable.onebirr));
        tabLayout.addTab(tabLayout.newTab().setText("Convert Package").setIcon(R.drawable.convert));
      */ //Toast.makeText(getApplicationContext(), s, Toast.LENGTH_SHORT).show();
            if (Objects.equals(s, "Am")) {
                //Toast.makeText(getApplicationContext(), "amharic", Toast.LENGTH_SHORT).show();
                tabLayout.addTab(tabLayout.newTab().setText("ዕለታዊ").setIcon(R.drawable.home));
                tabLayout.addTab(tabLayout.newTab().setText("ይሙሉ").setIcon(R.drawable.recharge));
                tabLayout.addTab(tabLayout.newTab().setText("1 ብር ጥቅል").setIcon(R.drawable.onebirr));
                tabLayout.addTab(tabLayout.newTab().setText("ያልተገደበ").setIcon(R.drawable.unlimitedinternet));
                tabLayout.addTab(tabLayout.newTab().setText("ያልተገደበ").setIcon(R.drawable.add));
            } else if (Objects.equals(s, "En")) {
                //Toast.makeText(getApplicationContext(), "english", Toast.LENGTH_SHORT).show();
                tabLayout.addTab(tabLayout.newTab().setText("Home").setIcon(R.drawable.home));
                tabLayout.addTab(tabLayout.newTab().setText("recharge").setIcon(R.drawable.recharge));
                tabLayout.addTab(tabLayout.newTab().setText("1 birr").setIcon(R.drawable.onebirr));
                tabLayout.addTab(tabLayout.newTab().setText("Unlimited").setIcon(R.drawable.unlimitedinternet));
                tabLayout.addTab(tabLayout.newTab().setText("ADD").setIcon(R.drawable.add));

            }
            if (tabLayout.getTabAt(0).isSelected()) {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                tabLayout.getTabAt(0).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            } else {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                tabLayout.getTabAt(0).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            }
            if (tabLayout.getTabAt(1).isSelected()) {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                tabLayout.getTabAt(1).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            } else {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                tabLayout.getTabAt(1).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            }
            if (tabLayout.getTabAt(2).isSelected()) {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                tabLayout.getTabAt(2).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            } else {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                tabLayout.getTabAt(2).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            }
            if (tabLayout.getTabAt(3).isSelected()) {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                tabLayout.getTabAt(3).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            } else {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                tabLayout.getTabAt(3).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            } if (tabLayout.getTabAt(4).isSelected()) {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                tabLayout.getTabAt(4).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            } else {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                tabLayout.getTabAt(4).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            }
            tabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
                @Override
                public void onTabReselected(TabLayout.Tab tab) {
                    TabLayout tabLayout1 = findViewById(R.id.tab_layout);
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                    tabLayout.getTabAt(tab.getPosition()).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                    switch (tab.getPosition()) {
                        case 0:
                            TabLayout.Tab tab1 = tabLayout1.getTabAt(0);
                            tab1.select();
                            break;
                        case 1:
                            rech.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
                            rech.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
                            rech.show();
                            break;
                        case 2:
                            TabLayout.Tab tab2 = tabLayout1.getTabAt(9);
                            tab2.select();

                            break;
                        case 3:
                            TabLayout.Tab tab3 = tabLayout1.getTabAt(8);
                            tab3.select();
                            break;
                        case 4:
                            FragmentManager manager = getSupportFragmentManager();
                            FragmentTransaction transaction = manager.beginTransaction();
                            Fragment sample = new onebirrpackagedaily(0);
                            transaction.replace(R.id.pager, sample);
                            transaction.addToBackStack(null);
                            transaction.commit();    break;
                    }
                }

                @Override
                public void onTabSelected(TabLayout.Tab tab) {
                    TabLayout tabLayout1 = findViewById(R.id.tab_layout);
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                    tabLayout.getTabAt(tab.getPosition()).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                    switch (tab.getPosition()) {
                        case 0:
                            TabLayout.Tab tab1 = tabLayout1.getTabAt(0);
                    if(tab1!=null){
                            tab1.select();
                           }
                            break;
                        case 1:
                           /* rech.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
                            rech.show();*/
                            /*MyListData myListData = new MyListData();
                            myListData.setForyou1("kaleb");

                            loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,""+2);
                            loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,""+2);*/
                            /* MyListData myListData = new MyListData();
                            myListData.setForyou1("kaleb"+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily));
                            myListData.setForyou1("kaleb"+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily));
                            myListData.setTab1("kaleb"+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily));

                            loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                            loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                            loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);
                            loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);
                             Toast.makeText(getApplicationContext(), String.valueOf(loginDataBaseAdapter.get(loginDataBaseAdapter.tabledaily).get(0).getId()), Toast.LENGTH_SHORT).show();
*/
                            loaddata l= new loaddata();
                            l.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
                            loaddata1 l1= new loaddata1();
                            l1.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
                            loaddata2 l2= new loaddata2();
                            l2.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
                            loaddata3 l3= new loaddata3();
                            l3.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
                            loaddata4 l4= new loaddata4();
                            l4.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
                            loaddata5 l5= new loaddata5();
                            l5.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
                            loaddata6 l6= new loaddata6();
                            l6.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
                            loaddata7 l7= new loaddata7();
                            l7.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
                            loaddata8 l8= new loaddata8();
                            l8.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
                            loaddata9 l9= new loaddata9();
                            l9.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);


                            break;
                        case 2:
                            updatedata();
                            /*databaseassign();
                            databaseassignamharic();*/
                           /*myListData=new MyListData();
                            myListData.setForyou1("kalebf");
                            myListData.setGift1("kalebg");
                            myListData.setTag1("kalebt");
                              loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,"1");*/

                            break;
                        case 3:
                            TabLayout.Tab tab3 = tabLayout1.getTabAt(8);
                            tab3.select();
                            /*loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tabledailyam);
                            loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tabledaily);
                            loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tabledailysaf);
                            loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tabledailyamsaf);
                            databaseassign();
                            databaseassignamharic();*/


                            break;

                    }
                }

                @Override
                public void onTabUnselected(TabLayout.Tab tab) {
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                    tabLayout.getTabAt(tab.getPosition()).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);

                }


            });
        }else{
            String s = sharedPreferences.getString("language", "Am");
            // tabLayout.addTab(tabLayout.newTab().setText("Home").setIcon(R.drawable.home));
        /* tabLayout.addTab(tabLayout.newTab().setText("1 Birr package").setIcon(R.drawable.onebirr));
        tabLayout.addTab(tabLayout.newTab().setText("Convert Package").setIcon(R.drawable.convert));
      */ //Toast.makeText(getApplicationContext(), s, Toast.LENGTH_SHORT).show();
            if (Objects.equals(s, "Am")) {
                //Toast.makeText(getApplicationContext(), "amharic", Toast.LENGTH_SHORT).show();
                tabLayout.addTab(tabLayout.newTab().setText("ዕለታዊ").setIcon(R.drawable.home));
                tabLayout.addTab(tabLayout.newTab().setText("ይሙሉ").setIcon(R.drawable.recharge));
                tabLayout.addTab(tabLayout.newTab().setText("1 ብር ጥቅል").setIcon(R.drawable.onebirr));
                tabLayout.addTab(tabLayout.newTab().setText("ያልተገደበ").setIcon(R.drawable.unlimitedinternet));
            } else if (Objects.equals(s, "En")) {
                //Toast.makeText(getApplicationContext(), "english", Toast.LENGTH_SHORT).show();
                tabLayout.addTab(tabLayout.newTab().setText("Home").setIcon(R.drawable.home));
                tabLayout.addTab(tabLayout.newTab().setText("recharge").setIcon(R.drawable.recharge));
                tabLayout.addTab(tabLayout.newTab().setText("1 birr").setIcon(R.drawable.onebirr));
                tabLayout.addTab(tabLayout.newTab().setText("Unlimited").setIcon(R.drawable.unlimitedinternet));

            }
            if (tabLayout.getTabAt(0).isSelected()) {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                tabLayout.getTabAt(0).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            } else {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                tabLayout.getTabAt(0).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            }
            if (tabLayout.getTabAt(1).isSelected()) {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                tabLayout.getTabAt(1).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            } else {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                tabLayout.getTabAt(1).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            }
            if (tabLayout.getTabAt(2).isSelected()) {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                tabLayout.getTabAt(2).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            } else {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                tabLayout.getTabAt(2).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            }
            if (tabLayout.getTabAt(3).isSelected()) {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                tabLayout.getTabAt(3).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            } else {
                int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                tabLayout.getTabAt(3).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
            }
            tabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
                @Override
                public void onTabReselected(TabLayout.Tab tab) {
                    TabLayout tabLayout1 = findViewById(R.id.tab_layout);
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                    tabLayout.getTabAt(tab.getPosition()).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                    switch (tab.getPosition()) {
                        case 0:
                            TabLayout.Tab tab1 = tabLayout1.getTabAt(0);
                            tab1.select();
                            break;
                        case 1:
                            rech.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
                            //rech.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
                            rech.show();
                            break;
                        case 2:
                            TabLayout.Tab tab2 = tabLayout1.getTabAt(9);
                            tab2.select();
                            break;
                        case 3:
                            TabLayout.Tab tab3 = tabLayout1.getTabAt(8);
                            tab3.select();
                            break;

                    }
                }

                @Override
                public void onTabSelected(TabLayout.Tab tab) {
                    TabLayout tabLayout1 = findViewById(R.id.tab_layout);
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.tab2);
                    tabLayout.getTabAt(tab.getPosition()).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);
                    switch (tab.getPosition()) {
                        case 0:
                            TabLayout.Tab tab1 = tabLayout1.getTabAt(0);
                            tab1.select();
                            break;
                        case 1:
                            rech.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
                            rech.show();

                            break;
                        case 2:
                            TabLayout.Tab tab2 = tabLayout1.getTabAt(9);
                            tab2.select();
                            break;
                        case 3:
                            TabLayout.Tab tab3 = tabLayout1.getTabAt(8);
                            tab3.select();
                            break;

                    }
                }

                @Override
                public void onTabUnselected(TabLayout.Tab tab) {
                    int tabi = ContextCompat.getColor(getBaseContext(), R.color.white);
                    tabLayout.getTabAt(tab.getPosition()).getIcon().setColorFilter(tabi, PorterDuff.Mode.SRC_IN);

                }


            });
        }
    }
    @Override
    public void onFragmentInteraction(Uri uri) {
    }
    public void updatedata(){

        final int[] first = {0};
        //daiy##################################
        DatabaseReference
                tab1dam = fd.getReference("Telepackage/dailyam/Tab1")
                , tab2dam = fd.getReference("Telepackage/dailyam/Tab2")
                , tab3dam = fd.getReference("Telepackage/dailyam/Tab3")
                , tab4dam = fd.getReference("Telepackage/dailyam/Tab4")
                , tab5dam = fd.getReference("Telepackage/dailyam/Tab5")
                , tab6dam = fd.getReference("Telepackage/dailyam/Tab6")
                , tab7dam = fd.getReference("Telepackage/dailyam/Tab7")
                , tab8dam = fd.getReference("Telepackage/dailyam/Tab8")
                , tab9dam = fd.getReference("Telepackage/dailyam/Tab9")
                , tab10dam = fd.getReference("Telepackage/dailyam/Tab10")
                , tab11dam = fd.getReference("Telepackage/dailyam/Tab11")
                , tab12dam = fd.getReference("Telepackage/dailyam/Tab12")

                , tab1d = fd.getReference("Telepackage/daily/Tab1")
                , tab2d = fd.getReference("Telepackage/daily/Tab2")
                , tab3d = fd.getReference("Telepackage/daily/Tab3")
                , tab4d = fd.getReference("Telepackage/daily/Tab4")
                , tab5d = fd.getReference("Telepackage/daily/Tab5")
                , tab6d = fd.getReference("Telepackage/daily/Tab6")
                , tab7d = fd.getReference("Telepackage/daily/Tab7")
                , tab8d = fd.getReference("Telepackage/daily/Tab8")
                , tab9d = fd.getReference("Telepackage/daily/Tab9")
                , tab10d = fd.getReference("Telepackage/daily/Tab10")
                , tab11d = fd.getReference("Telepackage/daily/Tab11")
                , tab12d = fd.getReference("Telepackage/daily/Tab12")

                , tab1damsaf = fd.getReference("Telepackage/dailyamsaf/Tab1")
                , tab2damsaf = fd.getReference("Telepackage/dailyamsaf/Tab2")
                , tab3damsaf = fd.getReference("Telepackage/dailyamsaf/Tab3")
                , tab4damsaf = fd.getReference("Telepackage/dailyamsaf/Tab4")
                , tab5damsaf = fd.getReference("Telepackage/dailyamsaf/Tab5")
                , tab6damsaf = fd.getReference("Telepackage/dailyamsaf/Tab6")
                , tab7damsaf = fd.getReference("Telepackage/dailyamsaf/Tab7")
                , tab8damsaf = fd.getReference("Telepackage/dailyamsaf/Tab8")
                , tab9damsaf = fd.getReference("Telepackage/dailyamsaf/Tab9")
                , tab10damsaf = fd.getReference("Telepackage/dailyamsaf/Tab10")
                , tab11damsaf = fd.getReference("Telepackage/dailyamsaf/Tab11")
                , tab12damsaf = fd.getReference("Telepackage/dailyamsaf/Tab12")

                , tab1dsaf = fd.getReference("Telepackage/dailysaf/Tab1")
                , tab2dsaf = fd.getReference("Telepackage/dailysaf/Tab2")
                , tab3dsaf = fd.getReference("Telepackage/dailysaf/Tab3")
                , tab4dsaf = fd.getReference("Telepackage/dailysaf/Tab4")
                , tab5dsaf = fd.getReference("Telepackage/dailysaf/Tab5")
                , tab6dsaf = fd.getReference("Telepackage/dailysaf/Tab6")
                , tab7dsaf = fd.getReference("Telepackage/dailysaf/Tab7")
                , tab8dsaf = fd.getReference("Telepackage/dailysaf/Tab8")
                , tab9dsaf = fd.getReference("Telepackage/dailysaf/Tab9")
                , tab10dsaf = fd.getReference("Telepackage/dailysaf/Tab10")
                , tab11dsaf = fd.getReference("Telepackage/dailysaf/Tab11")
                , tab12dsaf = fd.getReference("Telepackage/dailysaf/Tab12")

                //weeeky##########################################
                , tab1wam = fd.getReference("Telepackage/weeklyam/Tab1")
                , tab2wam = fd.getReference("Telepackage/weeklyam/Tab2")
                , tab3wam = fd.getReference("Telepackage/weeklyam/Tab3")
                , tab4wam = fd.getReference("Telepackage/weeklyam/Tab4")
                , tab5wam = fd.getReference("Telepackage/weeklyam/Tab5")
                , tab6wam = fd.getReference("Telepackage/weeklyam/Tab6")
                , tab7wam = fd.getReference("Telepackage/weeklyam/Tab7")
                , tab8wam = fd.getReference("Telepackage/weeklyam/Tab8")
                , tab9wam = fd.getReference("Telepackage/weeklyam/Tab9")
                , tab10wam = fd.getReference("Telepackage/weeklyam/Tab10")
                , tab11wam = fd.getReference("Telepackage/weeklyam/Tab11")
                , tab12wam = fd.getReference("Telepackage/weeklyam/Tab12")

                , tab1w = fd.getReference("Telepackage/weekly/Tab1")
                , tab2w = fd.getReference("Telepackage/weekly/Tab2")
                , tab3w = fd.getReference("Telepackage/weekly/Tab3")
                , tab4w = fd.getReference("Telepackage/weekly/Tab4")
                , tab5w = fd.getReference("Telepackage/weekly/Tab5")
                , tab6w = fd.getReference("Telepackage/weekly/Tab6")
                , tab7w = fd.getReference("Telepackage/weekly/Tab7")
                , tab8w = fd.getReference("Telepackage/weekly/Tab8")
                , tab9w = fd.getReference("Telepackage/weekly/Tab9")
                , tab10w = fd.getReference("Telepackage/weekly/Tab10")
                , tab11w = fd.getReference("Telepackage/weekly/Tab11")
                , tab12w = fd.getReference("Telepackage/weekly/Tab12")

                , tab1wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab1")
                , tab2wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab2")
                , tab3wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab3")
                , tab4wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab4")
                , tab5wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab5")
                , tab6wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab6")
                , tab7wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab7")
                , tab8wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab8")
                , tab9wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab9")
                , tab10wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab10")
                , tab11wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab11")
                , tab12wamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab12")

                , tab1wsaf = fd.getReference("Telepackage/weeklysaf/Tab1")
                , tab2wsaf = fd.getReference("Telepackage/weeklysaf/Tab2")
                , tab3wsaf = fd.getReference("Telepackage/weeklysaf/Tab3")
                , tab4wsaf = fd.getReference("Telepackage/weeklysaf/Tab4")
                , tab5wsaf = fd.getReference("Telepackage/weeklysaf/Tab5")
                , tab6wsaf = fd.getReference("Telepackage/weeklysaf/Tab6")
                , tab7wsaf = fd.getReference("Telepackage/weeklysaf/Tab7")
                , tab8wsaf = fd.getReference("Telepackage/weeklysaf/Tab8")
                , tab9wsaf = fd.getReference("Telepackage/weeklysaf/Tab9")
                , tab10wsaf = fd.getReference("Telepackage/weeklysaf/Tab10")
                , tab11wsaf = fd.getReference("Telepackage/weeklysaf/Tab11")
                , tab12wsaf = fd.getReference("Telepackage/weeklysaf/Tab12")
                //monthy###############################
                , tab1mam = fd.getReference("Telepackage/monthlyam/Tab1")
                , tab2mam = fd.getReference("Telepackage/monthlyam/Tab2")
                , tab3mam = fd.getReference("Telepackage/monthlyam/Tab3")
                , tab4mam = fd.getReference("Telepackage/monthlyam/Tab4")
                , tab5mam = fd.getReference("Telepackage/monthlyam/Tab5")
                , tab6mam = fd.getReference("Telepackage/monthlyam/Tab6")
                , tab7mam = fd.getReference("Telepackage/monthlyam/Tab7")
                , tab8mam = fd.getReference("Telepackage/monthlyam/Tab8")
                , tab9mam = fd.getReference("Telepackage/monthlyam/Tab9")
                , tab10mam = fd.getReference("Telepackage/monthlyam/Tab10")
                , tab11mam = fd.getReference("Telepackage/monthlyam/Tab11")
                , tab12mam = fd.getReference("Telepackage/monthlyam/Tab12")

                , tab1m = fd.getReference("Telepackage/monthly/Tab1")
                , tab2m = fd.getReference("Telepackage/monthly/Tab2")
                , tab3m = fd.getReference("Telepackage/monthly/Tab3")
                , tab4m = fd.getReference("Telepackage/monthly/Tab4")
                , tab5m = fd.getReference("Telepackage/monthly/Tab5")
                , tab6m = fd.getReference("Telepackage/monthly/Tab6")
                , tab7m = fd.getReference("Telepackage/monthly/Tab7")
                , tab8m = fd.getReference("Telepackage/monthly/Tab8")
                , tab9m = fd.getReference("Telepackage/monthly/Tab9")
                , tab10m = fd.getReference("Telepackage/monthly/Tab10")
                , tab11m = fd.getReference("Telepackage/monthly/Tab11")
                , tab12m = fd.getReference("Telepackage/monthly/Tab12")

                , tab1mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab1")
                , tab2mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab2")
                , tab3mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab3")
                , tab4mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab4")
                , tab5mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab5")
                , tab6mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab6")
                , tab7mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab7")
                , tab8mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab8")
                , tab9mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab9")
                , tab10mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab10")
                , tab11mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab11")
                , tab12mamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab12")

                , tab1msaf = fd.getReference("Telepackage/monthlysaf/Tab1")
                , tab2msaf = fd.getReference("Telepackage/monthlysaf/Tab2")
                , tab3msaf = fd.getReference("Telepackage/monthlysaf/Tab3")
                , tab4msaf = fd.getReference("Telepackage/monthlysaf/Tab4")
                , tab5msaf = fd.getReference("Telepackage/monthlysaf/Tab5")
                , tab6msaf = fd.getReference("Telepackage/monthlysaf/Tab6")
                , tab7msaf = fd.getReference("Telepackage/monthlysaf/Tab7")
                , tab8msaf = fd.getReference("Telepackage/monthlysaf/Tab8")
                , tab9msaf = fd.getReference("Telepackage/monthlysaf/Tab9")
                , tab10msaf = fd.getReference("Telepackage/monthlysaf/Tab10")
                , tab11msaf = fd.getReference("Telepackage/monthlysaf/Tab11")
                , tab12msaf = fd.getReference("Telepackage/monthlysaf/Tab12")
                //night###################################

                , tab1nam = fd.getReference("Telepackage/nightam/Tab1")
                , tab2nam = fd.getReference("Telepackage/nightam/Tab2")
                , tab3nam = fd.getReference("Telepackage/nightam/Tab3")
                , tab4nam = fd.getReference("Telepackage/nightam/Tab4")
                , tab5nam = fd.getReference("Telepackage/nightam/Tab5")
                , tab6nam = fd.getReference("Telepackage/nightam/Tab6")
                , tab7nam = fd.getReference("Telepackage/nightam/Tab7")
                , tab8nam = fd.getReference("Telepackage/nightam/Tab8")
                , tab9nam = fd.getReference("Telepackage/nightam/Tab9")
                , tab10nam = fd.getReference("Telepackage/nightam/Tab10")
                , tab11nam = fd.getReference("Telepackage/nightam/Tab11")
                , tab12nam = fd.getReference("Telepackage/nightam/Tab12")

                , tab1n = fd.getReference("Telepackage/night/Tab1")
                , tab2n = fd.getReference("Telepackage/night/Tab2")
                , tab3n = fd.getReference("Telepackage/night/Tab3")
                , tab4n = fd.getReference("Telepackage/night/Tab4")
                , tab5n = fd.getReference("Telepackage/night/Tab5")
                , tab6n = fd.getReference("Telepackage/night/Tab6")
                , tab7n = fd.getReference("Telepackage/night/Tab7")
                , tab8n = fd.getReference("Telepackage/night/Tab8")
                , tab9n = fd.getReference("Telepackage/night/Tab9")
                , tab10n = fd.getReference("Telepackage/night/Tab10")
                , tab11n = fd.getReference("Telepackage/night/Tab11")
                , tab12n = fd.getReference("Telepackage/night/Tab12")

                , tab1namsaf = fd.getReference("Telepackage/nightamsaf/Tab1")
                , tab2namsaf = fd.getReference("Telepackage/nightamsaf/Tab2")
                , tab3namsaf = fd.getReference("Telepackage/nightamsaf/Tab3")
                , tab4namsaf = fd.getReference("Telepackage/nightamsaf/Tab4")
                , tab5namsaf = fd.getReference("Telepackage/nightamsaf/Tab5")
                , tab6namsaf = fd.getReference("Telepackage/nightamsaf/Tab6")
                , tab7namsaf = fd.getReference("Telepackage/nightamsaf/Tab7")
                , tab8namsaf = fd.getReference("Telepackage/nightamsaf/Tab8")
                , tab9namsaf = fd.getReference("Telepackage/nightamsaf/Tab9")
                , tab10namsaf = fd.getReference("Telepackage/nightamsaf/Tab10")
                , tab11namsaf = fd.getReference("Telepackage/nightamsaf/Tab11" )
                , tab12namsaf = fd.getReference("Telepackage/nightamsaf/Tab12" )

                , tab1nsaf = fd.getReference("Telepackage/nightsaf/Tab1")
                , tab2nsaf = fd.getReference("Telepackage/nightsaf/Tab2")
                , tab3nsaf = fd.getReference("Telepackage/nightsaf/Tab3")
                , tab4nsaf = fd.getReference("Telepackage/nightsaf/Tab4")
                , tab5nsaf = fd.getReference("Telepackage/nightsaf/Tab5")
                , tab6nsaf = fd.getReference("Telepackage/nightsaf/Tab6")
                , tab7nsaf = fd.getReference("Telepackage/nightsaf/Tab7")
                , tab8nsaf = fd.getReference("Telepackage/nightsaf/Tab8")
                , tab9nsaf = fd.getReference("Telepackage/nightsaf/Tab9")
                , tab10nsaf = fd.getReference("Telepackage/nightsaf/Tab10")
                , tab11nsaf = fd.getReference("Telepackage/nightsaf/Tab11")
                , tab12nsaf = fd.getReference("Telepackage/nightsaf/Tab12")



                , Tab1 = fd.getReference("Telepackage/Tab1")
                , Tab2 = fd.getReference("Telepackage/Tab2")
                , Tab3 = fd.getReference("Telepackage/Tab3")
                , Tab4 = fd.getReference("Telepackage/Tab4")
                , Tab5 = fd.getReference("Telepackage/Tab5")
                , Tab6 = fd.getReference("Telepackage/Tab6")
                , Tab7 = fd.getReference("Telepackage/Tab7")
                , Tab8 = fd.getReference("Telepackage/Tab8")
                , Tab9 = fd.getReference("Telepackage/Tab9")
                , Tab10 = fd.getReference("Telepackage/Tab10")
                , Tab11 = fd.getReference("Telepackage/Tab11")
                , Tab12 = fd.getReference("Telepackage/Tab12")


                , Tab1sub1 = fd.getReference("Telepackage/Tab1sub1")
                , Tab1sub2 = fd.getReference("Telepackage/Tab1sub2")
                , Tab1sub3 = fd.getReference("Telepackage/Tab1sub3")
                , Tab1sub4 = fd.getReference("Telepackage/Tab1sub4")

                , Tab2sub1 = fd.getReference("Telepackage/Tab2sub1")
                , Tab2sub2 = fd.getReference("Telepackage/Tab2sub2")
                , Tab2sub3 = fd.getReference("Telepackage/Tab2sub3")
                , Tab2sub4 = fd.getReference("Telepackage/Tab2sub4")

                , Tab3sub1 = fd.getReference("Telepackage/Tab3sub1")
                , Tab3sub2 = fd.getReference("Telepackage/Tab3sub2")
                , Tab3sub3 = fd.getReference("Telepackage/Tab3sub3")
                , Tab3sub4 = fd.getReference("Telepackage/Tab3sub4")

                , Tab4sub1 = fd.getReference("Telepackage/Tab4sub1")
                , Tab4sub2 = fd.getReference("Telepackage/Tab4sub2")
                , Tab4sub3 = fd.getReference("Telepackage/Tab4sub3")
                , Tab4sub4 = fd.getReference("Telepackage/Tab4sub4")

                , Tab5sub1 = fd.getReference("Telepackage/Tab5sub1")
                , Tab5sub2 = fd.getReference("Telepackage/Tab5sub2")
                , Tab5sub3 = fd.getReference("Telepackage/Tab5sub3")
                , Tab5sub4 = fd.getReference("Telepackage/Tab5sub4")

                , Tab6sub1 = fd.getReference("Telepackage/Tab6sub1")
                , Tab6sub2 = fd.getReference("Telepackage/Tab6sub2")
                , Tab6sub3 = fd.getReference("Telepackage/Tab6sub3")
                , Tab6sub4 = fd.getReference("Telepackage/Tab6sub4")

                , Tab7sub1 = fd.getReference("Telepackage/Tab7sub1")
                , Tab7sub2 = fd.getReference("Telepackage/Tab7sub2")
                , Tab7sub3 = fd.getReference("Telepackage/Tab7sub3")
                , Tab7sub4 = fd.getReference("Telepackage/Tab7sub4")

                , Tab8sub1 = fd.getReference("Telepackage/Tab8sub1")
                , Tab8sub2 = fd.getReference("Telepackage/Tab8sub2")
                , Tab8sub3 = fd.getReference("Telepackage/Tab8sub3")
                , Tab8sub4 = fd.getReference("Telepackage/Tab8sub4")

                , Tab9sub1 = fd.getReference("Telepackage/Tab9sub1")
                , Tab9sub2 = fd.getReference("Telepackage/Tab9sub2")
                , Tab9sub3 = fd.getReference("Telepackage/Tab9sub3")
                , Tab9sub4 = fd.getReference("Telepackage/Tab9sub4")

                , Tab10sub1 = fd.getReference("Telepackage/Tab10sub1")
                , Tab10sub2 = fd.getReference("Telepackage/Tab10sub2")
                , Tab10sub3 = fd.getReference("Telepackage/Tab10sub3")
                , Tab10sub4 = fd.getReference("Telepackage/Tab10sub4")

                , Tab11sub1 = fd.getReference("Telepackage/Tab11sub1")
                , Tab11sub2 = fd.getReference("Telepackage/Tab11sub2")
                , Tab11sub3 = fd.getReference("Telepackage/Tab11sub3")
                , Tab11sub4 = fd.getReference("Telepackage/Tab11sub4")

                , Tab12sub1 = fd.getReference("Telepackage/Tab12sub1")
                , Tab12sub2 = fd.getReference("Telepackage/Tab12sub2")
                , Tab12sub3 = fd.getReference("Telepackage/Tab12sub3")
                , Tab12sub4 = fd.getReference("Telepackage/Tab12sub4")

                , Tabam1 = fd.getReference("Telepackage/Tabam1")
                , Tabam2 = fd.getReference("Telepackage/Tabam2")
                , Tabam3 = fd.getReference("Telepackage/Tabam3")
                , Tabam4 = fd.getReference("Telepackage/Tabam4")
                , Tabam5 = fd.getReference("Telepackage/Tabam5")
                , Tabam6 = fd.getReference("Telepackage/Tabam6")
                , Tabam7 = fd.getReference("Telepackage/Tabam7")
                , Tabam8 = fd.getReference("Telepackage/Tabam8")
                , Tabam9 = fd.getReference("Telepackage/Tabam9")
                , Tabam10 = fd.getReference("Telepackage/Tabam10")
                , Tabam11 = fd.getReference("Telepackage/Tabam11")
                , Tabam12 = fd.getReference("Telepackage/Tabam12")


                , Tabam1sub1 = fd.getReference("Telepackage/Tabam1sub1")
                , Tabam1sub2 = fd.getReference("Telepackage/Tabam1sub2")
                , Tabam1sub3 = fd.getReference("Telepackage/Tabam1sub3")
                , Tabam1sub4 = fd.getReference("Telepackage/Tabam1sub4")

                , Tabam2sub1 = fd.getReference("Telepackage/Tabam2sub1")
                , Tabam2sub2 = fd.getReference("Telepackage/Tabam2sub2")
                , Tabam2sub3 = fd.getReference("Telepackage/Tabam2sub3")
                , Tabam2sub4 = fd.getReference("Telepackage/Tabam2sub4")

                , Tabam3sub1 = fd.getReference("Telepackage/Tabam3sub1")
                , Tabam3sub2 = fd.getReference("Telepackage/Tabam3sub2")
                , Tabam3sub3 = fd.getReference("Telepackage/Tabam3sub3")
                , Tabam3sub4 = fd.getReference("Telepackage/Tabam3sub4")

                , Tabam4sub1 = fd.getReference("Telepackage/Tabam4sub1")
                , Tabam4sub2 = fd.getReference("Telepackage/Tabam4sub2")
                , Tabam4sub3 = fd.getReference("Telepackage/Tabam4sub3")
                , Tabam4sub4 = fd.getReference("Telepackage/Tabam4sub4")

                , Tabam5sub1 = fd.getReference("Telepackage/Tabam5sub1")
                , Tabam5sub2 = fd.getReference("Telepackage/Tabam5sub2")
                , Tabam5sub3 = fd.getReference("Telepackage/Tabam5sub3")
                , Tabam5sub4 = fd.getReference("Telepackage/Tabam5sub4")

                , Tabam6sub1 = fd.getReference("Telepackage/Tabam6sub1")
                , Tabam6sub2 = fd.getReference("Telepackage/Tabam6sub2")
                , Tabam6sub3 = fd.getReference("Telepackage/Tabam6sub3")
                , Tabam6sub4 = fd.getReference("Telepackage/Tabam6sub4")

                , Tabam7sub1 = fd.getReference("Telepackage/Tabam7sub1")
                , Tabam7sub2 = fd.getReference("Telepackage/Tabam7sub2")
                , Tabam7sub3 = fd.getReference("Telepackage/Tabam7sub3")
                , Tabam7sub4 = fd.getReference("Telepackage/Tabam7sub4")

                , Tabam8sub1 = fd.getReference("Telepackage/Tabam8sub1")
                , Tabam8sub2 = fd.getReference("Telepackage/Tabam8sub2")
                , Tabam8sub3 = fd.getReference("Telepackage/Tabam8sub3")
                , Tabam8sub4 = fd.getReference("Telepackage/Tabam8sub4")

                , Tabam9sub1 = fd.getReference("Telepackage/Tabam9sub1")
                , Tabam9sub2 = fd.getReference("Telepackage/Tabam9sub2")
                , Tabam9sub3 = fd.getReference("Telepackage/Tabam9sub3")
                , Tabam9sub4 = fd.getReference("Telepackage/Tabam9sub4")

                , Tabam10sub1 = fd.getReference("Telepackage/Tabam10sub1")
                , Tabam10sub2 = fd.getReference("Telepackage/Tabam10sub2")
                , Tabam10sub3 = fd.getReference("Telepackage/Tabam10sub3")
                , Tabam10sub4 = fd.getReference("Telepackage/Tabam10sub4")

                , Tabam11sub1 = fd.getReference("Telepackage/Tabam11sub1")
                , Tabam11sub2 = fd.getReference("Telepackage/Tabam11sub2")
                , Tabam11sub3 = fd.getReference("Telepackage/Tabam11sub3")
                , Tabam11sub4 = fd.getReference("Telepackage/Tabam11sub4")

                , Tabam12sub1 = fd.getReference("Telepackage/Tabam12sub1")
                , Tabam12sub2 = fd.getReference("Telepackage/Tabam12sub2")
                , Tabam12sub3 = fd.getReference("Telepackage/Tabam12sub3")
                , Tabam12sub4 = fd.getReference("Telepackage/Tabam12sub4") ,

                Tabsaf1 = fd.getReference("Telepackage/Tabsaf1")
                , Tabsaf2 = fd.getReference("Telepackage/Tabsaf2")
                , Tabsaf3 = fd.getReference("Telepackage/Tabsaf3")
                , Tabsaf4 = fd.getReference("Telepackage/Tabsaf4")
                , Tabsaf5 = fd.getReference("Telepackage/Tabsaf5")
                , Tabsaf6 = fd.getReference("Telepackage/Tabsaf6")
                , Tabsaf7 = fd.getReference("Telepackage/Tabsaf7")
                , Tabsaf8 = fd.getReference("Telepackage/Tabsaf8")
                , Tabsaf9 = fd.getReference("Telepackage/Tabsaf9")
                , Tabsaf10 = fd.getReference("Telepackage/Tabsaf10")
                , Tabsaf11 = fd.getReference("Telepackage/Tabsaf11")
                , Tabsaf12 = fd.getReference("Telepackage/Tabsaf12")


                , Tabsaf1sub1 = fd.getReference("Telepackage/Tabsaf1sub1")
                , Tabsaf1sub2 = fd.getReference("Telepackage/Tabsaf1sub2")
                , Tabsaf1sub3 = fd.getReference("Telepackage/Tabsaf1sub3")
                , Tabsaf1sub4 = fd.getReference("Telepackage/Tabsaf1sub4")

                , Tabsaf2sub1 = fd.getReference("Telepackage/Tabsaf2sub1")
                , Tabsaf2sub2 = fd.getReference("Telepackage/Tabsaf2sub2")
                , Tabsaf2sub3 = fd.getReference("Telepackage/Tabsaf2sub3")
                , Tabsaf2sub4 = fd.getReference("Telepackage/Tabsaf2sub4")

                , Tabsaf3sub1 = fd.getReference("Telepackage/Tabsaf3sub1")
                , Tabsaf3sub2 = fd.getReference("Telepackage/Tabsaf3sub2")
                , Tabsaf3sub3 = fd.getReference("Telepackage/Tabsaf3sub3")
                , Tabsaf3sub4 = fd.getReference("Telepackage/Tabsaf3sub4")

                , Tabsaf4sub1 = fd.getReference("Telepackage/Tabsaf4sub1")
                , Tabsaf4sub2 = fd.getReference("Telepackage/Tabsaf4sub2")
                , Tabsaf4sub3 = fd.getReference("Telepackage/Tabsaf4sub3")
                , Tabsaf4sub4 = fd.getReference("Telepackage/Tabsaf4sub4")

                , Tabsaf5sub1 = fd.getReference("Telepackage/Tabsaf5sub1")
                , Tabsaf5sub2 = fd.getReference("Telepackage/Tabsaf5sub2")
                , Tabsaf5sub3 = fd.getReference("Telepackage/Tabsaf5sub3")
                , Tabsaf5sub4 = fd.getReference("Telepackage/Tabsaf5sub4")

                , Tabsaf6sub1 = fd.getReference("Telepackage/Tabsaf6sub1")
                , Tabsaf6sub2 = fd.getReference("Telepackage/Tabsaf6sub2")
                , Tabsaf6sub3 = fd.getReference("Telepackage/Tabsaf6sub3")
                , Tabsaf6sub4 = fd.getReference("Telepackage/Tabsaf6sub4")

                , Tabsaf7sub1 = fd.getReference("Telepackage/Tabsaf7sub1")
                , Tabsaf7sub2 = fd.getReference("Telepackage/Tabsaf7sub2")
                , Tabsaf7sub3 = fd.getReference("Telepackage/Tabsaf7sub3")
                , Tabsaf7sub4 = fd.getReference("Telepackage/Tabsaf7sub4")

                , Tabsaf8sub1 = fd.getReference("Telepackage/Tabsaf8sub1")
                , Tabsaf8sub2 = fd.getReference("Telepackage/Tabsaf8sub2")
                , Tabsaf8sub3 = fd.getReference("Telepackage/Tabsaf8sub3")
                , Tabsaf8sub4 = fd.getReference("Telepackage/Tabsaf8sub4")

                , Tabsaf9sub1 = fd.getReference("Telepackage/Tabsaf9sub1")
                , Tabsaf9sub2 = fd.getReference("Telepackage/Tabsaf9sub2")
                , Tabsaf9sub3 = fd.getReference("Telepackage/Tabsaf9sub3")
                , Tabsaf9sub4 = fd.getReference("Telepackage/Tabsaf9sub4")

                , Tabsaf10sub1 = fd.getReference("Telepackage/Tabsaf10sub1")
                , Tabsaf10sub2 = fd.getReference("Telepackage/Tabsaf10sub2")
                , Tabsaf10sub3 = fd.getReference("Telepackage/Tabsaf10sub3")
                , Tabsaf10sub4 = fd.getReference("Telepackage/Tabsaf10sub4")

                , Tabsaf11sub1 = fd.getReference("Telepackage/Tabsaf11sub1")
                , Tabsaf11sub2 = fd.getReference("Telepackage/Tabsaf11sub2")
                , Tabsaf11sub3 = fd.getReference("Telepackage/Tabsaf11sub3")
                , Tabsaf11sub4 = fd.getReference("Telepackage/Tabsaf11sub4")

                , Tabsaf12sub1 = fd.getReference("Telepackage/Tabsaf12sub1")
                , Tabsaf12sub2 = fd.getReference("Telepackage/Tabsaf12sub2")
                , Tabsaf12sub3 = fd.getReference("Telepackage/Tabsaf12sub3")
                , Tabsaf12sub4 = fd.getReference("Telepackage/Tabsaf12sub4")  ,

                  Tabsafam1 = fd.getReference("Telepackage/Tabamsaf1")
                , Tabsafam2 = fd.getReference("Telepackage/Tabamsaf2")
                , Tabsafam3 = fd.getReference("Telepackage/Tabamsaf3")
                , Tabsafam4 = fd.getReference("Telepackage/Tabamsaf4")
                , Tabsafam5 = fd.getReference("Telepackage/Tabamsaf5")
                , Tabsafam6 = fd.getReference("Telepackage/Tabamsaf6")
                , Tabsafam7 = fd.getReference("Telepackage/Tabamsaf7")
                , Tabsafam8 = fd.getReference("Telepackage/Tabamsaf8")
                , Tabsafam9 = fd.getReference("Telepackage/Tabamsaf9")
                , Tabsafam10 = fd.getReference("Telepackage/Tabamsaf10")
                , Tabsafam11 = fd.getReference("Telepackage/Tabamsaf11")
                , Tabsafam12 = fd.getReference("Telepackage/Tabamsaf12")


                , Tabsafam1sub1  = fd.getReference("Telepackage/Tabamsaf1sub1")
                , Tabsafam1sub2  = fd.getReference("Telepackage/Tabamsaf1sub2")
                , Tabsafam1sub3  = fd.getReference("Telepackage/Tabamsaf1sub3")
                , Tabsafam1sub4  = fd.getReference("Telepackage/Tabamsaf1sub4")

                , Tabsafam2sub1  = fd.getReference("Telepackage/Tabamsaf2sub1")
                , Tabsafam2sub2  = fd.getReference("Telepackage/Tabamsaf2sub2")
                , Tabsafam2sub3  = fd.getReference("Telepackage/Tabamsaf2sub3")
                , Tabsafam2sub4  = fd.getReference("Telepackage/Tabamsaf2sub4")

                , Tabsafam3sub1  = fd.getReference("Telepackage/Tabamsaf3sub1")
                , Tabsafam3sub2  = fd.getReference("Telepackage/Tabamsaf3sub2")
                , Tabsafam3sub3  = fd.getReference("Telepackage/Tabamsaf3sub3")
                , Tabsafam3sub4  = fd.getReference("Telepackage/Tabamsaf3sub4")

                , Tabsafam4sub1  = fd.getReference("Telepackage/Tabamsaf4sub1")
                , Tabsafam4sub2  = fd.getReference("Telepackage/Tabamsaf4sub2")
                , Tabsafam4sub3  = fd.getReference("Telepackage/Tabamsaf4sub3")
                , Tabsafam4sub4  = fd.getReference("Telepackage/Tabamsaf4sub4")

                , Tabsafam5sub1  = fd.getReference("Telepackage/Tabamsaf5sub1")
                , Tabsafam5sub2  = fd.getReference("Telepackage/Tabamsaf5sub2")
                , Tabsafam5sub3  = fd.getReference("Telepackage/Tabamsaf5sub3")
                , Tabsafam5sub4  = fd.getReference("Telepackage/Tabamsaf5sub4")

                , Tabsafam6sub1  = fd.getReference("Telepackage/Tabamsaf6sub1")
                , Tabsafam6sub2  = fd.getReference("Telepackage/Tabamsaf6sub2")
                , Tabsafam6sub3  = fd.getReference("Telepackage/Tabamsaf6sub3")
                , Tabsafam6sub4  = fd.getReference("Telepackage/Tabamsaf6sub4")

                , Tabsafam7sub1  = fd.getReference("Telepackage/Tabamsaf7sub1")
                , Tabsafam7sub2  = fd.getReference("Telepackage/Tabamsaf7sub2")
                , Tabsafam7sub3  = fd.getReference("Telepackage/Tabamsaf7sub3")
                , Tabsafam7sub4  = fd.getReference("Telepackage/Tabamsaf7sub4")

                , Tabsafam8sub1  = fd.getReference("Telepackage/Tabamsaf8sub1")
                , Tabsafam8sub2  = fd.getReference("Telepackage/Tabamsaf8sub2")
                , Tabsafam8sub3  = fd.getReference("Telepackage/Tabamsaf8sub3")
                , Tabsafam8sub4  = fd.getReference("Telepackage/Tabamsaf8sub4")

                , Tabsafam9sub1  = fd.getReference("Telepackage/Tabamsaf9sub1")
                , Tabsafam9sub2  = fd.getReference("Telepackage/Tabamsaf9sub2")
                , Tabsafam9sub3  = fd.getReference("Telepackage/Tabamsaf9sub3")
                , Tabsafam9sub4  = fd.getReference("Telepackage/Tabamsaf9sub4")

                , Tabsafam10sub1  = fd.getReference("Telepackage/Tabamsaf10sub1")
                , Tabsafam10sub2  = fd.getReference("Telepackage/Tabamsaf10sub2")
                , Tabsafam10sub3  = fd.getReference("Telepackage/Tabamsaf10sub3")
                , Tabsafam10sub4  = fd.getReference("Telepackage/Tabamsaf10sub4")

                , Tabsafam11sub1  = fd.getReference("Telepackage/Tabamsaf11sub1")
                , Tabsafam11sub2  = fd.getReference("Telepackage/Tabamsaf11sub2")
                , Tabsafam11sub3  = fd.getReference("Telepackage/Tabamsaf11sub3")
                , Tabsafam11sub4  = fd.getReference("Telepackage/Tabamsaf11sub4")

                , Tabsafam12sub1  = fd.getReference("Telepackage/Tabamsaf12sub1")
                , Tabsafam12sub2  = fd.getReference("Telepackage/Tabamsaf12sub2")
                , Tabsafam12sub3  = fd.getReference("Telepackage/Tabamsaf12sub3")
                , Tabsafam12sub4  = fd.getReference("Telepackage/Tabamsaf12sub4") ;



        Tabam1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }
            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam5.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam5list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam6.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam6list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam7.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam7list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam8.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam8list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam9.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam9list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam10.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam10list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam11.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam11list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam12.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam12list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }
            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam5.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam5list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam6.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam6list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam7.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam7list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam8.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam8list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam9.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam9list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam10.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam10list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam11.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam11list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam12.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam12list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }
            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf5.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf5list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf6.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf6list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf7.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf7list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf8.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf8list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf9.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf9list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf10.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf10list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf11.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf11list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf12.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf12list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        Tab2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }
            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        Tab3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });




        Tab4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });




        Tab5.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab5list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        Tab6.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab6list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        Tab7.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab7list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });




        Tab8.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab8list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        Tab9.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab9list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        Tab10.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab10list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });






        Tab11.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab11list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });






        Tab12.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab12list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        Tabam1sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam1sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam1sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam1sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam1sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam1sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabam1sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam1sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam2sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam2sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }
            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam2sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam2sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam2sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam2sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabam2sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam2sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam3sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam3sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam3sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam3sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam3sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam3sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabam3sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam3sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tabam4sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam4sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam4sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam4sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam4sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam4sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabam4sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam4sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tabam5sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam5sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam5sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam5sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam5sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam5sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabam5sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam5sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam6sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam6sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam6sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam6sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam6sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam6sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabam6sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam6sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam7sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam7sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam7sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam7sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam7sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam7sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabam7sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam7sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tabam8sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam8sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam8sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam8sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam8sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam8sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabam8sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam8sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tabam9sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam9sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam9sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam9sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam9sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam9sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabam9sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam9sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam10sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam10sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam10sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam10sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam10sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam10sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabam10sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam10sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam11sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam11sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam11sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam11sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam11sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam11sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabam11sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam11sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam12sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam12sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam12sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam12sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabam12sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam12sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabam12sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabam12sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam1sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam1sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam1sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam1sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam1sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam1sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam1sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam1sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam2sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam2sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }
            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam2sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam2sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam2sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam2sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam2sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam2sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam3sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam3sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam3sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam3sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam3sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam3sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam3sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam3sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tabsafam4sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam4sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam4sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam4sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam4sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam4sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam4sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam4sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tabsafam5sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam5sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam5sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam5sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam5sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam5sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam5sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam5sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam6sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam6sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();
                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam6sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam6sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam6sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam6sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam6sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam6sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam7sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam7sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam7sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam7sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam7sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam7sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam7sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam7sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tabsafam8sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam8sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam8sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam8sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam8sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam8sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam8sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam8sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tabsafam9sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam9sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam9sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam9sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam9sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam9sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam9sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam9sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam10sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam10sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam10sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam10sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam10sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam10sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam10sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam10sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam11sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam11sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam11sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam11sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam11sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam11sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam11sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam11sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam12sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam12sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam12sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam12sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsafam12sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam12sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsafam12sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsafam12sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf1sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf1sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf1sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf1sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf1sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf1sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsaf1sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf1sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf2sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf2sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }
            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf2sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf2sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf2sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf2sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsaf2sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf2sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf3sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf3sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf3sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf3sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf3sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf3sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsaf3sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf3sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tabsaf4sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf4sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf4sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf4sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf4sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf4sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsaf4sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf4sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tabsaf5sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf5sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf5sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf5sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf5sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf5sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsaf5sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf5sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf6sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf6sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf6sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf6sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf6sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf6sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsaf6sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf6sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf7sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf7sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf7sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf7sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf7sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf7sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsaf7sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf7sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tabsaf8sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf8sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf8sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf8sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf8sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf8sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsaf8sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf8sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tabsaf9sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf9sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf9sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf9sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf9sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf9sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsaf9sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf9sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf10sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf10sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf10sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf10sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf10sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf10sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsaf10sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf10sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf11sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf11sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf11sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf11sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf11sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf11sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsaf11sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf11sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf12sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf12sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf12sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf12sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tabsaf12sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf12sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tabsaf12sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tabsaf12sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab1sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab1sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab1sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab1sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab1sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab1sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tab1sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab1sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab2sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab2sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }
            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab2sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab2sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab2sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab2sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tab2sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab2sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab3sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab3sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab3sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab3sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab3sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab3sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tab3sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab3sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tab4sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab4sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab4sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab4sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab4sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab4sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tab4sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab4sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tab5sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab5sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab5sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab5sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab5sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab5sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tab5sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab5sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab6sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab6sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab6sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab6sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab6sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab6sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tab6sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab6sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab7sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab7sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab7sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab7sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab7sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab7sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tab7sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab7sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tab8sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab8sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab8sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab8sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab8sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab8sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tab8sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab8sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        Tab9sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab9sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab9sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab9sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab9sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab9sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tab9sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab9sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab10sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab10sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab10sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab10sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab10sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab10sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tab10sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab10sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab11sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab11sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab11sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab11sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab11sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab11sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tab11sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab11sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab12sub1.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab12sub1list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab12sub2.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab12sub2list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        Tab12sub3.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab12sub3list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        Tab12sub4.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    Tab12sub4list= dataSnapshot.getValue(String.class);
                    totalsucc();

                }else{
                    //check1();
                    Log.d("dataref", dataSnapshot.getRef().toString());

                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab1dam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailyam/Tab1/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/daily/foryou1/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/daily/gift1/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/daily/Tag1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){

                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1damlist.add(finalI4,myListData);
                                    }

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag1(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    ////Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift1(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou1(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2dam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailyam/Tab2/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/daily/foryou2/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/daily/gift2/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/daily/Tag2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));



                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyam,String.valueOf(finalI3 +1));

                                }*/

                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou2(dataSnapshot.getValue(String.class));


                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //  Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab3dam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailyam/Tab3/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/daily/foryou3/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/daily/gift3/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/daily/Tag3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou3(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4dam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailyam/Tab4/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/daily/foryou4/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/daily/gift4/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/daily/Tag4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag4(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift4(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab5dam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailyam/Tab5/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/daily/foryou5/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/daily/gift5/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/daily/Tag5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag5(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift5(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab6dam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();



                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailyam/Tab6/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/daily/foryou6/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/daily/gift6/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/daily/Tag6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag6(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift6(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab7dam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailyam/Tab7/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/daily/foryou7/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/daily/gift7/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/daily/Tag7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag7(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift7(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou7(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8dam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailyam/Tab8/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/daily/foryou8/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/daily/gift8/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/daily/Tag8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag8(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift8(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou8(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    // Toast.makeText(getApplicationContext(), "no data"+ finalI, Toast.LENGTH_SHORT).show();

                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9dam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailyam/Tab9/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/daily/foryou9/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/daily/gift9/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/daily/Tag9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10dam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailyam/Tab10/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/daily/foryou10/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/daily/gift10/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/daily/Tag10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                             /*   if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou10(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab11dam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailyam/Tab11/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/daily/foryou11/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/daily/gift11/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/daily/Tag11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou11(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12dam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailyam/Tab12/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/daily/foryou12/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/daily/gift12/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/daily/Tag12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag12(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift12(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12damlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        //############################################ weeklyam

        tab1wam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwam = fd.getReference("Telepackage/weeklyam/Tab1/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weekly/foryou1/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weekly/gift1/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weekly/Tag1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){

                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyam);

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1wamlist.add(finalI4,myListData);
                                    }

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag1(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    ////Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift1(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou1(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2wam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwam = fd.getReference("Telepackage/weeklyam/Tab2/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weekly/foryou2/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weekly/gift2/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weekly/Tag2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));



                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyam,String.valueOf(finalI3 +1));

                                }*/

                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou2(dataSnapshot.getValue(String.class));


                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //  Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab3wam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwam = fd.getReference("Telepackage/weeklyam/Tab3/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weekly/foryou3/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weekly/gift3/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weekly/Tag3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou3(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4wam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwam = fd.getReference("Telepackage/weeklyam/Tab4/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weekly/foryou4/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weekly/gift4/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weekly/Tag4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag4(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift4(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab5wam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwam = fd.getReference("Telepackage/weeklyam/Tab5/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weekly/foryou5/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weekly/gift5/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weekly/Tag5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag5(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift5(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab6wam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();



                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwam = fd.getReference("Telepackage/weeklyam/Tab6/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weekly/foryou6/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weekly/gift6/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weekly/Tag6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag6(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift6(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab7wam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwam = fd.getReference("Telepackage/weeklyam/Tab7/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weekly/foryou7/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weekly/gift7/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weekly/Tag7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag7(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift7(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou7(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8wam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwam = fd.getReference("Telepackage/weeklyam/Tab8/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weekly/foryou8/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weekly/gift8/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weekly/Tag8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag8(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift8(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou8(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    // Toast.makeText(getApplicationContext(), "no data"+ finalI, Toast.LENGTH_SHORT).show();

                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9wam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwam = fd.getReference("Telepackage/weeklyam/Tab9/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weekly/foryou9/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weekly/gift9/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weekly/Tag9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10wam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwam = fd.getReference("Telepackage/weeklyam/Tab10/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weekly/foryou10/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weekly/gift10/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weekly/Tag10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                             /*   if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou10(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab11wam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwam = fd.getReference("Telepackage/weeklyam/Tab11/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weekly/foryou11/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weekly/gift11/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weekly/Tag11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou11(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12wam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwam = fd.getReference("Telepackage/weeklyam/Tab12/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weekly/foryou12/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weekly/gift12/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weekly/Tag12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag12(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift12(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12wamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        //#########    ################################ monthlyam

        tab1mam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmam = fd.getReference("Telepackage/monthlyam/Tab1/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthly/foryou1/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthly/gift1/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthly/Tag1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){

                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyam);

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1mamlist.add(finalI4,myListData);
                                    }

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag1(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    ////Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift1(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou1(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2mam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmam = fd.getReference("Telepackage/monthlyam/Tab2/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthly/foryou2/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthly/gift2/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthly/Tag2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));



                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyam,String.valueOf(finalI3 +1));

                                }*/

                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou2(dataSnapshot.getValue(String.class));


                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //  Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab3mam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmam = fd.getReference("Telepackage/monthlyam/Tab3/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthly/foryou3/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthly/gift3/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthly/Tag3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou3(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4mam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmam = fd.getReference("Telepackage/monthlyam/Tab4/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthly/foryou4/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthly/gift4/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthly/Tag4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag4(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift4(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab5mam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmam = fd.getReference("Telepackage/monthlyam/Tab5/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthly/foryou5/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthly/gift5/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthly/Tag5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag5(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift5(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab6mam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();



                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmam = fd.getReference("Telepackage/monthlyam/Tab6/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthly/foryou6/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthly/gift6/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthly/Tag6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag6(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift6(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab7mam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmam = fd.getReference("Telepackage/monthlyam/Tab7/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthly/foryou7/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthly/gift7/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthly/Tag7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag7(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift7(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou7(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8mam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmam = fd.getReference("Telepackage/monthlyam/Tab8/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthly/foryou8/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthly/gift8/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthly/Tag8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag8(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift8(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou8(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    // Toast.makeText(getApplicationContext(), "no data"+ finalI, Toast.LENGTH_SHORT).show();

                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9mam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmam = fd.getReference("Telepackage/monthlyam/Tab9/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthly/foryou9/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthly/gift9/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthly/Tag9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10mam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmam = fd.getReference("Telepackage/monthlyam/Tab10/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthly/foryou10/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthly/gift10/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthly/Tag10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                             /*   if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou10(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab11mam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmam = fd.getReference("Telepackage/monthlyam/Tab11/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthly/foryou11/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthly/gift11/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthly/Tag11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou11(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12mam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmam = fd.getReference("Telepackage/monthlyam/Tab12/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthly/foryou12/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthly/gift12/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthly/Tag12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag12(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift12(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12mamlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        //################################################### nightam


        tab1nam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnam = fd.getReference("Telepackage/nightam/Tab1/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/night/foryou1/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/night/gift1/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/night/Tag1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){

                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightam);

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1namlist.add(finalI4,myListData);
                                    }

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag1(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    ////Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift1(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou1(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2nam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnam = fd.getReference("Telepackage/nightam/Tab2/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/night/foryou2/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/night/gift2/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/night/Tag2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));



                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightam,String.valueOf(finalI3 +1));

                                }*/

                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou2(dataSnapshot.getValue(String.class));


                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //  Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab3nam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnam = fd.getReference("Telepackage/nightam/Tab3/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/night/foryou3/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/night/gift3/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/night/Tag3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou3(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4nam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnam = fd.getReference("Telepackage/nightam/Tab4/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/night/foryou4/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/night/gift4/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/night/Tag4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag4(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift4(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab5nam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnam = fd.getReference("Telepackage/nightam/Tab5/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/night/foryou5/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/night/gift5/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/night/Tag5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag5(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift5(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab6nam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();



                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnam = fd.getReference("Telepackage/nightam/Tab6/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/night/foryou6/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/night/gift6/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/night/Tag6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag6(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift6(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab7nam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnam = fd.getReference("Telepackage/nightam/Tab7/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/night/foryou7/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/night/gift7/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/night/Tag7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag7(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift7(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou7(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8nam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnam = fd.getReference("Telepackage/nightam/Tab8/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/night/foryou8/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/night/gift8/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/night/Tag8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag8(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift8(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou8(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    // Toast.makeText(getApplicationContext(), "no data"+ finalI, Toast.LENGTH_SHORT).show();

                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9nam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnam = fd.getReference("Telepackage/nightam/Tab9/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/night/foryou9/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/night/gift9/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/night/Tag9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10nam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnam = fd.getReference("Telepackage/nightam/Tab10/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/night/foryou10/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/night/gift10/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/night/Tag10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                             /*   if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou10(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab11nam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnam = fd.getReference("Telepackage/nightam/Tab11/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/night/foryou11/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/night/gift11/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/night/Tag11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou11(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12nam.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnam = fd.getReference("Telepackage/nightam/Tab12/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/night/foryou12/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/night/gift12/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/night/Tag12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightam);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightam,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag12(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift12(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12namlist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });




//##############################safaricom###################################################



        tab1damsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdamsaf = fd.getReference("Telepackage/dailyamsaf/Tab1/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/dailysaf/foryou1/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/dailysaf/gift1/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/dailysaf/Tag1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){

                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1damsaflist.add(finalI4,myListData);
                                    }

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag1(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    ////Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift1(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou1(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2damsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdamsaf = fd.getReference("Telepackage/dailyamsaf/Tab2/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/dailysaf/foryou2/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/dailysaf/gift2/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/dailysaf/Tag2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));



                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(finalI3 +1));

                                }*/

                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou2(dataSnapshot.getValue(String.class));


                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //  Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab3damsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdamsaf = fd.getReference("Telepackage/dailyamsaf/Tab3/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/dailysaf/foryou3/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/dailysaf/gift3/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/dailysaf/Tag3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou3(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4damsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdamsaf = fd.getReference("Telepackage/dailyamsaf/Tab4/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/dailysaf/foryou4/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/dailysaf/gift4/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/dailysaf/Tag4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag4(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift4(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab5damsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdamsaf = fd.getReference("Telepackage/dailyamsaf/Tab5/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/dailysaf/foryou5/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/dailysaf/gift5/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/dailysaf/Tag5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag5(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift5(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab6damsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();



                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdamsaf = fd.getReference("Telepackage/dailyamsaf/Tab6/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/dailysaf/foryou6/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/dailysaf/gift6/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/dailysaf/Tag6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag6(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift6(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab7damsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdamsaf = fd.getReference("Telepackage/dailyamsaf/Tab7/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/dailysaf/foryou7/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/dailysaf/gift7/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/dailysaf/Tag7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag7(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift7(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou7(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8damsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdamsaf = fd.getReference("Telepackage/dailyamsaf/Tab8/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/dailysaf/foryou8/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/dailysaf/gift8/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/dailysaf/Tag8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag8(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift8(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou8(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    // Toast.makeText(getApplicationContext(), "no data"+ finalI, Toast.LENGTH_SHORT).show();

                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9damsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdamsaf = fd.getReference("Telepackage/dailyamsaf/Tab9/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/dailysaf/foryou9/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/dailysaf/gift9/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/dailysaf/Tag9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10damsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdamsaf = fd.getReference("Telepackage/dailyamsaf/Tab10/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/dailysaf/foryou10/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/dailysaf/gift10/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/dailysaf/Tag10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                             /*   if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou10(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab11damsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdamsaf = fd.getReference("Telepackage/dailyamsaf/Tab11/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/dailysaf/foryou11/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/dailysaf/gift11/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/dailysaf/Tag11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou11(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12damsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdamsaf = fd.getReference("Telepackage/dailyamsaf/Tab12/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/dailysaf/foryou12/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/dailysaf/gift12/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/dailysaf/Tag12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabdamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag12(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift12(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12damsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        //############################################ weeklyam
        tab1wamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab1/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weeklysaf/foryou1/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weeklysaf/gift1/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weeklysaf/Tag1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){

                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyamsaf);

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1wamsaflist.add(finalI4,myListData);
                                    }

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag1(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    ////Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift1(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou1(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2wamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab2/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weeklysaf/foryou2/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weeklysaf/gift2/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weeklysaf/Tag2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));



                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(finalI3 +1));

                                }*/

                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou2(dataSnapshot.getValue(String.class));


                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //  Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab3wamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab3/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weeklysaf/foryou3/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weeklysaf/gift3/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weeklysaf/Tag3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou3(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4wamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab4/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weeklysaf/foryou4/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weeklysaf/gift4/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weeklysaf/Tag4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag4(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift4(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab5wamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab5/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weeklysaf/foryou5/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weeklysaf/gift5/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weeklysaf/Tag5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag5(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift5(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab6wamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();



                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab6/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weeklysaf/foryou6/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weeklysaf/gift6/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weeklysaf/Tag6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag6(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift6(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab7wamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab7/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weeklysaf/foryou7/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weeklysaf/gift7/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weeklysaf/Tag7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag7(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift7(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou7(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8wamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab8/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weeklysaf/foryou8/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weeklysaf/gift8/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weeklysaf/Tag8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag8(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift8(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou8(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    // Toast.makeText(getApplicationContext(), "no data"+ finalI, Toast.LENGTH_SHORT).show();

                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9wamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab9/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weeklysaf/foryou9/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weeklysaf/gift9/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weeklysaf/Tag9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10wamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab10/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weeklysaf/foryou10/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weeklysaf/gift10/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weeklysaf/Tag10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                             /*   if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou10(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab11wamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab11/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weeklysaf/foryou11/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weeklysaf/gift11/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weeklysaf/Tag11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou11(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12wamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabwamsaf = fd.getReference("Telepackage/weeklyamsaf/Tab12/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/weeklysaf/foryou12/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/weeklysaf/gift12/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/weeklysaf/Tag12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabwamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag12(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift12(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12wamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        //############################################ monthlyam

        tab1mamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab1/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthlysaf/foryou1/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthlysaf/gift1/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthlysaf/Tag1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){

                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf);

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1mamsaflist.add(finalI4,myListData);
                                    }

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag1(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    ////Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift1(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou1(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2mamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab2/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthlysaf/foryou2/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthlysaf/gift2/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthlysaf/Tag2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));



                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(finalI3 +1));

                                }*/

                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou2(dataSnapshot.getValue(String.class));


                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //  Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab3mamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab3/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthlysaf/foryou3/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthlysaf/gift3/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthlysaf/Tag3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou3(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4mamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab4/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthlysaf/foryou4/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthlysaf/gift4/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthlysaf/Tag4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag4(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift4(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab5mamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab5/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthlysaf/foryou5/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthlysaf/gift5/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthlysaf/Tag5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag5(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift5(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab6mamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();



                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab6/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthlysaf/foryou6/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthlysaf/gift6/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthlysaf/Tag6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag6(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift6(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab7mamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab7/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthlysaf/foryou7/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthlysaf/gift7/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthlysaf/Tag7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag7(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift7(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou7(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8mamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab8/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthlysaf/foryou8/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthlysaf/gift8/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthlysaf/Tag8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag8(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift8(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou8(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    // Toast.makeText(getApplicationContext(), "no data"+ finalI, Toast.LENGTH_SHORT).show();

                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9mamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab9/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthlysaf/foryou9/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthlysaf/gift9/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthlysaf/Tag9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10mamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab10/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthlysaf/foryou10/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthlysaf/gift10/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthlysaf/Tag10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                             /*   if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou10(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab11mamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab11/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthlysaf/foryou11/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthlysaf/gift11/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthlysaf/Tag11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou11(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12mamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabmamsaf = fd.getReference("Telepackage/monthlyamsaf/Tab12/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/monthlysaf/foryou12/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/monthlysaf/gift12/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/monthlysaf/Tag12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabmamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag12(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift12(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12mamsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        //################################################### nightam


        tab1namsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnamsaf = fd.getReference("Telepackage/nightamsaf/Tab1/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/nightsaf/foryou1/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/nightsaf/gift1/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/nightsaf/Tag1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){

                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightamsaf);

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1namsaflist.add(finalI4,myListData);
                                    }

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag1(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    ////Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift1(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou1(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab1namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2namsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnamsaf = fd.getReference("Telepackage/nightamsaf/Tab2/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/nightsaf/foryou2/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/nightsaf/gift2/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/nightsaf/Tag2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));



                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightamsaf,String.valueOf(finalI3 +1));

                                }*/

                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift2(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou2(dataSnapshot.getValue(String.class));


                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //  Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab2namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab3namsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnamsaf = fd.getReference("Telepackage/nightamsaf/Tab3/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/nightsaf/foryou3/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/nightsaf/gift3/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/nightsaf/Tag3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift3(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou3(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab3namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4namsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnamsaf = fd.getReference("Telepackage/nightamsaf/Tab4/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/nightsaf/foryou4/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/nightsaf/gift4/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/nightsaf/Tag4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag4(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift4(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab4namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab5namsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnamsaf = fd.getReference("Telepackage/nightamsaf/Tab5/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/nightsaf/foryou5/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/nightsaf/gift5/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/nightsaf/Tag5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag5(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift5(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou5(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab5namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab6namsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();



                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnamsaf = fd.getReference("Telepackage/nightamsaf/Tab6/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/nightsaf/foryou6/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/nightsaf/gift6/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/nightsaf/Tag6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag6(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift6(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab6namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab7namsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnamsaf = fd.getReference("Telepackage/nightamsaf/Tab7/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/nightsaf/foryou7/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/nightsaf/gift7/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/nightsaf/Tag7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag7(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift7(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou7(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab7namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8namsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnamsaf = fd.getReference("Telepackage/nightamsaf/Tab8/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/nightsaf/foryou8/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/nightsaf/gift8/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/nightsaf/Tag8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag8(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift8(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou8(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab8namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    // Toast.makeText(getApplicationContext(), "no data"+ finalI, Toast.LENGTH_SHORT).show();

                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9namsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnamsaf = fd.getReference("Telepackage/nightamsaf/Tab9/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/nightsaf/foryou9/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/nightsaf/gift9/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/nightsaf/Tag9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift9(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab9namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10namsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnamsaf = fd.getReference("Telepackage/nightamsaf/Tab10/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/nightsaf/foryou10/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/nightsaf/gift10/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/nightsaf/Tag10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                             /*   if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift10(dataSnapshot.getValue(String.class));
                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou10(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab10namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab11namsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnamsaf = fd.getReference("Telepackage/nightamsaf/Tab11/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/nightsaf/foryou11/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/nightsaf/gift11/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/nightsaf/Tag11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift11(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou11(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab11namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12namsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabnamsaf = fd.getReference("Telepackage/nightamsaf/Tab12/"+""+i);
                        DatabaseReference foryoud = fd.getReference("Telepackage/nightsaf/foryou12/"+""+i);
                        DatabaseReference giftd = fd.getReference("Telepackage/nightsaf/gift12/"+""+i);
                        DatabaseReference tagd = fd.getReference("Telepackage/nightsaf/Tag12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        MyListData myListData=new MyListData();
                        final int[] count = {0};
                        int finalI4 = i;
                        tabnamsaf.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightamsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightamsaf,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        totalsucc();
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        tagd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTag12(dataSnapshot.getValue(String.class));
                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    //Toast.makeText(getApplicationContext(), "inserted "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    // Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+dataSnapshot.getValue(String.class), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        // Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                        giftd.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    // Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setGift12(dataSnapshot.getValue(String.class));
                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]==finalChildsize *4){
                                        //  Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }
                                }else{
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                        foryoud.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setForyou12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                    // Toast.makeText(getApplicationContext(), "inserted"+ finalI3, Toast.LENGTH_SHORT).show();

                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));
                                    //// Toast.makeText(getApplicationContext(), "updated "+ finalI3+" "+loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight), Toast.LENGTH_SHORT).show();

                                }*/
                                    count[0] = count[0] +1;
                                    if(count[0] ==4){
                                        tab12namsaflist.add(finalI4,myListData);
                                    }
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize *4){
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                        totalsucc();

                                    }                                                    }else{
                                    //check1();
                                }

                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


//################################## ethio and safari english version############################################
        tab1d.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/daily/Tab1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalI4 = i;

                        MyListData myListData=new MyListData();

                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/

                                    tab1dlist.add(finalI4,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2d.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/daily/Tab2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    tab2dlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        tab3d.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/daily/Tab3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    tab3dlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4d.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/daily/Tab4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/

                                    tab4dlist.add(finalI3,myListData);
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab5d.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/daily/Tab5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    tab5dlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab6d.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/daily/Tab6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    tab6dlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab7d.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/daily/Tab7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                              /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    tab7dlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8d.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/daily/Tab8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    tab8dlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9d.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/daily/Tab9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    tab9dlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10d.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/daily/Tab10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    tab10dlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab11d.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/daily/Tab11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    tab11dlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12d.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/daily/Tab12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledaily);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledaily,String.valueOf(finalI3 +1));

                                }*/
                                    tab12dlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        tab1w.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weekly/Tab1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalI4 = i;

                        MyListData myListData=new MyListData();

                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/

                                    tab1wlist.add(finalI4,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2w.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weekly/Tab2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    tab2wlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        tab3w.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weekly/Tab3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    tab3wlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4w.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weekly/Tab4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/

                                    tab4wlist.add(finalI3,myListData);
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab5w.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weekly/Tab5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    tab5wlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab6w.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weekly/Tab6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    tab6wlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab7w.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weekly/Tab7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                              /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    tab7wlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8w.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weekly/Tab8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    tab8wlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9w.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weekly/Tab9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    tab9wlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10w.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weekly/Tab10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    tab10wlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab11w.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weekly/Tab11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    tab11wlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12w.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weekly/Tab12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweekly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweekly,String.valueOf(finalI3 +1));

                                }*/
                                    tab12wlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab1m.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthly/Tab1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalI4 = i;

                        MyListData myListData=new MyListData();

                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/

                                    tab1mlist.add(finalI4,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2m.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthly/Tab2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    tab2mlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        tab3m.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthly/Tab3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    tab3mlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4m.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthly/Tab4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/

                                    tab4mlist.add(finalI3,myListData);
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab5m.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthly/Tab5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    tab5mlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab6m.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthly/Tab6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    tab6mlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab7m.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthly/Tab7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                              /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    tab7mlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8m.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthly/Tab8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    tab8mlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9m.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthly/Tab9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    tab9mlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10m.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthly/Tab10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    tab10mlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab11m.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthly/Tab11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    tab11mlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12m.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthly/Tab12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthly);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthly,String.valueOf(finalI3 +1));

                                }*/
                                    tab12mlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        tab1n.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/night/Tab1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalI4 = i;

                        MyListData myListData=new MyListData();

                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/

                                    tab1nlist.add(finalI4,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2n.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/night/Tab2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    tab2nlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        tab3n.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/night/Tab3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    tab3nlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4n.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/night/Tab4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/

                                    tab4nlist.add(finalI3,myListData);
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab5n.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/night/Tab5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    tab5nlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab6n.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/night/Tab6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    tab6nlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab7n.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/night/Tab7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                              /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    tab7nlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8n.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/night/Tab8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    tab8nlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9n.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/night/Tab9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    tab9nlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10n.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/night/Tab10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    tab10nlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab11n.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/night/Tab11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    tab11nlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12n.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/night/Tab12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenight);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenight,String.valueOf(finalI3 +1));

                                }*/
                                    tab12nlist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        //########################################################safaricom eng version#######################


        tab1dsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailysaf/Tab1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalI4 = i;

                        MyListData myListData=new MyListData();

                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,String.valueOf(finalI3 +1));

                                }*/

                                    tab1dsaflist.add(finalI4,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2dsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailysaf/Tab2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab2dsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        tab3dsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailysaf/Tab3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab3dsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4dsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailysaf/Tab4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,String.valueOf(finalI3 +1));

                                }*/

                                    tab4dsaflist.add(finalI3,myListData);
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab5dsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailysaf/Tab5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab5dsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab6dsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailysaf/Tab6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab6dsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab7dsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailysaf/Tab7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                              /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab7dsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8dsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailysaf/Tab8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab8dsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9dsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailysaf/Tab9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab9dsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10dsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailysaf/Tab10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab10dsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab11dsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailysaf/Tab11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab11dsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12dsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/dailysaf/Tab12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tabledailysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tabledailysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab12dsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        tab1wsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weeklysaf/Tab1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalI4 = i;

                        MyListData myListData=new MyListData();

                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklysaf,String.valueOf(finalI3 +1));

                                }*/

                                    tab1wsaflist.add(finalI4,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2wsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weeklysaf/Tab2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab2wsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        tab3wsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weeklysaf/Tab3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab3wsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4wsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weeklysaf/Tab4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklysaf,String.valueOf(finalI3 +1));

                                }*/

                                    tab4wsaflist.add(finalI3,myListData);
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab5wsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weeklysaf/Tab5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab5wsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab6wsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weeklysaf/Tab6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab6wsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab7wsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weeklysaf/Tab7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                              /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab7wsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8wsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weeklysaf/Tab8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab8wsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9wsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weeklysaf/Tab9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab9wsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10wsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weeklysaf/Tab10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab10wsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab11wsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weeklysaf/Tab11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab11wsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12wsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/weeklysaf/Tab12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tableweeklysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tableweeklysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab12wsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab1msaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthlysaf/Tab1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalI4 = i;

                        MyListData myListData=new MyListData();

                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(finalI3 +1));

                                }*/

                                    tab1msaflist.add(finalI4,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2msaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthlysaf/Tab2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab2msaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        tab3msaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthlysaf/Tab3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab3msaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4msaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthlysaf/Tab4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(finalI3 +1));

                                }*/

                                    tab4msaflist.add(finalI3,myListData);
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab5msaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthlysaf/Tab5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab5msaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab6msaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthlysaf/Tab6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab6msaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab7msaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthlysaf/Tab7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                              /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab7msaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8msaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthlysaf/Tab8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab8msaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9msaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthlysaf/Tab9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab9msaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10msaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthlysaf/Tab10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab10msaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab11msaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthlysaf/Tab11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab11msaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12msaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/monthlysaf/Tab12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablemonthlysaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab12msaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab1nsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/nightsaf/Tab1/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalI4 = i;

                        MyListData myListData=new MyListData();

                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    myListData.setTab1(dataSnapshot.getValue(String.class));

                              /*  if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightsaf,String.valueOf(finalI3 +1));

                                }*/

                                    tab1nsaflist.add(finalI4,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });


        tab2nsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/nightsaf/Tab2/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab2(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightsaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab2nsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



        tab3nsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/nightsaf/Tab3/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab3(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightsaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab3nsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab4nsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/nightsaf/Tab4/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab4(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightsaf,String.valueOf(finalI3 +1));

                                }*/

                                    tab4nsaflist.add(finalI3,myListData);
                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab5nsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/nightsaf/Tab5/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab5(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightsaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab5nsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab6nsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/nightsaf/Tab6/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab6(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightsaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab6nsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
        tab7nsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/nightsaf/Tab7/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab7(dataSnapshot.getValue(String.class));

                              /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightsaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab7nsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab8nsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/nightsaf/Tab8/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab8(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightsaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab8nsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab9nsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/nightsaf/Tab9/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab9(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightsaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab9nsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab10nsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/nightsaf/Tab10/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab10(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightsaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab10nsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab11nsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/nightsaf/Tab11/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab11(dataSnapshot.getValue(String.class));

                               /* if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightsaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab11nsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        tab12nsaf.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.exists()){
                    final int[] suc = {0};
                    int childsize=0;
                    childsize=(int)dataSnapshot.getChildrenCount();
                    //  Toast.makeText(getApplicationContext(), "size is "+String.valueOf(childsize), Toast.LENGTH_SHORT).show();




                    for(int i=0;i<=childsize;i++){
                        DatabaseReference tabdam = fd.getReference("Telepackage/nightsaf/Tab12/"+""+i);

                        int finalI = i;
                        int finalI1 = i;
                        int finalI2 = i;
                        int finalI3 = i;
                        int finalChildsize = childsize;
                        tabdam.addListenerForSingleValueEvent(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                if(dataSnapshot.exists()){
                                    //  Toast.makeText(getApplicationContext(), "pdate is "+ finalI, Toast.LENGTH_SHORT).show();
                                    MyListData myListData=new MyListData();
                                    myListData.setTab12(dataSnapshot.getValue(String.class));

                                /*if(finalI2>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {
                                    loginDataBaseAdapter.inserttotable(myListData, loginDataBaseAdapter.tablenightsaf);
                                }else{
                                    loginDataBaseAdapter.updatetotable(myListData, loginDataBaseAdapter.tablenightsaf,String.valueOf(finalI3 +1));

                                }*/
                                    tab12nsaflist.add(finalI3,myListData);

                                    suc[0] = suc[0] +1;
                                    if(suc[0]== finalChildsize ){
                                        totalsucc();
                                        //Toast.makeText(getApplicationContext(), "succsess"+ finalI, Toast.LENGTH_SHORT).show();
                                    }
                                }else{
                                    //check1();
                                }
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });

                    }



                    // total=total+1;check();
                }else{
                    Toast.makeText(getApplicationContext(), "no data", Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });



    }
    @SuppressLint("RestrictedApi")
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);

        if(menu instanceof MenuBuilder){
            MenuBuilder m=(MenuBuilder) menu;
            m.setOptionalIconsVisible(true);
        }
        if(Objects.equals(sharedPreferences.getString("sim","sim1"),"sim1")){
            menu.getItem(1).setTitle("sim1");

        }else if(Objects.equals(sharedPreferences.getString("sim","sim1"),"sim2")){
            menu.getItem(1).setTitle("sim2");
        }
        if(!isdualsim){
            menu.getItem(1).setVisible(false);
        }else{
            menu.getItem(1).setVisible(true);
        }
       /* if(sharedPreferences.getBoolean("issafaricom",false)){
            menu.getItem(4).setIcon(R.drawable.ethio_telecom);
        }else {
            menu.getItem(4).setIcon(R.drawable.safari);

        }*/
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        /*if (id == R.id.ethsaf) {
            if(sharedPreferences.getBoolean("issafaricom",false)){
                SharedPreferences.Editor editor=sharedPreferences.edit();
                editor.putBoolean("issafaricom",false);
                editor.commit();
                //item.setIcon(R.drawable.ethio_telecom);
            }else {
                SharedPreferences.Editor editor=sharedPreferences.edit();
                editor.putBoolean("issafaricom",true);
                editor.commit();
                //item.setIcon(R.drawable.safari);

            }
            Intent intent=new Intent(getApplicationContext(),MainActivity.class);
            finish();
            overridePendingTransition(0,0);
            startActivity(intent);
            overridePendingTransition(0,0);
            return true;

        }*/
        if (id == R.id.action_settings) {

           /* Intent myIntent = new Intent(this, about.class);
            startActivity(myIntent);*/


            return true;

        }/*else  if (id == R.id.update) {
            //   item.getActionView().startAnimation(rotateAnimation);
            if (connection()) {
                //   getfire();
                LayoutInflater inflater = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                iv = (ImageView)inflater.inflate(R.layout.refresh, null);
                Animation rotation = AnimationUtils.loadAnimation(this, R.anim.rotate_refresh);
                rotation.setRepeatCount(Animation.INFINITE);
                iv.startAnimation(rotation);
                //menu.findItem(R.id.my_menu_item_id).setActionView(iv);
                item.setActionView(iv);
                isupdate=true;
            }else{
                Toast.makeText(getApplicationContext(),"no connection", Toast.LENGTH_SHORT).show();
                // iv.clearAnimation();
            }

        }*/else if(id==R.id.simcard){

            if(Objects.equals(sharedPreferences.getString("sim","sim1"),"sim1")){
                SharedPreferences.Editor editor=sharedPreferences.edit();
                editor.putString("sim","sim2");
                editor.commit();
                item.setTitle("sim2");
                Toast.makeText(getApplicationContext(),"changed to sim2", Toast.LENGTH_SHORT).show();

            }else if(Objects.equals(sharedPreferences.getString("sim","sim1"),"sim2")){
                SharedPreferences.Editor editor=sharedPreferences.edit();
                editor.putString("sim","sim1");
                editor.commit();
                item.setTitle("sim1");
                Toast.makeText(getApplicationContext(),"changed to sim1", Toast.LENGTH_SHORT).show();
            }
            Intent intent=new Intent(getApplicationContext(),MainActivity.class);
            finish();
            overridePendingTransition(0,0);
            startActivity(intent);
            overridePendingTransition(0,0);

        }else if(id==R.id.share){

            Toast.makeText(getApplicationContext(),""+tab1dlist.get(3).getTab1(), Toast.LENGTH_SHORT).show();

            /*Intent share = new Intent(android.content.Intent.ACTION_SEND,Uri.parse("https://bit.ly/3Oy5yOo"));
            share.setType("text/plain");
            share.putExtra(Intent.EXTRA_SUBJECT, "dawnload Telepackage from the below link");
            share.putExtra(Intent.EXTRA_TEXT, "https://bit.ly/3Oy5yOo");
            startActivity(Intent.createChooser(share, "Share via"));*/
        }

        return super.onOptionsItemSelected(item);
    }
    public boolean checkAccessibilityPermission () {
        int accessEnabled = 0;
        try {
            accessEnabled = Settings.Secure.getInt(this.getContentResolver(), Settings.Secure.ACCESSIBILITY_ENABLED);
        } catch (Settings.SettingNotFoundException e) {
            e.printStackTrace();
        }
        if (accessEnabled == 0) {
            // if not construct intent to request permission
            Intent intent = new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS);
            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            startActivity(intent);
            return false;
        } else {
            return true;
        }
    }
    public void ussd() {

        int permissionCheck = ContextCompat.checkSelfPermission(this, Manifest.permission.CALL_PHONE);

        if (permissionCheck != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(this,new String[]{Manifest.permission.CALL_PHONE},1);
        }else{
            String countriesString = TextUtils.join(";", Collections.singleton(data));
            SharedPreferences sharedPreferences = getSharedPreferences("but", Context.MODE_PRIVATE);
            SharedPreferences.Editor editor = sharedPreferences.edit();
            editor.putInt("step", 0);
            // editor.putStringSet("set",set);
            editor.putString("data", countriesString);
            editor.putString("check", check);
            editor.commit();

            if (Build.VERSION.SDK_INT>=Build.VERSION_CODES.M&&!Settings.canDrawOverlays(getApplicationContext())) {
                Intent intent = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse("package:" + getPackageName()));
                Toast.makeText(getApplicationContext(), "Permit drawing over other apps የሚለውን ቁልፍ ያብሩት\n" +
                        "\nturn on Permit drawing over other apps option", Toast.LENGTH_LONG).show(); startActivityForResult(intent, 2);
            }else{
                if(checkAccessibilityPermission()){

                    if(!recharge&&!balance){
                        editor.putBoolean("isapp", true);
                        editor.commit();
                        registerReceiver(broadcastReceiver,new IntentFilter("kaleb"));
                        wm.addView(view1,params);
                        String ussd = "*" + "999" + Uri.encode("#");
                        Intent i=new Intent(Intent.ACTION_CALL,Uri.parse("tel:"+ussd));
                        i.putExtra("com.android.phone.extra.slot",slot);
                        startActivity(i);
                        handler = new Handler();
                        myRunnable = new Runnable() {
                            public void run() {
                                try{
                                    wm.removeView(view1);
                                }catch(IllegalArgumentException e){
                                    //Toast.makeText(getApplicationContext(),"view not found", Toast.LENGTH_SHORT).show();
                                }
                            }
                        };

                        handler.postDelayed(myRunnable,30000);
                    }else if(balance){
                        balance=false;
                        String ussd = data;
                        Intent i=new Intent(Intent.ACTION_CALL,Uri.parse("tel:"+ussd));
                        i.putExtra("com.android.phone.extra.slot",slot);
                        startActivity(i);

                    }else{
                        recharge=false;
                        String ussd = "*805*"+data+Uri.encode("#");
                        Intent i=new Intent(Intent.ACTION_CALL,Uri.parse("tel:"+ussd));
                        i.putExtra("com.android.phone.extra.slot",slot);
                        startActivity(i);
                    }
                }else{
                    editor.putBoolean("isservice",true);
                    editor.commit();
                    Toast.makeText(getApplicationContext(), "Telepackage የሚለውን ቁልፍ ያብሩት\n" +
                            "\nturn on accessibility setting", Toast.LENGTH_LONG).show();

                }
            }


        }


    }
    public void remove(View view1){
        wm.removeView(view1);
    }
    @RequiresApi(api = Build.VERSION_CODES.M)
    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if(requestCode==1){
            if(grantResults.length>0&&grantResults[0]==PackageManager.PERMISSION_GRANTED){
                String countriesString = TextUtils.join(";", Collections.singleton(data));
                SharedPreferences sharedPreferences = getSharedPreferences("but", Context.MODE_PRIVATE);
                SharedPreferences.Editor editor = sharedPreferences.edit();
                editor.putInt("step", 0);
                // editor.putStringSet("set",set);
                editor.putString("data", countriesString);
                editor.putString("check", check);
                editor.commit();

                if (Build.VERSION.SDK_INT>=Build.VERSION_CODES.M&&!Settings.canDrawOverlays(getApplicationContext())) {
                    Intent intent = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse("package:" + getPackageName()));
                    Toast.makeText(getApplicationContext(), "Permit drawing over other apps የሚለውን ቁልፍ ያብሩት\n" +
                            "\nturn on Permit drawing over other apps option", Toast.LENGTH_LONG).show(); startActivityForResult(intent, 2);
                }else{
                    if(checkAccessibilityPermission()){

                        if(!recharge&&!balance){
                            editor.putBoolean("isapp", true);
                            editor.commit();
                            registerReceiver(broadcastReceiver,new IntentFilter("kaleb"));
                            wm.addView(view1,params);
                            String ussd = "*" + "999" + Uri.encode("#");
                            Intent i=new Intent(Intent.ACTION_CALL,Uri.parse("tel:"+ussd));
                            i.putExtra("com.android.phone.extra.slot",slot);
                            startActivity(i);
                            handler = new Handler();
                            myRunnable = new Runnable() {
                                public void run() {
                                    try{
                                        wm.removeView(view1);
                                    }catch(IllegalArgumentException e){
                                        //Toast.makeText(getApplicationContext(),"view not found", Toast.LENGTH_SHORT).show();
                                    }
                                }
                            };

                            handler.postDelayed(myRunnable,30000);
                        }else if(balance){
                            balance=false;
                            String ussd = data;
                            Intent i=new Intent(Intent.ACTION_CALL,Uri.parse("tel:"+ussd));
                            i.putExtra("com.android.phone.extra.slot",slot);
                            startActivity(i);

                        }else{
                            recharge=false;
                            String ussd = "*805*"+data+Uri.encode("#");
                            Intent i=new Intent(Intent.ACTION_CALL,Uri.parse("tel:"+ussd));
                            i.putExtra("com.android.phone.extra.slot",slot);
                            startActivity(i);
                        }
                    }else{
                        editor.putBoolean("isservice",true);
                        editor.commit();
                        Toast.makeText(getApplicationContext(), "Telepackage የሚለውን ቁልፍ ያብሩት\n" +
                                "\nturn on accessibility setting", Toast.LENGTH_LONG).show();

                    }
                }


            }else{
                Toast.makeText(getApplicationContext(), "ussd", Toast.LENGTH_SHORT).show();

            }
        }else if(requestCode==2){
            wm.addView(view1,params);
            final Handler handler = new Handler();
            handler.postDelayed(new Runnable() {
                @Override
                public void run() {
                    wm.removeView(view1);
                }
            }, 2000);
        }else if(requestCode==3){
            String imei= telephonyManager.getDeviceId();
            Imei=fd.getReference("Userimei/"+imei);
            Imei.addListenerForSingleValueEvent(new ValueEventListener() {
                @Override
                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                    if(dataSnapshot.exists()){

                    }else{
                        Imei.setValue(imei);
                    }}
                @Override
                public void onCancelled(@NonNull DatabaseError databaseError) {

                }
            });
            // getfire();
        }else{
            Toast.makeText(getApplicationContext(), "request error", Toast.LENGTH_SHORT).show();
        }
    }

    @Override
    public void toast() {
        Toast.makeText(getApplicationContext(),String.valueOf(t), Toast.LENGTH_SHORT).show();
        t++;
    }



    @Override
    public void data(String dat,String ch) {
        Toast.makeText(getApplicationContext(),String.valueOf(t), Toast.LENGTH_SHORT).show();
        t++;
        data=dat;
        check=ch;
        ussd();
    }

    @Override
    public void dialog(String step,String check) {

        //Toast.makeText(getApplicationContext(), loginDataBaseAdapter.getaccount().get(0).getStepgift(), Toast.LENGTH_SHORT).show();
        cd = new forothersdialog(this,this,step,check);
        cd.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        cd.show();
    }

    @Override
    public void foryou(String phone,String ch) {
        //Toast.makeText(getApplicationContext(),"foryou "+phone, Toast.LENGTH_SHORT).show();
        cdd = new confirm_dialog(this,this,phone,ch);
        cdd.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        cdd.show();

    }
    /*public void foryou(String data){
        Toast.makeText(getApplicationContext(),"foryou "+data, Toast.LENGTH_SHORT).show();
    }*/
    public void onebirr(View view) {
        TabLayout tabLayout = findViewById(R.id.tab_layout);
        TabLayout.Tab tab1=tabLayout.getTabAt(9);
        tab1.select();
    }
    public void convertpackage(View view) {
        TabLayout tabLayout = findViewById(R.id.tab_layout);
        TabLayout.Tab tab1=tabLayout.getTabAt(10);
        tab1.select();
    }
    public void firebasewrite() {
        dr.setValue("itwork").addOnSuccessListener(new OnSuccessListener<Void>() {
            @Override
            public void onSuccess(Void aVoid) {
                Toast.makeText(getApplicationContext(),"success", Toast.LENGTH_SHORT).show();
            }
        });
    }
    public void firebaseread() {
        dr.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                String s=dataSnapshot.getValue(String.class);
                Toast.makeText(getApplicationContext(),s, Toast.LENGTH_SHORT).show();
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
    }




    public void change(String str){
        String  strr = "";
        for(int i=0;i<str.length();i++){
            if(str.charAt(i)==','){
                StringBuffer stringBuffer=new StringBuffer(str);//.insert(i,"t").toString();
                stringBuffer.insert(i,'t');
                strr=stringBuffer.toString();
            }
        }
        editTex.setText(strr);
    }
    public void databaseassign(){

        MyListData myListData=new MyListData();
        ArrayList<MyListData> arrayList = new ArrayList<>();
        myListData.setTag1("በ3 ብር 35 ሜ.ባ");
        myListData.setTag2("በ3 ብር 12 ደቂቃ");
        myListData.setTag3("በ2 ብር 35 መልዕክት");
        myListData.setTag4("ብር 12 የ12 ደቂቃ");
        myListData.setTag5("በ15 ብር 390 ፍሌክሲ");
        myListData.setTag6("በ 29.90 ብር 5 ደቂቃ");
        myListData.setTag7("በ 2ብር  8 ደቂቃ");
        myListData.setTag8("ብር 650የ555 ደቂቃ፣12ጂቢ እና 150");
        myListData.setTag9("በ 12 ብር ለ1-");
        myListData.setTag10("በ 1 ብር 4 ደቂቃ");
       /* myListData.setTag11();
        myListData.setTag12();*/
        myListData.setTab1("3 birr for daily 35 MB");
        myListData.setForyou1("1;1;3;1;1;1");
        myListData.setGift1("1;2;3;1;1");
        myListData.setTab2("3 birr for 12 minute voice daily");
        myListData.setForyou2("1;1;2;1;1;1");
        myListData.setGift2("1;2;2;1;1");
        myListData.setTab3("2 birr for 20 sms");
        myListData.setForyou3("1;1;10;1;1;1");
        myListData.setGift3("1;2;10;1;1");
        myListData.setTab4("12 birr for 12 minute,160 MB and 20 sms");
        myListData.setForyou4("1;1;4;1;1;1");
        myListData.setGift4("1;2;4;1;1");
        myListData.setTab5("15 birr for 390 flexi");
        myListData.setForyou5("1;1;5;1;1;1");
        myListData.setGift5("1;2;5;1;1");
        myListData.setTab6("29.90 birr for 5 minute selected 10 countries");
        myListData.setForyou6("1;1;8;1;1;1;1");
        myListData.setGift6("1;2;8;1;1;1");
        myListData.setTab7("2 birr for 8 minute voice and 5 sms");
        myListData.setForyou7("1;1;9;1;1");
        myListData.setGift7("1;2;9;1");
        myListData.setTab8("650 birr for 555 minute voice and 12 GB internet");
        myListData.setForyou8("1;1;7;1;1;1");
        myListData.setGift8("1;2;7;1;1");
        myListData.setTab9("12 birr for 1 hour Unlimited internet");
        myListData.setForyou9("2;1;1;1;1");
        myListData.setGift9("2;2;1;1;1");
        myListData.setTab10("1 birr for 4 miniue voice for an hour");
        myListData.setForyou10("1;1;1;1;1");
        myListData.setGift10("1;2;1;1");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailysaf);



        myListData.setTag1("በ5 ብር 75 ሜ.ባ");
        myListData.setTag2("በ5 ብር 20 ደቂቃ");
        myListData.setTag3("በ3 ብር 55 መልዕክት");
        myListData.setTag4("ብር 33 የ28 ደቂቃ");
        myListData.setTag5("");
        myListData.setTag6("በ 37 ብር 5 ደቂቃ");
        myListData.setTag7("በ 2ብር 25 ሜ.ባ እና 5 መልዕክት");
        myListData.setTag8("የ1500 ደቂቃ፣12ጂቢ እና 150");
        myListData.setTag9("በ 55 ብር ለአንድ ቀን");
        myListData.setTag10("በ 1 ብር 20 ሜ.ባ");
       /* myListData.setTag11();
        myListData.setTag12();*/
        myListData.setTab1("5 birr for 75 MB");
        myListData.setForyou1("1;1;3;1;2;1");
        myListData.setGift1("1;2;3;1;2");
        myListData.setTab2("5 birr for 20 minute voice daily");
        myListData.setForyou2("1;1;2;1;2;1");
        myListData.setGift2("1;2;2;1;2");
        myListData.setTab3("3 birr for 40 sms");
        myListData.setForyou3("1;1;10;1;2;1");
        myListData.setGift3("1;2;10;1;2");
        myListData.setTab4("33 birr for 28 minute voice,590 MB and  10 sms");
        myListData.setForyou4("1;1;4;1;#;2;1");
        myListData.setGift4("1;2;4;1;#;2");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("37 birr for 5 minute selected 11 countries");
        myListData.setForyou6("1;1;8;2;1;1;1");
        myListData.setGift6("1;2;8;2;1;1");
        myListData.setTab7("2 birr for 25 MG internet and 5 sms");
        myListData.setForyou7("1;1;9;2;1");
        myListData.setGift7("1;2;9;2");
        myListData.setTab8("860 birr for 1500 minute,12 GB and 150 sms");
        myListData.setForyou8("1;1;7;1;#;2;1");
        myListData.setGift8("1;2;7;1;2");
        myListData.setTab9("55 birr for Daily Unlimited internet");
        myListData.setForyou9("2;1;2;1;1");
        myListData.setGift9("2;2;2;1;1");
        myListData.setTab10("1 birr for 20 MB for 1 hour");
        myListData.setForyou10("1;1;1;2;1");
        myListData.setGift10("1;2;1;2");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailysaf);

        myListData.setTag1("2 ብር 200 ሜ.ባ");
        myListData.setTag2("በ10 ብር 45");
        myListData.setTag3("በ5 ብር 100 መልዕክት");
        myListData.setTag4("ብር 33 የ28 ደቂቃ፣590ሜ.ባ እና 10 መልዕክት");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("በ 2 ብር 25 ሜ.ባ እና 5 መልዕክት");
        myListData.setTag8("የ1500 ደቂቃ፣12ጂቢ እና 150");
        myListData.setTag9("በ 35 ብርያልተገደበ የድምፅ");
        myListData.setTag10("በ 1 ብር 20 ሜ.ባ");
       /* myListData.setTag11();
        myListData.setTag12();*/
        myListData.setTab1("12 birr for 200 MB");
        myListData.setForyou1("1;1;3;1;3;1");
        myListData.setGift1("1;2;3;1;3");
        myListData.setTab2("10 birr for 45 minute voice daily");
        myListData.setForyou2("1;1;2;1;3;1");
        myListData.setGift2("1;2;2;1;3");
        myListData.setTab3("5 bir for 80 sms");
        myListData.setForyou3("1;1;10;1;3;1");
        myListData.setGift3("1;2;10;1;3");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("2620 birr for 555 minute ,unlimited internet and 150 sms");
        myListData.setForyou8("1;1;7;1;#;3;1");
        myListData.setGift8("1;2;7;1;#;3");
        myListData.setTab9("35 birr for Daily Unlimited voice");
        myListData.setForyou9("2;1;3;1;1");
        myListData.setGift9("2;2;3;1;1");
        myListData.setTab10("1 birr for 50 sms for 1 hour");
        myListData.setForyou10("1;1;1;3;1");
        myListData.setGift10("1;2;1;3");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailysaf);

        myListData.setTag1("በ25 ብር 500 ሜ.ባ");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("የ1500 ደቂቃ፣12ጂቢ እና 150");
        myListData.setTag9("");
        myListData.setTag10("");
       /* myListData.setTag11();
        myListData.setTag12();*/
        myListData.setTab1("25 birr for 500 MB");
        myListData.setForyou1("1;1;3;1;4;1");
        myListData.setGift1("1;2;3;1;4");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("3470 birr for unlimited voice,12 GB and 150 sms");
        myListData.setForyou8("1;1;7;1;#;#;4;1");
        myListData.setGift8("1;2;7;1;#;#;4");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailysaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("የ1500 ደቂቃ፣12ጂቢ እና 150");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("4130 birr for unlimited voice ,internet,sms");
        myListData.setForyou8("1;1;7;1;#;#;#;5;1");
        myListData.setGift8("1;2;7;1;#;#;#;5");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailysaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailysaf);

        //########################TABLE DAILY
        myListData.setTag1("በ 24 ብር 375 ሜ.ባ");
        myListData.setTag2("በ15 ብር 70 ደቂቃ");
        myListData.setTag3("በ10 ብር 200 መልዕክት");
        myListData.setTag4("ብር 50 የ70 ደቂቃ");
        myListData.setTag5("በ50 ብር 1320 ፍሌክሲ");
        myListData.setTag6("በ 74.90 ብር 15 ደቂቃ");
        myListData.setTag7("");
        myListData.setTag8("ብር 10200 ያልተገደበ ድምፅ፣ ዳታ እና");
        myListData.setTag9("በ300 ብር ለሳምንት");
        myListData.setTag10("");

        myListData.setTab1("24 birr for weekly 375 MB ");
        myListData.setForyou1("1;1;3;2;1;1");
        myListData.setGift1("1;2;3;2;1");
        myListData.setTab2("15 birr for 70 minute voice weekly");
        myListData.setForyou2("1;1;2;2;1;1");
        myListData.setGift2("1;2;2;2;1");
        myListData.setTab3("10 birr for 165 sms");
        myListData.setForyou3("1;1;10;2;1;1");
        myListData.setGift3("1;2;10;2;1");
        myListData.setTab4("50 birr for 70 minute voice,590 MB and 20 sms");
        myListData.setForyou4("1;1;4;2;1;1");
        myListData.setGift4("1;2;4;2;1");
        myListData.setTab5("50 birr for 1320 flexi package");
        myListData.setForyou5("1;1;5;2;1;1");
        myListData.setGift5("1;2;5;2;1");
        myListData.setTab6("74.90 birr for 15 minute selected 10 countries");
        myListData.setForyou6("1;1;8;1;2;1;1");
        myListData.setGift6("1;2;8;1;2;1");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("10,200 birr for unlimited voice,internet,sms");
        myListData.setForyou8("1;1;7;2;1;1");
        myListData.setGift8("1;2;7;2;1");
        myListData.setTab9("300 birr for unlimited internet and sms");
        myListData.setForyou9("1;1;6;1;1;1");
        myListData.setGift9("1;2;6;1;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklysaf);

        myListData.setTag1("በ 38 ብር 600 ሜ.ባ");
        myListData.setTag2("በ20 ብር 100 ደቂቃ");
        myListData.setTag3("በ15 ብር 350 መልዕክት");
        myListData.setTag4("76 የ100 ደቂቃ፣1ጂቢ እና 20 መልዕክት");
        myListData.setTag5("");
        myListData.setTag6("በ 104 ብር 15 ደቂቃ");
        myListData.setTag7("");
        myListData.setTag8("ያልተገደበ ድምፅ እና መልዕክት");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("38 birr for weekly 600 MB");
        myListData.setForyou1("1;1;3;2;2;1");
        myListData.setGift1("1;2;3;2;2");
        myListData.setTab2("20 birr for 100 minute voice weekly");
        myListData.setForyou2("1;1;2;2;2;1");
        myListData.setGift2("1;2;2;2;2");
        myListData.setTab3("15 birr for 333 sms");
        myListData.setForyou3("1;1;10;2;2;1");
        myListData.setGift3("1;2;10;2;2");
        myListData.setTab4("76 birr for 100 minute voice, 1 GB  and 20 sms");
        myListData.setForyou4("1;1;4;2;#;2;1");
        myListData.setGift4("1;2;4;2;#;2");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("104 birr for 15 minute selected 11 countries");
        myListData.setForyou6("1;1;8;2;2;1;1");
        myListData.setGift6("1;2;8;2;2;1");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("5995 birr for unlimited voice and sms");
        myListData.setForyou8("1;1;7;2;#;2;1");
        myListData.setGift8("1;2;7;2;#;2");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklysaf);

        myListData.setTag1("በ 49 ብር 1ጊ.ባ");
        myListData.setTag2("በ25 ብር");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("ብር 5995 ያልተገደበ ዳታ እና");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("56 birr for weekly 1 GB");
        myListData.setForyou1("1;1;3;2;3;1");
        myListData.setGift1("1;2;3;2;3");
        myListData.setTab2("25 birr for 130 minute voice weekly");
        myListData.setForyou2("1;1;2;2;3;1");
        myListData.setGift2("1;2;2;2;3");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("5995 birr for unlimited internet and sms");
        myListData.setForyou8("1;1;7;2;#;3;1");
        myListData.setGift8("1;2;7;2;#;3");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklysaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklysaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");


        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklysaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklysaf);

        //  #################  monthly

        myListData.setTag1("በ 35 ብር 500ሜ.ባ");
        myListData.setTag2("በ35 ብር 125 ደቂቃ");
        myListData.setTag3("በ30 ብር 800 መልዕክት");
        myListData.setTag4("ብር 140 የ125 ደቂቃ፣2ጂቢ እና 50");
        myListData.setTag5("በ100 ብር 2280 ፍሌክሲ");
        myListData.setTag6("በ 449 ብር 150 ደቂቃ");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("በ 999ብር ያልተገደበ ድ");
        myListData.setTag10("");


        myListData.setTab1("35 birr for monthly 500MB");
        myListData.setForyou1("1;1;3;3;1;1;1");
        myListData.setGift1("1;2;3;3;1;1");
        myListData.setTab2("35 birr for 125 miniute voice monthly");
        myListData.setForyou2("1;1;2;3;1;1;1");
        myListData.setGift2("1;2;2;3;1;1");
        myListData.setTab3("30 birr for 656 sms");
        myListData.setForyou3("1;1;10;3;1;1");
        myListData.setGift3("1;2;10;3;1");
        myListData.setTab4("140 birr for 125 minute voice,2 GB  and 50 sms");
        myListData.setForyou4("1;1;4;3;1;1;1");
        myListData.setGift4("1;2;4;3;1;1");
        myListData.setTab5("100 birr for 2280 flexi package");
        myListData.setForyou5("1;1;5;3;1;1;1");
        myListData.setGift5("1;2;5;3;1;1");
        myListData.setTab6("149 birr for 150 minute selected 10 countries");
        myListData.setForyou6("1;1;8;1;3;1;1");
        myListData.setGift6("1;2;8;1;3;1");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("999 birr for unlimited voice ");
        myListData.setForyou9("1;1;6;2;1;1;1");
        myListData.setGift9("1;2;6;2;1;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 50 ብር 1ጊ.ባ");
        myListData.setTag2("በ50 ብር 185 ደቂቃ");
        myListData.setTag3("በ50 ብር 1500 መልዕክት");
        myListData.setTag4("ብር 200 የ375 ደ");
        myListData.setTag5("");
        myListData.setTag6("በ 999 ብር 150 ደቂቃ");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("በ 999ብር ያልተገደበ ኢንተርኔት");
        myListData.setTag10("");


        myListData.setTab1("50 birr for monthly 1GB");
        myListData.setForyou1("1;1;3;3;2;1;1");
        myListData.setGift1("1;2;3;3;2");
        myListData.setTab2("50 birr for 185 miniute voice monthly");
        myListData.setForyou2("1;1;2;3;2;1;1");
        myListData.setGift2("1;2;2;3;2;1");
        myListData.setTab3("50 birr for 1313 sms");
        myListData.setForyou3("1;1;10;3;1;1");
        myListData.setGift3("1;2;10;3;1");
        myListData.setTab4("200 birr for 375 minute voice, 2 GB  and 50 sms");
        myListData.setForyou4("1;1;4;3;1;1;1");
        myListData.setGift4("1;2;4;3;1;1");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("999 birr for 150 minute selected 11 countries");
        myListData.setForyou6("1;1;8;2;3;1;1");
        myListData.setGift6("1;2;8;2;3;1");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("999 birr for unlimited internet ");
        myListData.setForyou9("1;1;6;2;2;1;1");
        myListData.setGift9("1;2;6;2;2;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 100 ብር 2ጊ.ባ");
        myListData.setTag2("በ95 ብር 375 ደቂ");
        myListData.setTag3("");
        myListData.setTag4("ብር 1663 የ1250 ደቂቃ፣ያልተገደበ");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("በ 1700ብር ያልተገደበ");
        myListData.setTag10("");

        myListData.setTab1("100 birr for monthly 2GB");
        myListData.setForyou1("1;1;3;3;3;1;1");
        myListData.setGift1("1;2;3;3;3;1");
        myListData.setTab2("95 birr for 375 miniute voice monthly");
        myListData.setForyou2("1;1;2;3;3;1;1");
        myListData.setGift2("1;2;2;3;3;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("1663 birr for 1250 minute , unlimited internet and 50 sms");
        myListData.setForyou4("1;1;4;3;#;3;1;1");
        myListData.setGift4("1;2;4;3;#;3;1");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("1700 birr for unlimited voice and internet");
        myListData.setForyou9("1;1;6;2;3;1;1");
        myListData.setGift9("1;2;6;2;3;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 175 ብር 4ጊ.ባ");
        myListData.setTag2("በ120 ብር 500 ደቂቃ");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("በ 2330ብር ያልተገደበ");
        myListData.setTag10("");

        myListData.setTab1("175 birr for monthly 4GB");
        myListData.setForyou1("1;1;3;3;#;4;1;1");
        myListData.setGift1("1;2;3;3;#;4;1");
        myListData.setTab2("120 birr for 500 miniute voice monthly");
        myListData.setForyou2("1;1;2;3;#;4;1;1");
        myListData.setGift2("1;2;2;3;#;4;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("2330 birr for unlimited voice,internet,sms and international 100 minute and 50 sms");
        myListData.setForyou9("1;1;6;2;#;4;1;1");
        myListData.setGift9("1;2;6;2;#;4;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 379 ብር 10ጊ.ባ");
        myListData.setTag2("በ200 ብር 1000 ደቂቃ");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("379 birr for monthly 10GB");
        myListData.setForyou1("1;1;3;3;#;5;1;1");
        myListData.setGift1("1;2;3;3;#;5;1");
        myListData.setTab2("200 birr for 1000 miniute voice monthly");
        myListData.setForyou2("1;1;2;3;#;5;1;1");
        myListData.setGift2("1;2;2;3;#;5;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 549 ብር 20ጊ.ባ");
        myListData.setTag2("በ380 ብር");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("549 birr for monthly 20GB");
        myListData.setForyou1("1;1;3;3;#;6;1;1");
        myListData.setGift1("1;2;3;3;#;6;1");
        myListData.setTab2("380 birr for 2000 miniute voice monthly");
        myListData.setForyou2("1;1;2;3;#;6;1;1");
        myListData.setGift2("1;2;2;3;#;6;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 799 ብር 50ጊ.ባ");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");


        myListData.setTab1("799 birr for monthly 50GB");
        myListData.setForyou1("1;1;3;3;#;7;1;1");
        myListData.setGift1("1;2;3;3;#;7;1");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 849 ብር 100 ጊ.ባ");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");


        myListData.setTab1("849 birr for monthly 100GB");
        myListData.setForyou1("1;1;3;3;#;8;1;1");
        myListData.setGift1("1;2;3;3;#;8;1");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        //############ night

        myListData.setTag1("በ3 ብር 70 ሜ.ባ");
        myListData.setTag2("በ3 ብር 60 ደቂቃ");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("3 birr for night 70 MB");
        myListData.setForyou1("1;1;3;4;1;1");
        myListData.setGift1("1;2;3;4;1");
        myListData.setTab2("3 birr for 60 miniute voice night");
        myListData.setForyou2("1;1;2;4;1;1;1");
        myListData.setGift2("1;2;2;4;1;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightsaf);


        myListData.setTag1("በ5 ብር 160 ሜ.ባ");
        myListData.setTag2("በ6 ብር 140 ደቂቃ");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1(" 5 birr for night 160 MB");
        myListData.setForyou1("1;1;3;4;2;1");
        myListData.setGift1("1;2;3;4;2");
        myListData.setTab2("6 birr for 140 miniute voice night");
        myListData.setForyou2("1;1;2;4;2;1;1");
        myListData.setGift2("1;2;2;4;2;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightsaf);

        myListData.setTag1("በ7 ብር 300 ሜ.ባ");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("7 birr for night 300 MB");
        myListData.setForyou1("1;1;3;4;3;1");
        myListData.setGift1("1;2;3;4;3");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightsaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightsaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightsaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightsaf);

    }
    public void totalsucc(){
        totalsuccses[0]=totalsuccses[0]+1;
        //textView.setText(String.valueOf(totalsuccses[0]));
        if(totalsuccses[0]==432){
            Toast.makeText(getApplicationContext(), "total succsess"+totalsuccses[0], Toast.LENGTH_SHORT).show();
           // totalsuccses[0]=0;
        }
    }
    public void databaseassignamharic(){

        MyListData myListData=new MyListData();
        ArrayList<MyListData> arrayList = new ArrayList<>();


        myListData.setTab1("በ 3 ብር እለታዊ 35 ሜ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setTab2("በ 3 ብር ዕለታዊ 1 2 ደቂቃ የ ድምፅ ጥቅል");
        myListData.setTab3("በ 2 ብር 20 መልዕክት");
        myListData.setTab4("በ 12 ብር 12 ደቂቃ ድምፅ, 160 ሜ.ባ ኢንተርኔት እና 10 መልዕክት");
        myListData.setTab5("በ 15 ብር 390 ፍሌክሲ");
        myListData.setTab6("በ 29.90 ብር 5 ደቂቃ ለተመረጡ 10 ሀገራት");
        myListData.setTab7("በ 2 ብር 8 ደቂቃ ድምፅ እና 5 መልዕክት");
        myListData.setTab8("በ 650 ብር 555 ደቂቃ 12 ጊ.ባ");
        myListData.setTab9("በ 12 ብር ለ አንድ ሰአት ያልተገደበ ኢንተርኔት");
        myListData.setTab10("በ 1 ብር 4 ደቂቃ ድምፅ ለ 1 ሰአት");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailyamsaf);


        myListData.setTab1("በ 5 ብር እለታዊ 75 ሜ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("1;1;3;1;2;1");
        myListData.setGift1("1;2;3;1;2");
        myListData.setTab2("በ 5 ብር ዕለታዊ 20 ደቂቃ የ ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;1;2;1");
        myListData.setGift2("1;2;1;1;2");
        myListData.setTab3("በ 3 ብር 40 መልዕክት");
        myListData.setForyou3("1;1;10;1;2;1");
        myListData.setGift3("1;2;10;1;2");
        myListData.setTab4("በ 33 ብር 28 ደቂቃ ድምፅ , 590 ሜ.ባ ኢንተርኔት እና 10 መልዕክት");
        myListData.setForyou4("1;1;3;1;2;1");
        myListData.setGift4("1;2;3;1;2");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("በ 37 ብር 5 ደቂቃ ለተመረጡ 11 ሀገራት");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("በ 2 ብር 25 ሜ.ባ እና 5 መልዕክት");
        myListData.setForyou7("1;1;9;2;1");
        myListData.setGift7("1;2;9;2");
        myListData.setTab8("በ 860 ብር 1 500 ደቂቃ 12 ጊ.ባ እና 150 መልዕክት");
        myListData.setForyou8("1;1;7;1;2;1");
        myListData.setGift8("1;2;7;1;2");
        myListData.setTab9("በ 55 ብር ዕለታዊ ያልተገደበ ኢንተርኔት");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("በ 1 ብር 20 ሜ.ባ ኢንተረኔት ለ 1 ሰአት");
        myListData.setForyou10("2;1;2;1");
        myListData.setGift10("2;2;2");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailyamsaf);




        myListData.setTag1("2 ብር 200 ሜ.ባ");
        myListData.setTag2("በ10 ብር 45 ደቂቃ");
        myListData.setTag3("በ3 ብር 40 መልዕክት");
        myListData.setTag4("ብር 33 የ28 ደቂቃ፣590ሜ.ባ እና 10 መልዕክት");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("በ 2 ብር 25 ሜ.ባ እና 5 መልዕክት");
        myListData.setTag8("የ1500 ደቂቃ፣12ጂቢ እና 150");
        myListData.setTag9("በ 35 ብርያልተገደበ የድምፅ");
        myListData.setTag10("በ 1 ብር 20 ሜ.ባ");

        myListData.setTab1("በ 12 ብር እለታዊ 200 ሜ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("1;1;3;1;#;3;1");
        myListData.setGift1("1;1;3;1;#;3");
        myListData.setTab2("በ 10 ብር ዕለታዊ 45 ደቂቃ የ ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;1;3;1");
        myListData.setGift2("1;2;1;1;3");
        myListData.setTab3("በ 5 ብር 80 መልዕክት");
        myListData.setForyou3("1;1;10;1;3;1");
        myListData.setGift3("1;2;10;1;3");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("በ 2620 ብር 555 ደቂቃ ያልተገደበ ዳታ እና 150 መልዕክት");
        myListData.setForyou8("1;1;7;1;3;1");
        myListData.setGift8("1;2;7;1;3");
        myListData.setTab9("በ 35 ብር ዕለታዊ ያልተገደበ ድምፅ");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("በ 1 ብር 50 አጭር መልዕክት ለ 1 ሰአት");
        myListData.setForyou10("2;1;3;1");
        myListData.setGift10("2;2;3");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailyamsaf);


        myListData.setTab1("በ 25 ብር እለታዊ 500 ሜ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("1;1;3;1;#;4;1");
        myListData.setGift1("1;1;3;1;#;4");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("በ 3470 ያልተገደበ ድምፅ 12 ጊ.ባ ኢንተርኔት እና 150 መልዕክት");
        myListData.setForyou8("1;1;7;1;4;1");
        myListData.setGift8("1;2;7;1;4");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailyamsaf);


        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("በ 4130 ያልተገደበ ድምፅ ,ኢንተርኔት,መልዕክት");
        myListData.setForyou8("1;1;7;1;5;1");
        myListData.setGift8("1;2;7;1;5");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailyamsaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailyamsaf);


        //########################TABLE weekly

        myListData.setTab1("በ 24 ብር ሳምንታዊ 300 ሜ.ባ የ ኢንተርኔት ጥቅል ");
        myListData.setForyou1("1;1;2;2;1;1");
        myListData.setGift1("1;2;2;2;1");
        myListData.setTab2("በ 15 ብር 70 ደቂቃ ሳምንታዊ የ ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;2;1;1");
        myListData.setGift2("1;2;1;2;1");
        myListData.setTab3("በ 10 ብር 165 መልዕክት");
        myListData.setForyou3("1;1;11;2;5;1;10;2;1;1");
        myListData.setGift3("1;2;10;2;1");
        myListData.setTab4("በ 50 ብር 70 ደቂቃ ድምፅ , 590 ሜ.ባ ኢንተርኔት እና 20 መልዕክት");
        myListData.setForyou4("1;1;3;2;1;1");
        myListData.setGift4("1;2;3;2;1");
        myListData.setTab5("በ 50 ብር 1 320 ፍሌክሲ");
        myListData.setForyou5("1;1;4;2;1;1");
        myListData.setGift5("1;2;4;2;1");
        myListData.setTab6("በ 74.90 ብር 15 ደቂቃ ለተመረጡ 10 ሀገራት");
        myListData.setForyou6("1;1;8;2;1;1");
        myListData.setGift6("1;2;8;2;1");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("በ 10,200 ያልተገደበ ድምፅ,ኢንተርኔት,መልዕክት");
        myListData.setForyou8("1;1;7;2;1;1");
        myListData.setGift8("1;2;7;2;1");
        myListData.setTab9("በ 300 ብር ሳምንታዊ ያልተገደበ የ ኢንተርኔት እና መልዕክት ጥቅል");
        myListData.setForyou9("1;1;5;1;1;1");
        myListData.setGift9("1;2;5;1;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklyamsaf);


        myListData.setTab1("በ 38 ብር ሳምንታዊ 600 ሜ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("1;1;2;2;2;1");
        myListData.setGift1("1;2;2;2;2");
        myListData.setTab2("በ 20 ብር 100 ደቂቃ ሳምንታዊ የ ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;2;2;1");
        myListData.setGift2("1;2;1;2;2");
        myListData.setTab3("በ 15 ብር 333 መልዕክት");
        myListData.setForyou3("1;1;10;2;2;1");
        myListData.setGift3("1;2;10;2;2");
        myListData.setTab4("በ 76 ብር 100 ደቂቃ ድምፅ , 1 ጊ.ባ ኢንተርኔት እና 20 መልዕክት");
        myListData.setForyou4("1;1;3;1;1;1");
        myListData.setGift4("1;2;3;1;1");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("በ 104 ብር 15 ደቂቃ ለተመረጡ 11 ሀገራት");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("በ 5995 ያልተገደበ ድምፅ እና መልዕክት");
        myListData.setForyou8("1;1;7;2;2;1");
        myListData.setGift8("1;2;7;2;2");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklyamsaf);


        myListData.setTab1("በ 50 ብር ሳምንታዊ 1 ጊ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("1;1;2;2;2;1");
        myListData.setGift1("1;2;2;2;2");
        myListData.setTab2("በ 25 ብር 130 ደቂቃ ሳምንታዊ የ ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;2;2;1");
        myListData.setGift2("1;2;1;2;2");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("በ 5995 ያልተገደበ ኢንተርኔት እና መልዕክት");
        myListData.setForyou8("1;1;7;2;3;1");
        myListData.setGift8("1;2;7;2;3");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklyamsaf);

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklyamsaf);

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklyamsaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklyamsaf);

        //######### monthly

        myListData.setTab1("በ 35 ብር ወርሀዊ 500 ሜ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("1;1;2;3;1;1");
        myListData.setGift1("1;2;2;3;1");
        myListData.setTab2("በ 35 ብር 125 ደቂቃ ወርሀዊ የ ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;3;1;1");
        myListData.setGift2("1;2;1;3;1");
        myListData.setTab3("በ 30 ብር 656 መልዕክት");
        myListData.setForyou3("1;1;10;3;1;1");
        myListData.setGift3("1;2;10;3;1");
        myListData.setTab4("በ 140 ብር 125 ደቂቃ ድምፅ , 2 ጊ.ባ ኢንተርኔት እና 50 መልዕክት");
        myListData.setForyou4("1;1;3;3;1;1");
        myListData.setGift4("1;2;3;3;1");
        myListData.setTab5("በ 100 ብር 2280 ፍሌክሲ");
        myListData.setForyou5("1;1;4;3;1;1");
        myListData.setGift5("1;2;4;3;1");
        myListData.setTab6("በ 449 ብር 150 ደቂቃ ለተመረጡ 10 ሀገራት");
        myListData.setForyou6("1;1;8;3;1;1");
        myListData.setGift6("1;2;8;3;1");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("በ 999 ብር ያልተገደበ ድምፅ ");
        myListData.setForyou9("1;1;5;2;1;1");
        myListData.setGift9("1;1;5;2;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyamsaf);

        myListData.setTab1("በ 50 ብር ወርሀዊ 1 ጊ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("1;1;2;3;1;1");
        myListData.setGift1("1;2;2;3;1");
        myListData.setTab2("በ 50 ብር 185 ደቂቃ ወርሀዊ የ ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;3;1;1");
        myListData.setGift2("1;2;1;3;1");
        myListData.setTab3("በ 50 ብር 1 31 3 መልዕክት");
        myListData.setForyou3("1;1;10;3;1;1");
        myListData.setGift3("1;2;10;3;1");
        myListData.setTab4("በ 200 ብር 375 ደቂቃ ድምፅ , 2ጊ.ባ ኢንተርኔት እና 50 መልዕክት");
        myListData.setForyou4("1;1;3;3;1;1");
        myListData.setGift4("1;2;3;3;1");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("በ 999 ብር 150 ደቂቃ ለተመረጡ 11 ሀገራት");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("በ 999 ብር ያልተገደበ ኢንተርኔት ");
        myListData.setForyou9("1;1;5;2;1;1");
        myListData.setGift9("1;1;5;2;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyamsaf);


        myListData.setTab1("በ 100 ብር ወርሀዊ 2 ጊ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("1;1;2;3;3;1");
        myListData.setGift1("1;2;2;3;3");
        myListData.setTab2("በ 95 ብር 375 ደቂቃ ወርሀዊ የ ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;3;3;1");
        myListData.setGift2("1;2;1;3;3");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("በ 1663 ብር 1250 ደቂቃ ድምፅ , ያልተገደበ ኢንተርኔት እና 50 መልዕክት");
        myListData.setForyou4("1;1;3;3;3;1");
        myListData.setGift4("1;2;3;3;3");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("በ 1700 ብር ያልተገደበ ድምፅ እና ኢንተርኔት");
        myListData.setForyou9("1;1;5;2;3;1");
        myListData.setGift9("1;2;5;2;3");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyamsaf);


        myListData.setTab1("በ 175 ብር ወርሀዊ 4 ጊ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("1;1;2;3;4;1");
        myListData.setGift1("1;2;2;3;4");
        myListData.setTab2("በ 120 ብር 500 ደቂቃ ወርሀዊ የ ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;3;4;1");
        myListData.setGift2("1;2;1;3;4");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("በ 2330 ብር ያልተገደበ ድምፅ,ኢንተርኔት,መልዕክት, አለም አቀፍ 100 ደቂቃ እና 50 መልዕክት");
        myListData.setForyou9("1;1;5;2;4;1");
        myListData.setGift9("1;2;5;2;3");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyamsaf);


        myListData.setTab1("በ 379 ብር ወርሀዊ 10 ጊ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("1;1;2;3;5;1");
        myListData.setGift1("1;2;2;3;5");
        myListData.setTab2("በ 200 ብር 1000 ደቂቃ ወርሀዊ የ ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;3;5;1");
        myListData.setGift2("1;2;1;3;5");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyamsaf);


        myListData.setTab1("በ 549 ብር ወርሀዊ 20 ጊ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("በ 380 ብር 2000 ደቂቃ ወርሀዊ የ ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;3;6;1");
        myListData.setGift2("1;2;1;3;6");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyamsaf);


        myListData.setTag1("በ 799 ብር 50ጊ.ባ");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("በ 799 ብር ወርሀዊ 50 ጊ.ባ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyamsaf);

        myListData.setTag1("በ 849 ብር 100 ጊ.ባ እና");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("በ 849 ብር  100 ጊ.ባ እና ያልተገደበ የ ኢንተርኔት ጥቅል");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlyamsaf);

        //##### night

        myListData.setTab1("በ 3 ብር የለሊት 70 ሜ.ባ");
        myListData.setForyou1("1;1;2;4;1;1");
        myListData.setGift1("1;2;2;4;1");
        myListData.setTab2("በ 3 ብር 60 ደቂቃ የለሊት ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;4;1;1");
        myListData.setGift2("1;2;1;4;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightamsaf);

        myListData.setTag1("በ3 ብር 70 ሜ.ባ");
        myListData.setTag2("በ3 ብር 60 ደቂቃ");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("በ 5 ብር የለሊት 160 ሜ.ባ");
        myListData.setForyou1("1;1;2;4;2;1");
        myListData.setGift1("1;2;2;4;2");
        myListData.setTab2("በ 6 ብር 140 ደቂቃ የለሊት ድምፅ ጥቅል");
        myListData.setForyou2("1;1;1;4;2;1");
        myListData.setGift2("1;2;1;4;2");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightamsaf);

        myListData.setTag1("በ7 ብር 300 ሜ.ባ");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("በ 7 ብር የለሊት 300 ሜ.ባ");
        myListData.setForyou1("1;1;2;4;3;1");
        myListData.setGift1("1;2;2;4;3");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightamsaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightamsaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightamsaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightam);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightamsaf);

    }
    /*public void checkdata(){
        MyListData myListData=new MyListData();
        loginDataBaseAdapter = loginDataBaseAdapter.open();
        myListData.setTab1("kaleb");
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablename1);
        myListData.setTab1("adamu");
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablename1);
        myListData.setTab1("biyadglng");
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablename1);

    }
    public void getid(){
        MyListData myListData=new MyListData();
        loginDataBaseAdapter = loginDataBaseAdapter.open();
       // Toast.makeText(this,loginDataBaseAdapter.getcheck(loginDataBaseAdapter.tablename1).get(1).getTab1(), Toast.LENGTH_SHORT).show();
        myListData.setTab1("kalebbbbbbbbbb");
        loginDataBaseAdapter.updatetotable(myListData,loginDataBaseAdapter.tablename1,String.valueOf(1));
        Toast.makeText(this,loginDataBaseAdapter.getcheck(loginDataBaseAdapter.tablename1).get(0).getTab1(), Toast.LENGTH_SHORT).show();

    }*/



    public void check(){
        SharedPreferences sharedPreferences=getSharedPreferences("but", Context.MODE_PRIVATE);
        //textemp.setText(String.valueOf(total));
        int i=0;i=i+1;
        //Toast.makeText(getApplicationContext(),"work"+i, Toast.LENGTH_SHORT).show();
        if(total==1200||total>1200){
            //databaseassignupdate();

            if(isupdate){
                iv.clearAnimation();}
            Toast.makeText(getApplicationContext(),"Updated successfully", Toast.LENGTH_SHORT).show();
            total=0;
        }

    }
    public void check1(){

        SharedPreferences sharedPreferences=getSharedPreferences("but", Context.MODE_PRIVATE);
        total=total+1;
        // textemp.setText(String.valueOf(total));
        if(total==1200||total>1200){
            //  databaseassignupdate();

            Toast.makeText(getApplicationContext(),"Updated successfully", Toast.LENGTH_SHORT).show();
            if(isupdate){
                iv.clearAnimation();}
            total=0;
        }
    }
    public void update(){
        //  getfire();


    }
    @Override
    protected void onDestroy() {
        super.onDestroy();
//        cameraSource.release();
        //unregisterReceiver(broadcastReceiver);
    }

    @Override
    protected void onPause() {
        super.onPause();
        //unregisterReceiver(broadcastReceiver);
    }
    @Override
    protected void onResume() {
        super.onResume();
        //registerReceiver(broadcastReceiver, new IntentFilter("kaleb"));


    }
    @Override
    protected void onStop() {
        super.onStop();

    }
    @Override
    protected void onStart() {
        super.onStart();


    }
    @Override
    public void confirm(String phone, String ch) {
        data=phone;
        check=ch;
        ussd();
    }

    @Override
    public void recharge(String phone, String ch) {
        data=phone;
        check=ch;
        recharge=true;
        ussd();
    }
    public void updatetabname(int tabnum,String tabname){

    }
    public void updatesubtabname(int tabnum,String tabname){

    }
    public void endistab(int tabnum,boolean enable){

    }
    public void endissubtab(int tabnum,int suntabnm,boolean enable){

    }
    public void deletedatabase(){
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tabnamesafam);

        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.subtabsafam);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.subtabsaf);


        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tabledailyam);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tabledailysaf);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tabledailyamsaf);

        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tableweeklyam);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tableweeklysaf);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tableweeklyamsaf);

        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tablemonthlyam);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tablemonthlysaf);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tablemonthlyamsaf);

        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tablenightam);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tablenightsaf);
        loginDataBaseAdapter.deletealltabledata(loginDataBaseAdapter.tablenightamsaf);

    }


    public void assigndata1(){
        for(int i=0;i<tab1damlist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab1(tab1damlist.get(i).getTab1());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyam);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyam,String.valueOf(i +1));

            }
            mylist1.setForyou1(tab1damlist.get(i).getForyou1());
            mylist1.setGift1(tab1damlist.get(i).getGift1());
            mylist1.setTag1(tab1damlist.get(i).getTag1());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledaily);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

            }

        }

        for(int i=0;i<tab1dlist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab1(tab1dlist.get(i).getTab1());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledaily);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab1damsaflist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab1(tab1damsaflist.get(i).getTab1());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyamsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(i +1));

            }
            mylist1.setForyou1(tab1damsaflist.get(i).getForyou1());
            mylist1.setGift1(tab1damsaflist.get(i).getGift1());
            mylist1.setTag1(tab1damsaflist.get(i).getTag1());

            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledailysaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab1dsaflist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab1(tab1dsaflist.get(i).getTab1());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailysaf);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

            }
        }


        for(int i=0;i<tab2damlist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab2(tab2damlist.get(i).getTab2());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyam);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyam,String.valueOf(i +1));

            }
            mylist1.setForyou2(tab2damlist.get(i).getForyou2());
            mylist1.setGift2(tab2damlist.get(i).getGift2());
            mylist1.setTag2(tab2damlist.get(i).getTag2());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledaily);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

            }

        }

        for(int i=0;i<tab2dlist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab2(tab2dlist.get(i).getTab2());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledaily);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab2damsaflist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab2(tab2damsaflist.get(i).getTab2());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyamsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(i +1));

            }
            mylist1.setForyou2(tab2damsaflist.get(i).getForyou2());
            mylist1.setGift2(tab2damsaflist.get(i).getGift2());
            mylist1.setTag2(tab2damsaflist.get(i).getTag2());

            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledailysaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab2dsaflist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab2(tab2dsaflist.get(i).getTab2());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailysaf);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

            }
        }


        for(int i=0;i<tab3damlist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab3(tab3damlist.get(i).getTab3());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyam);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyam,String.valueOf(i +1));

            }
            mylist1.setForyou3(tab3damlist.get(i).getForyou3());
            mylist1.setGift3(tab3damlist.get(i).getGift3());
            mylist1.setTag3(tab3damlist.get(i).getTag3());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledaily);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

            }

        }

        for(int i=0;i<tab3dlist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab3(tab3dlist.get(i).getTab3());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledaily);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab3damsaflist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab3(tab3damsaflist.get(i).getTab3());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyamsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(i +1));

            }
            mylist1.setForyou3(tab3damsaflist.get(i).getForyou3());
            mylist1.setGift3(tab3damsaflist.get(i).getGift3());
            mylist1.setTag3(tab3damsaflist.get(i).getTag3());

            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledailysaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab3dsaflist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab3(tab3dsaflist.get(i).getTab3());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailysaf);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

            }
        }


        for(int i=0;i<tab4damlist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab4(tab4damlist.get(i).getTab4());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyam);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyam,String.valueOf(i +1));

            }
            mylist1.setForyou4(tab4damlist.get(i).getForyou4());
            mylist1.setGift4(tab4damlist.get(i).getGift4());
            mylist1.setTag4(tab4damlist.get(i).getTag4());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledaily);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

            }

        }

        for(int i=0;i<tab4dlist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab4(tab4dlist.get(i).getTab4());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledaily);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab4damsaflist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab4(tab4damsaflist.get(i).getTab4());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyamsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(i +1));

            }
            mylist1.setForyou4(tab4damsaflist.get(i).getForyou4());
            mylist1.setGift4(tab4damsaflist.get(i).getGift4());
            mylist1.setTag4(tab4damsaflist.get(i).getTag4());

            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledailysaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab4dsaflist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab4(tab4dsaflist.get(i).getTab4());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailysaf);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

            }
        }


        for(int i=0;i<tab5damlist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab5(tab5damlist.get(i).getTab5());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyam);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyam,String.valueOf(i +1));

            }
            mylist1.setForyou5(tab5damlist.get(i).getForyou5());
            mylist1.setGift5(tab5damlist.get(i).getGift5());
            mylist1.setTag5(tab5damlist.get(i).getTag5());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledaily);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

            }

        }

        for(int i=0;i<tab5dlist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab5(tab5dlist.get(i).getTab5());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledaily);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab5damsaflist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab5(tab5damsaflist.get(i).getTab5());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyamsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(i +1));

            }
            mylist1.setForyou5(tab5damsaflist.get(i).getForyou5());
            mylist1.setGift5(tab5damsaflist.get(i).getGift5());
            mylist1.setTag5(tab5damsaflist.get(i).getTag5());

            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledailysaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab5dsaflist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab5(tab5dsaflist.get(i).getTab5());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailysaf);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab6damlist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab6(tab6damlist.get(i).getTab6());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyam);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyam,String.valueOf(i +1));

            }
            mylist1.setForyou6(tab6damlist.get(i).getForyou6());
            mylist1.setGift6(tab6damlist.get(i).getGift6());
            mylist1.setTag6(tab6damlist.get(i).getTag6());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledaily);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

            }

        }
    }
public void assigndata2(){
    for(int i=0;i<tab6dlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab6(tab6dlist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab6damsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab6(tab6damsaflist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou6(tab6damsaflist.get(i).getForyou6());
        mylist1.setGift6(tab6damsaflist.get(i).getGift6());
        mylist1.setTag6(tab6damsaflist.get(i).getTag6());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledailysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab6dsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab6(tab6dsaflist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab7damlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab7(tab7damlist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyam,String.valueOf(i +1));

        }
        mylist1.setForyou7(tab7damlist.get(i).getForyou7());
        mylist1.setGift7(tab7damlist.get(i).getGift7());
        mylist1.setTag7(tab7damlist.get(i).getTag7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab7dlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab7(tab7dlist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab7damsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab7(tab7damsaflist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou7(tab7damsaflist.get(i).getForyou7());
        mylist1.setGift7(tab7damsaflist.get(i).getGift7());
        mylist1.setTag7(tab7damsaflist.get(i).getTag7());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledailysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab7dsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab7(tab7dsaflist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab8damlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab8(tab8damlist.get(i).getTab8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyam,String.valueOf(i +1));

        }
        mylist1.setForyou8(tab8damlist.get(i).getForyou8());
        mylist1.setGift8(tab8damlist.get(i).getGift8());
        mylist1.setTag8(tab8damlist.get(i).getTag8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab8dlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab8(tab8dlist.get(i).getTab8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab8damsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab8(tab8damsaflist.get(i).getTab8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou8(tab8damsaflist.get(i).getForyou8());
        mylist1.setGift8(tab8damsaflist.get(i).getGift8());
        mylist1.setTag8(tab8damsaflist.get(i).getTag8());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledailysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab8dsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab8(tab8dsaflist.get(i).getTab8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab9damlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab9(tab9damlist.get(i).getTab9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyam,String.valueOf(i +1));

        }
        mylist1.setForyou9(tab9damlist.get(i).getForyou9());
        mylist1.setGift9(tab9damlist.get(i).getGift9());
        mylist1.setTag9(tab9damlist.get(i).getTag9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab9dlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab9(tab9dlist.get(i).getTab9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab9damsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab9(tab9damsaflist.get(i).getTab9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou9(tab9damsaflist.get(i).getForyou9());
        mylist1.setGift9(tab9damsaflist.get(i).getGift9());
        mylist1.setTag9(tab9damsaflist.get(i).getTag9());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledailysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab9dsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab9(tab9dsaflist.get(i).getTab9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab10damlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab10(tab10damlist.get(i).getTab10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyam,String.valueOf(i +1));

        }
        mylist1.setForyou10(tab10damlist.get(i).getForyou10());
        mylist1.setGift10(tab10damlist.get(i).getGift10());
        mylist1.setTag10(tab10damlist.get(i).getTag10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab10dlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab10(tab10dlist.get(i).getTab10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab10damsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab10(tab10damsaflist.get(i).getTab10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou10(tab10damsaflist.get(i).getForyou10());
        mylist1.setGift10(tab10damsaflist.get(i).getGift10());
        mylist1.setTag10(tab10damsaflist.get(i).getTag10());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledailysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab10dsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab10(tab10dsaflist.get(i).getTab10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab11damlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab11(tab11damlist.get(i).getTab11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyam,String.valueOf(i +1));

        }
        mylist1.setForyou11(tab11damlist.get(i).getForyou11());
        mylist1.setGift11(tab11damlist.get(i).getGift11());
        mylist1.setTag11(tab11damlist.get(i).getTag11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab11dlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab11(tab11dlist.get(i).getTab11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab11damsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab11(tab11damsaflist.get(i).getTab11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou11(tab11damsaflist.get(i).getForyou11());
        mylist1.setGift11(tab11damsaflist.get(i).getGift11());
        mylist1.setTag11(tab11damsaflist.get(i).getTag11());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledailysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }
}

public void assigndata3(){
    for(int i=0;i<tab11dsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab11(tab11dsaflist.get(i).getTab11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab12damlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab12(tab12damlist.get(i).getTab12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyam,String.valueOf(i +1));

        }
        mylist1.setForyou12(tab12damlist.get(i).getForyou12());
        mylist1.setGift12(tab12damlist.get(i).getGift12());
        mylist1.setTag12(tab12damlist.get(i).getTag12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab12dlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab12(tab12dlist.get(i).getTab12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledaily)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledaily);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledaily,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab12damsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab12(tab12damsaflist.get(i).getTab12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou12(tab12damsaflist.get(i).getForyou12());
        mylist1.setGift12(tab12damsaflist.get(i).getGift12());
        mylist1.setTag12(tab12damsaflist.get(i).getTag12());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tabledailysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab12dsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab12(tab12dsaflist.get(i).getTab12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tabledailysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tabledailysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tabledailysaf,String.valueOf(i +1));

        }
    }

    //weeeeeeeeeeeeeeeeeeeeeeeeeekly
    for(int i=0;i<tab1wamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab1(tab1wamlist.get(i).getTab1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyam,String.valueOf(i +1));

        }
        mylist1.setForyou1(tab1wamlist.get(i).getForyou1());
        mylist1.setGift1(tab1wamlist.get(i).getGift1());
        mylist1.setTag1(tab1wamlist.get(i).getTag1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab1wlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab1(tab1wlist.get(i).getTab1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab1wamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab1(tab1wamsaflist.get(i).getTab1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou1(tab1wamsaflist.get(i).getForyou1());
        mylist1.setGift1(tab1wamsaflist.get(i).getGift1());
        mylist1.setTag1(tab1wamsaflist.get(i).getTag1());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweeklysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab1wsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab1(tab1wsaflist.get(i).getTab1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab2wamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab2(tab2wamlist.get(i).getTab2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyam,String.valueOf(i +1));

        }
        mylist1.setForyou2(tab2wamlist.get(i).getForyou2());
        mylist1.setGift2(tab2wamlist.get(i).getGift2());
        mylist1.setTag2(tab2wamlist.get(i).getTag2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab2wlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab2(tab2wlist.get(i).getTab2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab2wamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab2(tab2wamsaflist.get(i).getTab2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou2(tab2wamsaflist.get(i).getForyou2());
        mylist1.setGift2(tab2wamsaflist.get(i).getGift2());
        mylist1.setTag2(tab2wamsaflist.get(i).getTag2());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweeklysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab2wsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab2(tab2wsaflist.get(i).getTab2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab3wamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab3(tab3wamlist.get(i).getTab3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyam,String.valueOf(i +1));

        }
        mylist1.setForyou3(tab3wamlist.get(i).getForyou3());
        mylist1.setGift3(tab3wamlist.get(i).getGift3());
        mylist1.setTag3(tab3wamlist.get(i).getTag3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab3wlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab3(tab3wlist.get(i).getTab3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab3wamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab3(tab3wamsaflist.get(i).getTab3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou3(tab3wamsaflist.get(i).getForyou3());
        mylist1.setGift3(tab3wamsaflist.get(i).getGift3());
        mylist1.setTag3(tab3wamsaflist.get(i).getTag3());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweeklysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab3wsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab3(tab3wsaflist.get(i).getTab3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab4wamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab4(tab4wamlist.get(i).getTab4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyam,String.valueOf(i +1));

        }
        mylist1.setForyou4(tab4wamlist.get(i).getForyou4());
        mylist1.setGift4(tab4wamlist.get(i).getGift4());
        mylist1.setTag4(tab4wamlist.get(i).getTag4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab4wlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab4(tab4wlist.get(i).getTab4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab4wamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab4(tab4wamsaflist.get(i).getTab4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou4(tab4wamsaflist.get(i).getForyou4());
        mylist1.setGift4(tab4wamsaflist.get(i).getGift4());
        mylist1.setTag4(tab4wamsaflist.get(i).getTag4());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweeklysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }
}

public void assigndata4(){
    for(int i=0;i<tab4wsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab4(tab4wsaflist.get(i).getTab4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab5wamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab5(tab5wamlist.get(i).getTab5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyam,String.valueOf(i +1));

        }
        mylist1.setForyou5(tab5wamlist.get(i).getForyou5());
        mylist1.setGift5(tab5wamlist.get(i).getGift5());
        mylist1.setTag5(tab5wamlist.get(i).getTag5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab5wlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab5(tab5wlist.get(i).getTab5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab5wamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab5(tab5wamsaflist.get(i).getTab5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou5(tab5wamsaflist.get(i).getForyou5());
        mylist1.setGift5(tab5wamsaflist.get(i).getGift5());
        mylist1.setTag5(tab5wamsaflist.get(i).getTag5());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweeklysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab5wsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab5(tab5wsaflist.get(i).getTab5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab6wamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab6(tab6wamlist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyam,String.valueOf(i +1));

        }
        mylist1.setForyou6(tab6wamlist.get(i).getForyou6());
        mylist1.setGift6(tab6wamlist.get(i).getGift6());
        mylist1.setTag6(tab6wamlist.get(i).getTag6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab6wlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab6(tab6wlist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab6wamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab6(tab6wamsaflist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou6(tab6wamsaflist.get(i).getForyou6());
        mylist1.setGift6(tab6wamsaflist.get(i).getGift6());
        mylist1.setTag6(tab6wamsaflist.get(i).getTag6());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweeklysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab6wsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab6(tab6wsaflist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab7wamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab7(tab7wamlist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyam,String.valueOf(i +1));

        }
        mylist1.setForyou7(tab7wamlist.get(i).getForyou7());
        mylist1.setGift7(tab7wamlist.get(i).getGift7());
        mylist1.setTag7(tab7wamlist.get(i).getTag7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab7wlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab7(tab7wlist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab7wamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab7(tab7wamsaflist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou7(tab7wamsaflist.get(i).getForyou7());
        mylist1.setGift7(tab7wamsaflist.get(i).getGift7());
        mylist1.setTag7(tab7wamsaflist.get(i).getTag7());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweeklysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab7wsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab7(tab7wsaflist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab8wamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab8(tab8wamlist.get(i).getTab8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyam,String.valueOf(i +1));

        }
        mylist1.setForyou8(tab8wamlist.get(i).getForyou8());
        mylist1.setGift8(tab8wamlist.get(i).getGift8());
        mylist1.setTag8(tab8wamlist.get(i).getTag8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab8wlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab8(tab8wlist.get(i).getTab8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab8wamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab8(tab8wamsaflist.get(i).getTab8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou8(tab8wamsaflist.get(i).getForyou8());
        mylist1.setGift8(tab8wamsaflist.get(i).getGift8());
        mylist1.setTag8(tab8wamsaflist.get(i).getTag8());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweeklysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab8wsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab8(tab8wsaflist.get(i).getTab8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab9wamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab9(tab9wamlist.get(i).getTab9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyam,String.valueOf(i +1));

        }
        mylist1.setForyou9(tab9wamlist.get(i).getForyou9());
        mylist1.setGift9(tab9wamlist.get(i).getGift9());
        mylist1.setTag9(tab9wamlist.get(i).getTag9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab9wlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab9(tab9wlist.get(i).getTab9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab9wamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab9(tab9wamsaflist.get(i).getTab9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou9(tab9wamsaflist.get(i).getForyou9());
        mylist1.setGift9(tab9wamsaflist.get(i).getGift9());
        mylist1.setTag9(tab9wamsaflist.get(i).getTag9());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweeklysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab9wsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab9(tab9wsaflist.get(i).getTab9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab10wamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab10(tab10wamlist.get(i).getTab10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyam,String.valueOf(i +1));

        }
        mylist1.setForyou10(tab10wamlist.get(i).getForyou10());
        mylist1.setGift10(tab10wamlist.get(i).getGift10());
        mylist1.setTag10(tab10wamlist.get(i).getTag10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab10wlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab10(tab10wlist.get(i).getTab10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab10wamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab10(tab10wamsaflist.get(i).getTab10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou10(tab10wamsaflist.get(i).getForyou10());
        mylist1.setGift10(tab10wamsaflist.get(i).getGift10());
        mylist1.setTag10(tab10wamsaflist.get(i).getTag10());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweeklysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab10wsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab10(tab10wsaflist.get(i).getTab10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

}
public void assigndata5(){

    for(int i=0;i<tab11wamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab11(tab11wamlist.get(i).getTab11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyam,String.valueOf(i +1));

        }
        mylist1.setForyou11(tab11wamlist.get(i).getForyou11());
        mylist1.setGift11(tab11wamlist.get(i).getGift11());
        mylist1.setTag11(tab11wamlist.get(i).getTag11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab11wlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab11(tab11wlist.get(i).getTab11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab11wamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab11(tab11wamsaflist.get(i).getTab11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou11(tab11wamsaflist.get(i).getForyou11());
        mylist1.setGift11(tab11wamsaflist.get(i).getGift11());
        mylist1.setTag11(tab11wamsaflist.get(i).getTag11());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweeklysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab11wsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab11(tab11wsaflist.get(i).getTab11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab12wamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab12(tab12wamlist.get(i).getTab12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyam,String.valueOf(i +1));

        }
        mylist1.setForyou12(tab12wamlist.get(i).getForyou12());
        mylist1.setGift12(tab12wamlist.get(i).getGift12());
        mylist1.setTag12(tab12wamlist.get(i).getTag12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab12wlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab12(tab12wlist.get(i).getTab12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweekly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweekly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweekly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab12wamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab12(tab12wamsaflist.get(i).getTab12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou12(tab12wamsaflist.get(i).getForyou12());
        mylist1.setGift12(tab12wamsaflist.get(i).getGift12());
        mylist1.setTag12(tab12wamsaflist.get(i).getTag12());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tableweeklysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab12wsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab12(tab12wsaflist.get(i).getTab12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tableweeklysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tableweeklysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tableweeklysaf,String.valueOf(i +1));

        }
    }
//monnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnthly
    for(int i=0;i<tab1mamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab1(tab1mamlist.get(i).getTab1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyam,String.valueOf(i +1));

        }
        mylist1.setForyou1(tab1mamlist.get(i).getForyou1());
        mylist1.setGift1(tab1mamlist.get(i).getGift1());
        mylist1.setTag1(tab1mamlist.get(i).getTag1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab1mlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab1(tab1mlist.get(i).getTab1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab1mamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab1(tab1mamsaflist.get(i).getTab1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou1(tab1mamsaflist.get(i).getForyou1());
        mylist1.setGift1(tab1mamsaflist.get(i).getGift1());
        mylist1.setTag1(tab1mamsaflist.get(i).getTag1());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthlysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab1msaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab1(tab1msaflist.get(i).getTab1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab2mamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab2(tab2mamlist.get(i).getTab2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyam,String.valueOf(i +1));

        }
        mylist1.setForyou2(tab2mamlist.get(i).getForyou2());
        mylist1.setGift2(tab2mamlist.get(i).getGift2());
        mylist1.setTag2(tab2mamlist.get(i).getTag2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab2mlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab2(tab2mlist.get(i).getTab2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab2mamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab2(tab2mamsaflist.get(i).getTab2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou2(tab2mamsaflist.get(i).getForyou2());
        mylist1.setGift2(tab2mamsaflist.get(i).getGift2());
        mylist1.setTag2(tab2mamsaflist.get(i).getTag2());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthlysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab2msaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab2(tab2msaflist.get(i).getTab2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab3mamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab3(tab3mamlist.get(i).getTab3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyam,String.valueOf(i +1));

        }
        mylist1.setForyou3(tab3mamlist.get(i).getForyou3());
        mylist1.setGift3(tab3mamlist.get(i).getGift3());
        mylist1.setTag3(tab3mamlist.get(i).getTag3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab3mlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab3(tab3mlist.get(i).getTab3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab3mamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab3(tab3mamsaflist.get(i).getTab3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou3(tab3mamsaflist.get(i).getForyou3());
        mylist1.setGift3(tab3mamsaflist.get(i).getGift3());
        mylist1.setTag3(tab3mamsaflist.get(i).getTag3());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthlysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab3msaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab3(tab3msaflist.get(i).getTab3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

}
public void assigndata6(){


    for(int i=0;i<tab4mamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab4(tab4mamlist.get(i).getTab4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyam,String.valueOf(i +1));

        }
        mylist1.setForyou4(tab4mamlist.get(i).getForyou4());
        mylist1.setGift4(tab4mamlist.get(i).getGift4());
        mylist1.setTag4(tab4mamlist.get(i).getTag4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab4mlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab4(tab4mlist.get(i).getTab4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab4mamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab4(tab4mamsaflist.get(i).getTab4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou4(tab4mamsaflist.get(i).getForyou4());
        mylist1.setGift4(tab4mamsaflist.get(i).getGift4());
        mylist1.setTag4(tab4mamsaflist.get(i).getTag4());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthlysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab4msaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab4(tab4msaflist.get(i).getTab4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab5mamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab5(tab5mamlist.get(i).getTab5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyam,String.valueOf(i +1));

        }
        mylist1.setForyou5(tab5mamlist.get(i).getForyou5());
        mylist1.setGift5(tab5mamlist.get(i).getGift5());
        mylist1.setTag5(tab5mamlist.get(i).getTag5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab5mlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab5(tab5mlist.get(i).getTab5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab5mamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab5(tab5mamsaflist.get(i).getTab5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou5(tab5mamsaflist.get(i).getForyou5());
        mylist1.setGift5(tab5mamsaflist.get(i).getGift5());
        mylist1.setTag5(tab5mamsaflist.get(i).getTag5());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthlysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab5msaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab5(tab5msaflist.get(i).getTab5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab6mamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab6(tab6mamlist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyam,String.valueOf(i +1));

        }
        mylist1.setForyou6(tab6mamlist.get(i).getForyou6());
        mylist1.setGift6(tab6mamlist.get(i).getGift6());
        mylist1.setTag6(tab6mamlist.get(i).getTag6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab6mlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab6(tab6mlist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab6mamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab6(tab6mamsaflist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou6(tab6mamsaflist.get(i).getForyou6());
        mylist1.setGift6(tab6mamsaflist.get(i).getGift6());
        mylist1.setTag6(tab6mamsaflist.get(i).getTag6());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthlysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab6msaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab6(tab6msaflist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab7mamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab7(tab7mamlist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyam,String.valueOf(i +1));

        }
        mylist1.setForyou7(tab7mamlist.get(i).getForyou7());
        mylist1.setGift7(tab7mamlist.get(i).getGift7());
        mylist1.setTag7(tab7mamlist.get(i).getTag7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab7mlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab7(tab7mlist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab7mamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab7(tab7mamsaflist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou7(tab7mamsaflist.get(i).getForyou7());
        mylist1.setGift7(tab7mamsaflist.get(i).getGift7());
        mylist1.setTag7(tab7mamsaflist.get(i).getTag7());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthlysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab7msaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab7(tab7msaflist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab8mamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab8(tab8mamlist.get(i).getTab8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyam,String.valueOf(i +1));

        }
        mylist1.setForyou8(tab8mamlist.get(i).getForyou8());
        mylist1.setGift8(tab8mamlist.get(i).getGift8());
        mylist1.setTag8(tab8mamlist.get(i).getTag8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab8mlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab8(tab8mlist.get(i).getTab8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab8mamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab8(tab8mamsaflist.get(i).getTab8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou8(tab8mamsaflist.get(i).getForyou8());
        mylist1.setGift8(tab8mamsaflist.get(i).getGift8());
        mylist1.setTag8(tab8mamsaflist.get(i).getTag8());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthlysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab8msaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab8(tab8msaflist.get(i).getTab8());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab9mamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab9(tab9mamlist.get(i).getTab9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyam,String.valueOf(i +1));

        }
        mylist1.setForyou9(tab9mamlist.get(i).getForyou9());
        mylist1.setGift9(tab9mamlist.get(i).getGift9());
        mylist1.setTag9(tab9mamlist.get(i).getTag9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }

    }
}

public void assigndata7(){

    for(int i=0;i<tab9mlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab9(tab9mlist.get(i).getTab9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab9mamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab9(tab9mamsaflist.get(i).getTab9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou9(tab9mamsaflist.get(i).getForyou9());
        mylist1.setGift9(tab9mamsaflist.get(i).getGift9());
        mylist1.setTag9(tab9mamsaflist.get(i).getTag9());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthlysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab9msaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab9(tab9msaflist.get(i).getTab9());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab10mamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab10(tab10mamlist.get(i).getTab10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyam,String.valueOf(i +1));

        }
        mylist1.setForyou10(tab10mamlist.get(i).getForyou10());
        mylist1.setGift10(tab10mamlist.get(i).getGift10());
        mylist1.setTag10(tab10mamlist.get(i).getTag10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab10mlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab10(tab10mlist.get(i).getTab10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab10mamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab10(tab10mamsaflist.get(i).getTab10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou10(tab10mamsaflist.get(i).getForyou10());
        mylist1.setGift10(tab10mamsaflist.get(i).getGift10());
        mylist1.setTag10(tab10mamsaflist.get(i).getTag10());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthlysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab10msaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab10(tab10msaflist.get(i).getTab10());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab11mamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab11(tab11mamlist.get(i).getTab11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyam,String.valueOf(i +1));

        }
        mylist1.setForyou11(tab11mamlist.get(i).getForyou11());
        mylist1.setGift11(tab11mamlist.get(i).getGift11());
        mylist1.setTag11(tab11mamlist.get(i).getTag11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab11mlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab11(tab11mlist.get(i).getTab11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab11mamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab11(tab11mamsaflist.get(i).getTab11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou11(tab11mamsaflist.get(i).getForyou11());
        mylist1.setGift11(tab11mamsaflist.get(i).getGift11());
        mylist1.setTag11(tab11mamsaflist.get(i).getTag11());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthlysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab11msaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab11(tab11msaflist.get(i).getTab11());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab12mamlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab12(tab12mamlist.get(i).getTab12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyam,String.valueOf(i +1));

        }
        mylist1.setForyou12(tab12mamlist.get(i).getForyou12());
        mylist1.setGift12(tab12mamlist.get(i).getGift12());
        mylist1.setTag12(tab12mamlist.get(i).getTag12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab12mlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab12(tab12mlist.get(i).getTab12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthly)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthly);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthly,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab12mamsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab12(tab12mamsaflist.get(i).getTab12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlyamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlyamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou12(tab12mamsaflist.get(i).getForyou12());
        mylist1.setGift12(tab12mamsaflist.get(i).getGift12());
        mylist1.setTag12(tab12mamsaflist.get(i).getTag12());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablemonthlysaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab12msaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab12(tab12msaflist.get(i).getTab12());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablemonthlysaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablemonthlysaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablemonthlysaf,String.valueOf(i +1));

        }
    }
    for(int i=0;i<tab1namlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab1(tab1namlist.get(i).getTab1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightam,String.valueOf(i +1));

        }
        mylist1.setForyou1(tab1namlist.get(i).getForyou1());
        mylist1.setGift1(tab1namlist.get(i).getGift1());
        mylist1.setTag1(tab1namlist.get(i).getTag1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab1nlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab1(tab1nlist.get(i).getTab1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab1namsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab1(tab1namsaflist.get(i).getTab1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou1(tab1namsaflist.get(i).getForyou1());
        mylist1.setGift1(tab1namsaflist.get(i).getGift1());
        mylist1.setTag1(tab1namsaflist.get(i).getTag1());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenightsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab1nsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab1(tab1nsaflist.get(i).getTab1());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightsaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab2namlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab2(tab2namlist.get(i).getTab2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightam,String.valueOf(i +1));

        }
        mylist1.setForyou2(tab2namlist.get(i).getForyou2());
        mylist1.setGift2(tab2namlist.get(i).getGift2());
        mylist1.setTag2(tab2namlist.get(i).getTag2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }

    }
}

public void assigndata8(){

    for(int i=0;i<tab2nlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab2(tab2nlist.get(i).getTab2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab2namsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab2(tab2namsaflist.get(i).getTab2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou2(tab2namsaflist.get(i).getForyou2());
        mylist1.setGift2(tab2namsaflist.get(i).getGift2());
        mylist1.setTag2(tab2namsaflist.get(i).getTag2());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenightsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab2nsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab2(tab2nsaflist.get(i).getTab2());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightsaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab3namlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab3(tab3namlist.get(i).getTab3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightam,String.valueOf(i +1));

        }
        mylist1.setForyou3(tab3namlist.get(i).getForyou3());
        mylist1.setGift3(tab3namlist.get(i).getGift3());
        mylist1.setTag3(tab3namlist.get(i).getTag3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab3nlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab3(tab3nlist.get(i).getTab3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab3namsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab3(tab3namsaflist.get(i).getTab3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou3(tab3namsaflist.get(i).getForyou3());
        mylist1.setGift3(tab3namsaflist.get(i).getGift3());
        mylist1.setTag3(tab3namsaflist.get(i).getTag3());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenightsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab3nsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab3(tab3nsaflist.get(i).getTab3());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightsaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab4namlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab4(tab4namlist.get(i).getTab4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightam,String.valueOf(i +1));

        }
        mylist1.setForyou4(tab4namlist.get(i).getForyou4());
        mylist1.setGift4(tab4namlist.get(i).getGift4());
        mylist1.setTag4(tab4namlist.get(i).getTag4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab4nlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab4(tab4nlist.get(i).getTab4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab4namsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab4(tab4namsaflist.get(i).getTab4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou4(tab4namsaflist.get(i).getForyou4());
        mylist1.setGift4(tab4namsaflist.get(i).getGift4());
        mylist1.setTag4(tab4namsaflist.get(i).getTag4());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenightsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab4nsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab4(tab4nsaflist.get(i).getTab4());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightsaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab5namlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab5(tab5namlist.get(i).getTab5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightam,String.valueOf(i +1));

        }
        mylist1.setForyou5(tab5namlist.get(i).getForyou5());
        mylist1.setGift5(tab5namlist.get(i).getGift5());
        mylist1.setTag5(tab5namlist.get(i).getTag5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab5nlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab5(tab5nlist.get(i).getTab5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab5namsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab5(tab5namsaflist.get(i).getTab5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou5(tab5namsaflist.get(i).getForyou5());
        mylist1.setGift5(tab5namsaflist.get(i).getGift5());
        mylist1.setTag5(tab5namsaflist.get(i).getTag5());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenightsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab5nsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab5(tab5nsaflist.get(i).getTab5());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightsaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab6namlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab6(tab6namlist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightam,String.valueOf(i +1));

        }
        mylist1.setForyou6(tab6namlist.get(i).getForyou6());
        mylist1.setGift6(tab6namlist.get(i).getGift6());
        mylist1.setTag6(tab6namlist.get(i).getTag6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }

    }

    for(int i=0;i<tab6nlist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab6(tab6nlist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab6namsaflist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab6(tab6namsaflist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightamsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightamsaf,String.valueOf(i +1));

        }
        mylist1.setForyou6(tab6namsaflist.get(i).getForyou6());
        mylist1.setGift6(tab6namsaflist.get(i).getGift6());
        mylist1.setTag6(tab6namsaflist.get(i).getTag6());

        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenightsaf);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

        }
    }

    for(int i=0;i<tab6nsaflist.size();i++){
        MyListData mylist=new MyListData();
        mylist.setTab6(tab6nsaflist.get(i).getTab6());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightsaf);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

        }
    }


    for(int i=0;i<tab7namlist.size();i++){
        MyListData mylist=new MyListData(),mylist1=new MyListData();
        mylist.setTab7(tab7namlist.get(i).getTab7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

            loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightam);

        }else{

            loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightam,String.valueOf(i +1));

        }
        mylist1.setForyou7(tab7namlist.get(i).getForyou7());
        mylist1.setGift7(tab7namlist.get(i).getGift7());
        mylist1.setTag7(tab7namlist.get(i).getTag7());
        if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

            loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenight);

        }else{
            loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

        }

    }
}
    public void assigndata9(){

        for(int i=0;i<tab7nlist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab7(tab7nlist.get(i).getTab7());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenight);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab7namsaflist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab7(tab7namsaflist.get(i).getTab7());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightamsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightamsaf,String.valueOf(i +1));

            }
            mylist1.setForyou7(tab7namsaflist.get(i).getForyou7());
            mylist1.setGift7(tab7namsaflist.get(i).getGift7());
            mylist1.setTag7(tab7namsaflist.get(i).getTag7());

            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenightsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab7nsaflist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab7(tab7nsaflist.get(i).getTab7());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightsaf);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab8namlist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab8(tab8namlist.get(i).getTab8());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightam);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightam,String.valueOf(i +1));

            }
            mylist1.setForyou8(tab8namlist.get(i).getForyou8());
            mylist1.setGift8(tab8namlist.get(i).getGift8());
            mylist1.setTag8(tab8namlist.get(i).getTag8());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenight);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

            }

        }

        for(int i=0;i<tab8nlist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab8(tab8nlist.get(i).getTab8());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenight);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab8namsaflist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab8(tab8namsaflist.get(i).getTab8());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightamsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightamsaf,String.valueOf(i +1));

            }
            mylist1.setForyou8(tab8namsaflist.get(i).getForyou8());
            mylist1.setGift8(tab8namsaflist.get(i).getGift8());
            mylist1.setTag8(tab8namsaflist.get(i).getTag8());

            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenightsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab8nsaflist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab8(tab8nsaflist.get(i).getTab8());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightsaf);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab9namlist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab9(tab9namlist.get(i).getTab9());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightam);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightam,String.valueOf(i +1));

            }
            mylist1.setForyou9(tab9namlist.get(i).getForyou9());
            mylist1.setGift9(tab9namlist.get(i).getGift9());
            mylist1.setTag9(tab9namlist.get(i).getTag9());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenight);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

            }

        }

        for(int i=0;i<tab9nlist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab9(tab9nlist.get(i).getTab9());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenight);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab9namsaflist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab9(tab9namsaflist.get(i).getTab9());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightamsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightamsaf,String.valueOf(i +1));

            }
            mylist1.setForyou9(tab9namsaflist.get(i).getForyou9());
            mylist1.setGift9(tab9namsaflist.get(i).getGift9());
            mylist1.setTag9(tab9namsaflist.get(i).getTag9());

            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenightsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab9nsaflist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab9(tab9nsaflist.get(i).getTab9());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightsaf);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab10namlist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab10(tab10namlist.get(i).getTab10());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightam);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightam,String.valueOf(i +1));

            }
            mylist1.setForyou10(tab10namlist.get(i).getForyou10());
            mylist1.setGift10(tab10namlist.get(i).getGift10());
            mylist1.setTag10(tab10namlist.get(i).getTag10());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenight);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

            }

        }

        for(int i=0;i<tab10nlist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab10(tab10nlist.get(i).getTab10());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenight);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab10namsaflist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab10(tab10namsaflist.get(i).getTab10());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightamsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightamsaf,String.valueOf(i +1));

            }
            mylist1.setForyou10(tab10namsaflist.get(i).getForyou10());
            mylist1.setGift10(tab10namsaflist.get(i).getGift10());
            mylist1.setTag10(tab10namsaflist.get(i).getTag10());

            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenightsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab10nsaflist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab10(tab10nsaflist.get(i).getTab10());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightsaf);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab11namlist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab11(tab11namlist.get(i).getTab11());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightam);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightam,String.valueOf(i +1));

            }
            mylist1.setForyou11(tab11namlist.get(i).getForyou11());
            mylist1.setGift11(tab11namlist.get(i).getGift11());
            mylist1.setTag11(tab11namlist.get(i).getTag11());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenight);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

            }

        }

        for(int i=0;i<tab11nlist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab11(tab11nlist.get(i).getTab11());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenight);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab11namsaflist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab11(tab11namsaflist.get(i).getTab11());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightamsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightamsaf,String.valueOf(i +1));

            }
            mylist1.setForyou11(tab11namsaflist.get(i).getForyou11());
            mylist1.setGift11(tab11namsaflist.get(i).getGift11());
            mylist1.setTag11(tab11namsaflist.get(i).getTag11());

            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenightsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab11nsaflist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab11(tab11nsaflist.get(i).getTab11());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightsaf);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab12namlist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab12(tab12namlist.get(i).getTab12());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightam)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightam);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightam,String.valueOf(i +1));

            }
            mylist1.setForyou12(tab12namlist.get(i).getForyou12());
            mylist1.setGift12(tab12namlist.get(i).getGift12());
            mylist1.setTag12(tab12namlist.get(i).getTag12());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenight);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

            }

        }

        for(int i=0;i<tab12nlist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab12(tab12nlist.get(i).getTab12());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenight)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenight);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenight,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab12namsaflist.size();i++){
            MyListData mylist=new MyListData(),mylist1=new MyListData();
            mylist.setTab12(tab12namsaflist.get(i).getTab12());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightamsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightamsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightamsaf,String.valueOf(i +1));

            }
            mylist1.setForyou12(tab12namsaflist.get(i).getForyou12());
            mylist1.setGift12(tab12namsaflist.get(i).getGift12());
            mylist1.setTag12(tab12namsaflist.get(i).getTag12());

            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

                loginDataBaseAdapter.inserttotable(mylist1, loginDataBaseAdapter.tablenightsaf);

            }else{
                loginDataBaseAdapter.updatetotable(mylist1, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

            }
        }

        for(int i=0;i<tab12nsaflist.size();i++){
            MyListData mylist=new MyListData();
            mylist.setTab12(tab12nsaflist.get(i).getTab12());
            if(i>=loginDataBaseAdapter.getdatasize(loginDataBaseAdapter.tablenightsaf)) {

                loginDataBaseAdapter.inserttotable(mylist, loginDataBaseAdapter.tablenightsaf);

            }else{

                loginDataBaseAdapter.updatetotable(mylist, loginDataBaseAdapter.tablenightsaf,String.valueOf(i +1));

            }
        }

    }
    public void assigndata(){


        loginDataBaseAdapter.settabname(Tab1list,""+String.valueOf(1),loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.settabname(Tabam1list,""+1,loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.settabname(Tabsaf1list,""+String.valueOf(1),loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.settabname(Tabsafam1list,""+1,loginDataBaseAdapter.tabnamesafam);

        loginDataBaseAdapter.settabname(Tab2list,""+String.valueOf(2),loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.settabname(Tabam2list,""+2,loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.settabname(Tabsaf2list,""+String.valueOf(2),loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.settabname(Tabsafam2list,""+2,loginDataBaseAdapter.tabnamesafam);

        loginDataBaseAdapter.settabname(Tab3list,""+String.valueOf(3),loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.settabname(Tabam3list,""+3,loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.settabname(Tabsaf3list,""+String.valueOf(3),loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.settabname(Tabsafam3list,""+3,loginDataBaseAdapter.tabnamesafam);

        loginDataBaseAdapter.settabname(Tab4list,""+String.valueOf(4),loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.settabname(Tabam4list,""+4,loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.settabname(Tabsaf4list,""+String.valueOf(4),loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.settabname(Tabsafam4list,""+4,loginDataBaseAdapter.tabnamesafam);

        loginDataBaseAdapter.settabname(Tab5list,""+String.valueOf(5),loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.settabname(Tabam5list,""+5,loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.settabname(Tabsaf5list,""+String.valueOf(5),loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.settabname(Tabsafam5list,""+5,loginDataBaseAdapter.tabnamesafam);

        loginDataBaseAdapter.settabname(Tab6list,""+String.valueOf(6),loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.settabname(Tabam6list,""+6,loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.settabname(Tabsaf6list,""+String.valueOf(6),loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.settabname(Tabsafam6list,""+6,loginDataBaseAdapter.tabnamesafam);

        loginDataBaseAdapter.settabname(Tab7list,""+String.valueOf(7),loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.settabname(Tabam7list,""+7,loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.settabname(Tabsaf7list,""+String.valueOf(7),loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.settabname(Tabsafam7list,""+7,loginDataBaseAdapter.tabnamesafam);

        loginDataBaseAdapter.settabname(Tab8list,""+String.valueOf(8),loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.settabname(Tabam8list,""+8,loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.settabname(Tabsaf8list,""+String.valueOf(8),loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.settabname(Tabsafam8list,""+8,loginDataBaseAdapter.tabnamesafam);

        loginDataBaseAdapter.settabname(Tab9list,""+String.valueOf(9),loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.settabname(Tabam9list,""+9,loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.settabname(Tabsaf9list,""+String.valueOf(9),loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.settabname(Tabsafam9list,""+9,loginDataBaseAdapter.tabnamesafam);

        loginDataBaseAdapter.settabname(Tab10list,""+String.valueOf(10),loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.settabname(Tabam10list,""+10,loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.settabname(Tabsaf10list,""+String.valueOf(10),loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.settabname(Tabsafam10list,""+10,loginDataBaseAdapter.tabnamesafam);

        loginDataBaseAdapter.settabname(Tab11list,""+String.valueOf(11),loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.settabname(Tabam11list,""+11,loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.settabname(Tabsaf11list,""+String.valueOf(11),loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.settabname(Tabsafam11list,""+11,loginDataBaseAdapter.tabnamesafam);

        loginDataBaseAdapter.settabname(Tab12list,""+String.valueOf(12),loginDataBaseAdapter.tabnameet);
        loginDataBaseAdapter.settabname(Tabam12list,""+12,loginDataBaseAdapter.tabnameetam);
        loginDataBaseAdapter.settabname(Tabsaf12list,""+String.valueOf(12),loginDataBaseAdapter.tabnamesaf);
        loginDataBaseAdapter.settabname(Tabsafam12list,""+12,loginDataBaseAdapter.tabnamesafam);

        //setsubtaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab
        loginDataBaseAdapter.setsubtab(Tab1sub1list,String.valueOf(1),String.valueOf(1),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam1sub1list,String.valueOf(1),String.valueOf(1),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf1sub1list,String.valueOf(1),String.valueOf(1),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam1sub1list,String.valueOf(1),String.valueOf(1),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab1sub2list,String.valueOf(1),String.valueOf(2),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam1sub2list,String.valueOf(1),String.valueOf(2),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf1sub2list,String.valueOf(1),String.valueOf(2),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam1sub2list,String.valueOf(1),String.valueOf(2),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab1sub3list,String.valueOf(1),String.valueOf(3),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam1sub3list,String.valueOf(1),String.valueOf(3),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf1sub3list,String.valueOf(1),String.valueOf(3),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam1sub3list,String.valueOf(1),String.valueOf(3),loginDataBaseAdapter.subtabsafam);


        loginDataBaseAdapter.setsubtab(Tab1sub4list,String.valueOf(1),String.valueOf(4),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam1sub4list,String.valueOf(1),String.valueOf(4),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf1sub4list,String.valueOf(1),String.valueOf(4),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam1sub4list,String.valueOf(1),String.valueOf(4),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab2sub1list,String.valueOf(2),String.valueOf(1),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam2sub1list,String.valueOf(2),String.valueOf(1),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf2sub1list,String.valueOf(2),String.valueOf(1),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam2sub1list,String.valueOf(2),String.valueOf(1),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab2sub2list,String.valueOf(2),String.valueOf(2),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam2sub2list,String.valueOf(2),String.valueOf(2),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf2sub2list,String.valueOf(2),String.valueOf(2),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam2sub2list,String.valueOf(2),String.valueOf(2),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab2sub3list,String.valueOf(2),String.valueOf(3),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam2sub3list,String.valueOf(2),String.valueOf(3),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf2sub3list,String.valueOf(2),String.valueOf(3),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam2sub3list,String.valueOf(2),String.valueOf(3),loginDataBaseAdapter.subtabsafam);


        loginDataBaseAdapter.setsubtab(Tab2sub4list,String.valueOf(2),String.valueOf(4),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam2sub4list,String.valueOf(2),String.valueOf(4),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf2sub4list,String.valueOf(2),String.valueOf(4),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam2sub4list,String.valueOf(2),String.valueOf(4),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab3sub1list,String.valueOf(3),String.valueOf(1),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam3sub1list,String.valueOf(3),String.valueOf(1),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf3sub1list,String.valueOf(3),String.valueOf(1),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam3sub1list,String.valueOf(3),String.valueOf(1),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab3sub2list,String.valueOf(3),String.valueOf(2),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam3sub2list,String.valueOf(3),String.valueOf(2),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf3sub2list,String.valueOf(3),String.valueOf(2),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam3sub2list,String.valueOf(3),String.valueOf(2),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab3sub3list,String.valueOf(3),String.valueOf(3),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam3sub3list,String.valueOf(3),String.valueOf(3),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf3sub3list,String.valueOf(3),String.valueOf(3),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam3sub3list,String.valueOf(3),String.valueOf(3),loginDataBaseAdapter.subtabsafam);


        loginDataBaseAdapter.setsubtab(Tab3sub4list,String.valueOf(3),String.valueOf(4),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam3sub4list,String.valueOf(3),String.valueOf(4),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf3sub4list,String.valueOf(3),String.valueOf(4),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam3sub4list,String.valueOf(3),String.valueOf(4),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab4sub1list,String.valueOf(4),String.valueOf(1),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam4sub1list,String.valueOf(4),String.valueOf(1),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf4sub1list,String.valueOf(4),String.valueOf(1),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam4sub1list,String.valueOf(4),String.valueOf(1),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab4sub2list,String.valueOf(4),String.valueOf(2),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam4sub2list,String.valueOf(4),String.valueOf(2),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf4sub2list,String.valueOf(4),String.valueOf(2),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam4sub2list,String.valueOf(4),String.valueOf(2),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab4sub3list,String.valueOf(4),String.valueOf(3),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam4sub3list,String.valueOf(4),String.valueOf(3),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf4sub3list,String.valueOf(4),String.valueOf(3),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam4sub3list,String.valueOf(4),String.valueOf(3),loginDataBaseAdapter.subtabsafam);


        loginDataBaseAdapter.setsubtab(Tab4sub4list,String.valueOf(4),String.valueOf(4),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam4sub4list,String.valueOf(4),String.valueOf(4),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf4sub4list,String.valueOf(4),String.valueOf(4),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam4sub4list,String.valueOf(4),String.valueOf(4),loginDataBaseAdapter.subtabsafam);


        loginDataBaseAdapter.setsubtab(Tab5sub1list,String.valueOf(5),String.valueOf(1),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam5sub1list,String.valueOf(5),String.valueOf(1),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf5sub1list,String.valueOf(5),String.valueOf(1),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam5sub1list,String.valueOf(5),String.valueOf(1),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab5sub2list,String.valueOf(5),String.valueOf(2),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam5sub2list,String.valueOf(5),String.valueOf(2),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf5sub2list,String.valueOf(5),String.valueOf(2),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam5sub2list,String.valueOf(5),String.valueOf(2),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab5sub3list,String.valueOf(5),String.valueOf(3),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam5sub3list,String.valueOf(5),String.valueOf(3),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf5sub3list,String.valueOf(5),String.valueOf(3),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam5sub3list,String.valueOf(5),String.valueOf(3),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab5sub4list,String.valueOf(5),String.valueOf(4),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam5sub4list,String.valueOf(5),String.valueOf(4),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf5sub4list,String.valueOf(5),String.valueOf(4),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam5sub4list,String.valueOf(5),String.valueOf(4),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab6sub1list,String.valueOf(6),String.valueOf(1),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam6sub1list,String.valueOf(6),String.valueOf(1),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf6sub1list,String.valueOf(6),String.valueOf(1),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam6sub1list,String.valueOf(6),String.valueOf(1),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab6sub2list,String.valueOf(6),String.valueOf(2),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam6sub2list,String.valueOf(6),String.valueOf(2),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf6sub2list,String.valueOf(6),String.valueOf(2),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam6sub2list,String.valueOf(6),String.valueOf(2),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab6sub3list,String.valueOf(6),String.valueOf(3),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam6sub3list,String.valueOf(6),String.valueOf(3),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf6sub3list,String.valueOf(6),String.valueOf(3),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam6sub3list,String.valueOf(6),String.valueOf(3),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab6sub4list,String.valueOf(6),String.valueOf(4),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam6sub4list,String.valueOf(6),String.valueOf(4),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf6sub4list,String.valueOf(6),String.valueOf(4),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam6sub4list,String.valueOf(6),String.valueOf(4),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab7sub1list,String.valueOf(7),String.valueOf(1),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam7sub1list,String.valueOf(7),String.valueOf(1),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf7sub1list,String.valueOf(7),String.valueOf(1),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam7sub1list,String.valueOf(7),String.valueOf(1),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab7sub2list,String.valueOf(7),String.valueOf(2),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam7sub2list,String.valueOf(7),String.valueOf(2),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf7sub2list,String.valueOf(7),String.valueOf(2),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam7sub2list,String.valueOf(7),String.valueOf(2),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab7sub3list,String.valueOf(7),String.valueOf(3),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam7sub3list,String.valueOf(7),String.valueOf(3),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf7sub3list,String.valueOf(7),String.valueOf(3),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam7sub3list,String.valueOf(7),String.valueOf(3),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab7sub4list,String.valueOf(7),String.valueOf(4),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam7sub4list,String.valueOf(7),String.valueOf(4),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf7sub4list,String.valueOf(7),String.valueOf(4),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam7sub4list,String.valueOf(7),String.valueOf(4),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab8sub1list,String.valueOf(8),String.valueOf(1),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam8sub1list,String.valueOf(8),String.valueOf(1),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf8sub1list,String.valueOf(8),String.valueOf(1),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam8sub1list,String.valueOf(8),String.valueOf(1),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab8sub2list,String.valueOf(8),String.valueOf(2),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam8sub2list,String.valueOf(8),String.valueOf(2),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf8sub2list,String.valueOf(8),String.valueOf(2),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam8sub2list,String.valueOf(8),String.valueOf(2),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab8sub3list,String.valueOf(8),String.valueOf(3),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam8sub3list,String.valueOf(8),String.valueOf(3),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf8sub3list,String.valueOf(8),String.valueOf(3),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam8sub3list,String.valueOf(8),String.valueOf(3),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab8sub4list,String.valueOf(8),String.valueOf(4),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam8sub4list,String.valueOf(8),String.valueOf(4),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf8sub4list,String.valueOf(8),String.valueOf(4),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam8sub4list,String.valueOf(8),String.valueOf(4),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab9sub1list,String.valueOf(9),String.valueOf(1),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam9sub1list,String.valueOf(9),String.valueOf(1),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf9sub1list,String.valueOf(9),String.valueOf(1),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam9sub1list,String.valueOf(9),String.valueOf(1),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab9sub2list,String.valueOf(9),String.valueOf(2),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam9sub2list,String.valueOf(9),String.valueOf(2),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf9sub2list,String.valueOf(9),String.valueOf(2),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam9sub2list,String.valueOf(9),String.valueOf(2),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab9sub3list,String.valueOf(9),String.valueOf(3),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam9sub3list,String.valueOf(9),String.valueOf(3),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf9sub3list,String.valueOf(9),String.valueOf(3),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam9sub3list,String.valueOf(9),String.valueOf(3),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab9sub4list,String.valueOf(9),String.valueOf(4),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam9sub4list,String.valueOf(9),String.valueOf(4),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf9sub4list,String.valueOf(9),String.valueOf(4),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam9sub4list,String.valueOf(9),String.valueOf(4),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab10sub1list,String.valueOf(10),String.valueOf(1),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam10sub1list,String.valueOf(10),String.valueOf(1),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf10sub1list,String.valueOf(10),String.valueOf(1),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam10sub1list,String.valueOf(10),String.valueOf(1),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab10sub2list,String.valueOf(10),String.valueOf(2),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam10sub2list,String.valueOf(10),String.valueOf(2),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf10sub2list,String.valueOf(10),String.valueOf(2),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam10sub2list,String.valueOf(10),String.valueOf(2),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab10sub3list,String.valueOf(10),String.valueOf(3),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam10sub3list,String.valueOf(10),String.valueOf(3),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf10sub3list,String.valueOf(10),String.valueOf(3),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam10sub3list,String.valueOf(10),String.valueOf(3),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab10sub4list,String.valueOf(10),String.valueOf(4),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam10sub4list,String.valueOf(10),String.valueOf(4),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf10sub4list,String.valueOf(10),String.valueOf(4),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam10sub4list,String.valueOf(10),String.valueOf(4),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab11sub1list,String.valueOf(11),String.valueOf(1),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam11sub1list,String.valueOf(11),String.valueOf(1),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf11sub1list,String.valueOf(11),String.valueOf(1),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam11sub1list,String.valueOf(11),String.valueOf(1),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab11sub2list,String.valueOf(11),String.valueOf(2),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam11sub2list,String.valueOf(11),String.valueOf(2),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf11sub2list,String.valueOf(11),String.valueOf(2),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam11sub2list,String.valueOf(11),String.valueOf(2),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab11sub3list,String.valueOf(11),String.valueOf(3),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam11sub3list,String.valueOf(11),String.valueOf(3),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf11sub3list,String.valueOf(11),String.valueOf(3),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam11sub3list,String.valueOf(11),String.valueOf(3),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab11sub4list,String.valueOf(11),String.valueOf(4),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam11sub4list,String.valueOf(11),String.valueOf(4),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf11sub4list,String.valueOf(11),String.valueOf(4),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam11sub4list,String.valueOf(11),String.valueOf(4),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab12sub1list,String.valueOf(12),String.valueOf(1),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam12sub1list,String.valueOf(12),String.valueOf(1),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf12sub1list,String.valueOf(12),String.valueOf(1),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam12sub1list,String.valueOf(12),String.valueOf(1),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab12sub2list,String.valueOf(12),String.valueOf(2),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam12sub2list,String.valueOf(12),String.valueOf(2),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf12sub2list,String.valueOf(12),String.valueOf(2),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam12sub2list,String.valueOf(12),String.valueOf(2),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab12sub3list,String.valueOf(12),String.valueOf(3),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam12sub3list,String.valueOf(12),String.valueOf(3),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf12sub3list,String.valueOf(12),String.valueOf(3),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam12sub3list,String.valueOf(12),String.valueOf(3),loginDataBaseAdapter.subtabsafam);

        loginDataBaseAdapter.setsubtab(Tab12sub4list,String.valueOf(12),String.valueOf(4),loginDataBaseAdapter.subtabet);
        loginDataBaseAdapter.setsubtab(Tabam12sub4list,String.valueOf(12),String.valueOf(4),loginDataBaseAdapter.subtabetam);
        loginDataBaseAdapter.setsubtab(Tabsaf12sub4list,String.valueOf(12),String.valueOf(4),loginDataBaseAdapter.subtabsaf);
        loginDataBaseAdapter.setsubtab(Tabsafam12sub4list,String.valueOf(12),String.valueOf(4),loginDataBaseAdapter.subtabsafam);

    }


    class loaddata extends AsyncTask<String, String, String> {

        String status="";

        public loaddata(){

        }
        @Override
        protected String doInBackground(String... params) {

            assigndata();
            return status;
        }

        @Override
        protected void onProgressUpdate(String... values) {
            super.onProgressUpdate(values);

        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
           loadinc=loadinc+1;
            textView.setText(String.valueOf(loadinc));

            if(loadinc==10){
            Toast.makeText(getApplicationContext(),"finished", Toast.LENGTH_SHORT).show();
           }
        }

    }

    class loaddata1 extends AsyncTask<String, String, String> {

        String status="";

        public loaddata1(){

        }
        @Override
        protected String doInBackground(String... params) {

            assigndata1();
            return status;
        }

        @Override
        protected void onProgressUpdate(String... values) {
            super.onProgressUpdate(values);

        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
            loadinc=loadinc+1;
            textView.setText(String.valueOf(loadinc));
            if(loadinc==10){
                Toast.makeText(getApplicationContext(),"finished", Toast.LENGTH_SHORT).show();
            }
        }

    }

    class loaddata2 extends AsyncTask<String, String, String> {

        String status="";

        public loaddata2(){

        }
        @Override
        protected String doInBackground(String... params) {

            assigndata2();
            return status;
        }

        @Override
        protected void onProgressUpdate(String... values) {
            super.onProgressUpdate(values);

        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
            loadinc=loadinc+1;
            textView.setText(String.valueOf(loadinc));
            if(loadinc==10){
                Toast.makeText(getApplicationContext(),"finished", Toast.LENGTH_SHORT).show();
            }
        }

    }

    class loaddata3 extends AsyncTask<String, String, String> {

        String status="";

        public loaddata3(){

        }
        @Override
        protected String doInBackground(String... params) {

            assigndata3();
            return status;
        }

        @Override
        protected void onProgressUpdate(String... values) {
            super.onProgressUpdate(values);

        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
            loadinc=loadinc+1;            textView.setText(String.valueOf(loadinc));

            if(loadinc==10){
                Toast.makeText(getApplicationContext(),"finished", Toast.LENGTH_SHORT).show();
            }
        }

    }
    class loaddata4 extends AsyncTask<String, String, String> {

        String status="";

        public loaddata4(){

        }
        @Override
        protected String doInBackground(String... params) {

            assigndata4();
            return status;
        }

        @Override
        protected void onProgressUpdate(String... values) {
            super.onProgressUpdate(values);

        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
            loadinc=loadinc+1;            textView.setText(String.valueOf(loadinc));

            if(loadinc==10){
                Toast.makeText(getApplicationContext(),"finished", Toast.LENGTH_SHORT).show();
            }
        }

    }

    class loaddata5 extends AsyncTask<String, String, String> {

        String status="";

        public loaddata5(){

        }
        @Override
        protected String doInBackground(String... params) {

            assigndata5();

            return status;
        }

        @Override
        protected void onProgressUpdate(String... values) {
            super.onProgressUpdate(values);

        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
            loadinc=loadinc+1;            textView.setText(String.valueOf(loadinc));

            if(loadinc==10){
                Toast.makeText(getApplicationContext(),"finished", Toast.LENGTH_SHORT).show();
            }
        }

    }
    class loaddata6 extends AsyncTask<String, String, String> {

        String status="";

        public loaddata6(){

        }
        @Override
        protected String doInBackground(String... params) {

            assigndata6();
            return status;
        }

        @Override
        protected void onProgressUpdate(String... values) {
            super.onProgressUpdate(values);

        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
            loadinc=loadinc+1;            textView.setText(String.valueOf(loadinc));

            if(loadinc==10){
                Toast.makeText(getApplicationContext(),"finished", Toast.LENGTH_SHORT).show();
            }
        }

    }

    class loaddata7 extends AsyncTask<String, String, String> {

        String status="";

        public loaddata7(){

        }
        @Override
        protected String doInBackground(String... params) {

            assigndata7();
            return status;
        }

        @Override
        protected void onProgressUpdate(String... values) {
            super.onProgressUpdate(values);

        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
            loadinc=loadinc+1;            textView.setText(String.valueOf(loadinc));

            if(loadinc==10){
                Toast.makeText(getApplicationContext(),"finished", Toast.LENGTH_SHORT).show();
            }
        }

    }
    class loaddata8 extends AsyncTask<String, String, String> {

        String status="";

        public loaddata8(){

        }
        @Override
        protected String doInBackground(String... params) {

            assigndata8();
            return status;
        }

        @Override
        protected void onProgressUpdate(String... values) {
            super.onProgressUpdate(values);

        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
            loadinc=loadinc+1;            textView.setText(String.valueOf(loadinc));

            if(loadinc==10){
                Toast.makeText(getApplicationContext(),"finished", Toast.LENGTH_SHORT).show();
            }
        }

    }

    class loaddata9 extends AsyncTask<String, String, String> {

        String status="";

        public loaddata9(){

        }
        @Override
        protected String doInBackground(String... params) {

            assigndata9();
            return status;
        }

        @Override
        protected void onProgressUpdate(String... values) {
            super.onProgressUpdate(values);

        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
            loadinc=loadinc+1;            textView.setText(String.valueOf(loadinc));

            if(loadinc==10){
                Toast.makeText(getApplicationContext(),"finished", Toast.LENGTH_SHORT).show();
            }
        }

    }

    public void uploaddata(){

        final int[] succ = {0};

        fd.getReference("Telepackage/dailyam/Tab1/"+""+1).setValue("በ 3 ብር እለታዊ 35 ሜ.ባ የ ኢንተርኔት ጥቅል") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou1/"+""+1).setValue("1;1;3;1;1;1") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift1/"+""+1).setValue("1;2;3;1;1") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag1/"+""+1).setValue("በ3 ብር 35 ሜ.ባ") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});


        fd.getReference("Telepackage/dailyam/Tab1/"+""+2).setValue("በ 5 ብር እለታዊ 75 ሜ.ባ የ ኢንተርኔት ጥቅል") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou1/"+""+2).setValue("1;1;3;1;2;1") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift1/"+""+2).setValue("1;2;3;1;2") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag1/"+""+2).setValue("በ5 ብር 75 ሜ.ባ") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});


        fd.getReference("Telepackage/dailyam/Tab1/"+""+3).setValue("በ 12 ብር እለታዊ 200 ሜ.ባ የ ኢንተርኔት ጥቅል") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou1/"+""+3).setValue("1;1;3;1;3;1") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift1/"+""+3).setValue("1;2;3;1;3") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag1/"+""+3).setValue("2 ብር 200 ሜ.ባ") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});

        fd.getReference("Telepackage/dailyam/Tab1/"+""+4).setValue("በ 25 ብር እለታዊ 500 ሜ.ባ የ ኢንተርኔት ጥቅል") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou1/"+""+4).setValue("1;1;3;1;4;1") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift1/"+""+4).setValue("1;2;3;1;4") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag1/"+""+4).setValue("በ25 ብር 500 ሜ.ባ") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});

        fd.getReference("Telepackage/dailyam/Tab1/"+""+5).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou1/"+""+5).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift1/"+""+5).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag1/"+""+5).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});

        fd.getReference("Telepackage/dailyam/Tab1/"+""+6).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou1/"+""+6).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift1/"+""+6).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag1/"+""+6).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});


        fd.getReference("Telepackage/dailyam/Tab2/"+""+1).setValue("በ 3 ብር ዕለታዊ 1 2 ደቂቃ የ ድምፅ ጥቅል") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou2/"+""+1).setValue("1;1;2;1;1;1") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift2/"+""+1).setValue("1;2;2;1;1") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag2/"+""+1).setValue("በ3 ብር 12 ደቂቃ") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});


        fd.getReference("Telepackage/dailyam/Tab2/"+""+2).setValue("በ 5 ብር ዕለታዊ 20 ደቂቃ የ ድምፅ ጥቅል") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou2/"+""+2).setValue("1;1;2;1;2;1") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift2/"+""+2).setValue("1;2;2;1;2") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag2/"+""+2).setValue("በ5 ብር 20 ደቂቃ") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});


        fd.getReference("Telepackage/dailyam/Tab2/"+""+3).setValue("በ 10 ብር ዕለታዊ 45 ደቂቃ የ ድምፅ ጥቅል") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou2/"+""+3).setValue("1;1;2;1;3;1") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift2/"+""+3).setValue("1;2;1;1;3") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag2/"+""+3).setValue("በ10 ብር 45") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});

        fd.getReference("Telepackage/dailyam/Tab2/"+""+4).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou2/"+""+4).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift2/"+""+4).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag2/"+""+4).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});

        fd.getReference("Telepackage/dailyam/Tab2/"+""+5).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou2/"+""+5).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift2/"+""+5).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag2/"+""+5).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});

        fd.getReference("Telepackage/dailyam/Tab2/"+""+6).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou2/"+""+6).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift2/"+""+6).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag2/"+""+6).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});


        fd.getReference("Telepackage/dailyam/Tab3/"+""+1).setValue("በ 3 ብር 40 መልዕክት") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou3/"+""+1).setValue("1;1;10;1;2;1") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift3/"+""+1).setValue("1;2;10;1;2") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag3/"+""+1).setValue("በ2 ብር 35 መልዕክት") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});


        fd.getReference("Telepackage/dailyam/Tab3/"+""+2).setValue("በ 5 ብር 80 መልዕክት") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou3/"+""+2).setValue("1;1;10;1;3;1") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift3/"+""+2).setValue("1;2;10;1;3") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag3/"+""+2).setValue("በ3 ብር 55 መልዕክት") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});


        fd.getReference("Telepackage/dailyam/Tab3/"+""+3).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou3/"+""+3).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift3/"+""+3).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag3/"+""+3).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});

        fd.getReference("Telepackage/dailyam/Tab3/"+""+4).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou3/"+""+4).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift3/"+""+4).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag3/"+""+4).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});

        fd.getReference("Telepackage/dailyam/Tab3/"+""+5).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou3/"+""+5).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift3/"+""+5).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag3/"+""+5).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});

        fd.getReference("Telepackage/dailyam/Tab3/"+""+6).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/foryou3/"+""+6).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/gift3/"+""+6).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});
        fd.getReference("Telepackage/daily/Tag3/"+""+6).setValue("") .addOnSuccessListener(new OnSuccessListener<Void>() {@Override public void onSuccess(Void unused) {
            succ[0] = succ[0] +1;
            if(succ[0] ==2880){
                Toast.makeText(getApplicationContext(),"succsess", Toast.LENGTH_SHORT).show();

            }
        }});





        ////english
        MyListData myListData=new MyListData();
        ArrayList<MyListData> arrayList = new ArrayList<>();
        myListData.setTag1("በ3 ብር 35 ሜ.ባ");
        myListData.setTag2("በ3 ብር 12 ደቂቃ");
        myListData.setTag3("በ2 ብር 35 መልዕክት");
        myListData.setTag4("ብር 12 የ12 ደቂቃ");
        myListData.setTag5("በ15 ብር 390 ፍሌክሲ");
        myListData.setTag6("በ 29.90 ብር 5 ደቂቃ");
        myListData.setTag7("በ 2ብር  8 ደቂቃ");
        myListData.setTag8("ብር 650የ555 ደቂቃ፣12ጂቢ እና 150");
        myListData.setTag9("በ 12 ብር ለ1-");
        myListData.setTag10("በ 1 ብር 4 ደቂቃ");
       /* myListData.setTag11();
        myListData.setTag12();*/
        myListData.setTab1("3 birr for daily 35 MB");
        myListData.setForyou1("1;1;3;1;1;1");
        myListData.setGift1("1;2;3;1;1");
        myListData.setTab2("3 birr for 12 minute voice daily");
        myListData.setForyou2("1;1;2;1;1;1");
        myListData.setGift2("1;2;2;1;1");
        myListData.setTab3("2 birr for 20 sms");
        myListData.setForyou3("1;1;10;1;1;1");
        myListData.setGift3("1;2;10;1;1");
        myListData.setTab4("12 birr for 12 minute,160 MB and 20 sms");
        myListData.setForyou4("1;1;4;1;1;1");
        myListData.setGift4("1;2;4;1;1");
        myListData.setTab5("15 birr for 390 flexi");
        myListData.setForyou5("1;1;5;1;1;1");
        myListData.setGift5("1;2;5;1;1");
        myListData.setTab6("29.90 birr for 5 minute selected 10 countries");
        myListData.setForyou6("1;1;8;1;1;1;1");
        myListData.setGift6("1;2;8;1;1;1");
        myListData.setTab7("2 birr for 8 minute voice and 5 sms");
        myListData.setForyou7("1;1;9;1;1");
        myListData.setGift7("1;2;9;1");
        myListData.setTab8("650 birr for 555 minute voice and 12 GB internet");
        myListData.setForyou8("1;1;7;1;1;1");
        myListData.setGift8("1;2;7;1;1");
        myListData.setTab9("12 birr for 1 hour Unlimited internet");
        myListData.setForyou9("2;1;1;1;1");
        myListData.setGift9("2;2;1;1;1");
        myListData.setTab10("1 birr for 4 miniue voice for an hour");
        myListData.setForyou10("1;1;1;1;1");
        myListData.setGift10("1;2;1;1");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailysaf);



        myListData.setTag1("በ5 ብር 75 ሜ.ባ");
        myListData.setTag2("በ5 ብር 20 ደቂቃ");
        myListData.setTag3("በ3 ብር 55 መልዕክት");
        myListData.setTag4("ብር 33 የ28 ደቂቃ");
        myListData.setTag5("");
        myListData.setTag6("በ 37 ብር 5 ደቂቃ");
        myListData.setTag7("በ 2ብር 25 ሜ.ባ እና 5 መልዕክት");
        myListData.setTag8("የ1500 ደቂቃ፣12ጂቢ እና 150");
        myListData.setTag9("በ 55 ብር ለአንድ ቀን");
        myListData.setTag10("በ 1 ብር 20 ሜ.ባ");
       /* myListData.setTag11();
        myListData.setTag12();*/
        myListData.setTab1("5 birr for 75 MB");
        myListData.setForyou1("1;1;3;1;2;1");
        myListData.setGift1("1;2;3;1;2");
        myListData.setTab2("5 birr for 20 minute voice daily");
        myListData.setForyou2("1;1;2;1;2;1");
        myListData.setGift2("1;2;2;1;2");
        myListData.setTab3("3 birr for 40 sms");
        myListData.setForyou3("1;1;10;1;2;1");
        myListData.setGift3("1;2;10;1;2");
        myListData.setTab4("33 birr for 28 minute voice,590 MB and  10 sms");
        myListData.setForyou4("1;1;4;1;#;2;1");
        myListData.setGift4("1;2;4;1;#;2");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("37 birr for 5 minute selected 11 countries");
        myListData.setForyou6("1;1;8;2;1;1;1");
        myListData.setGift6("1;2;8;2;1;1");
        myListData.setTab7("2 birr for 25 MG internet and 5 sms");
        myListData.setForyou7("1;1;9;2;1");
        myListData.setGift7("1;2;9;2");
        myListData.setTab8("860 birr for 1500 minute,12 GB and 150 sms");
        myListData.setForyou8("1;1;7;1;#;2;1");
        myListData.setGift8("1;2;7;1;2");
        myListData.setTab9("55 birr for Daily Unlimited internet");
        myListData.setForyou9("2;1;2;1;1");
        myListData.setGift9("2;2;2;1;1");
        myListData.setTab10("1 birr for 20 MB for 1 hour");
        myListData.setForyou10("1;1;1;2;1");
        myListData.setGift10("1;2;1;2");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailysaf);

        myListData.setTag1("2 ብር 200 ሜ.ባ");
        myListData.setTag2("በ10 ብር 45");
        myListData.setTag3("በ5 ብር 100 መልዕክት");
        myListData.setTag4("ብር 33 የ28 ደቂቃ፣590ሜ.ባ እና 10 መልዕክት");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("በ 2 ብር 25 ሜ.ባ እና 5 መልዕክት");
        myListData.setTag8("የ1500 ደቂቃ፣12ጂቢ እና 150");
        myListData.setTag9("በ 35 ብርያልተገደበ የድምፅ");
        myListData.setTag10("በ 1 ብር 20 ሜ.ባ");
       /* myListData.setTag11();
        myListData.setTag12();*/
        myListData.setTab1("12 birr for 200 MB");
        myListData.setForyou1("1;1;3;1;3;1");
        myListData.setGift1("1;2;3;1;3");
        myListData.setTab2("10 birr for 45 minute voice daily");
        myListData.setForyou2("1;1;2;1;3;1");
        myListData.setGift2("1;2;2;1;3");
        myListData.setTab3("5 bir for 80 sms");
        myListData.setForyou3("1;1;10;1;3;1");
        myListData.setGift3("1;2;10;1;3");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("2620 birr for 555 minute ,unlimited internet and 150 sms");
        myListData.setForyou8("1;1;7;1;#;3;1");
        myListData.setGift8("1;2;7;1;#;3");
        myListData.setTab9("35 birr for Daily Unlimited voice");
        myListData.setForyou9("2;1;3;1;1");
        myListData.setGift9("2;2;3;1;1");
        myListData.setTab10("1 birr for 50 sms for 1 hour");
        myListData.setForyou10("1;1;1;3;1");
        myListData.setGift10("1;2;1;3");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailysaf);

        myListData.setTag1("በ25 ብር 500 ሜ.ባ");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("የ1500 ደቂቃ፣12ጂቢ እና 150");
        myListData.setTag9("");
        myListData.setTag10("");
       /* myListData.setTag11();
        myListData.setTag12();*/
        myListData.setTab1("25 birr for 500 MB");
        myListData.setForyou1("1;1;3;1;4;1");
        myListData.setGift1("1;2;3;1;4");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("3470 birr for unlimited voice,12 GB and 150 sms");
        myListData.setForyou8("1;1;7;1;#;#;4;1");
        myListData.setGift8("1;2;7;1;#;#;4");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailysaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("የ1500 ደቂቃ፣12ጂቢ እና 150");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("4130 birr for unlimited voice ,internet,sms");
        myListData.setForyou8("1;1;7;1;#;#;#;5;1");
        myListData.setGift8("1;2;7;1;#;#;#;5");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailysaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledaily);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tabledailysaf);

        //########################TABLE DAILY
        myListData.setTag1("በ 24 ብር 375 ሜ.ባ");
        myListData.setTag2("በ15 ብር 70 ደቂቃ");
        myListData.setTag3("በ10 ብር 200 መልዕክት");
        myListData.setTag4("ብር 50 የ70 ደቂቃ");
        myListData.setTag5("በ50 ብር 1320 ፍሌክሲ");
        myListData.setTag6("በ 74.90 ብር 15 ደቂቃ");
        myListData.setTag7("");
        myListData.setTag8("ብር 10200 ያልተገደበ ድምፅ፣ ዳታ እና");
        myListData.setTag9("በ300 ብር ለሳምንት");
        myListData.setTag10("");

        myListData.setTab1("24 birr for weekly 375 MB ");
        myListData.setForyou1("1;1;3;2;1;1");
        myListData.setGift1("1;2;3;2;1");
        myListData.setTab2("15 birr for 70 minute voice weekly");
        myListData.setForyou2("1;1;2;2;1;1");
        myListData.setGift2("1;2;2;2;1");
        myListData.setTab3("10 birr for 165 sms");
        myListData.setForyou3("1;1;10;2;1;1");
        myListData.setGift3("1;2;10;2;1");
        myListData.setTab4("50 birr for 70 minute voice,590 MB and 20 sms");
        myListData.setForyou4("1;1;4;2;1;1");
        myListData.setGift4("1;2;4;2;1");
        myListData.setTab5("50 birr for 1320 flexi package");
        myListData.setForyou5("1;1;5;2;1;1");
        myListData.setGift5("1;2;5;2;1");
        myListData.setTab6("74.90 birr for 15 minute selected 10 countries");
        myListData.setForyou6("1;1;8;1;2;1;1");
        myListData.setGift6("1;2;8;1;2;1");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("10,200 birr for unlimited voice,internet,sms");
        myListData.setForyou8("1;1;7;2;1;1");
        myListData.setGift8("1;2;7;2;1");
        myListData.setTab9("300 birr for unlimited internet and sms");
        myListData.setForyou9("1;1;6;1;1;1");
        myListData.setGift9("1;2;6;1;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklysaf);

        myListData.setTag1("በ 38 ብር 600 ሜ.ባ");
        myListData.setTag2("በ20 ብር 100 ደቂቃ");
        myListData.setTag3("በ15 ብር 350 መልዕክት");
        myListData.setTag4("76 የ100 ደቂቃ፣1ጂቢ እና 20 መልዕክት");
        myListData.setTag5("");
        myListData.setTag6("በ 104 ብር 15 ደቂቃ");
        myListData.setTag7("");
        myListData.setTag8("ያልተገደበ ድምፅ እና መልዕክት");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("38 birr for weekly 600 MB");
        myListData.setForyou1("1;1;3;2;2;1");
        myListData.setGift1("1;2;3;2;2");
        myListData.setTab2("20 birr for 100 minute voice weekly");
        myListData.setForyou2("1;1;2;2;2;1");
        myListData.setGift2("1;2;2;2;2");
        myListData.setTab3("15 birr for 333 sms");
        myListData.setForyou3("1;1;10;2;2;1");
        myListData.setGift3("1;2;10;2;2");
        myListData.setTab4("76 birr for 100 minute voice, 1 GB  and 20 sms");
        myListData.setForyou4("1;1;4;2;#;2;1");
        myListData.setGift4("1;2;4;2;#;2");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("104 birr for 15 minute selected 11 countries");
        myListData.setForyou6("1;1;8;2;2;1;1");
        myListData.setGift6("1;2;8;2;2;1");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("5995 birr for unlimited voice and sms");
        myListData.setForyou8("1;1;7;2;#;2;1");
        myListData.setGift8("1;2;7;2;#;2");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklysaf);

        myListData.setTag1("በ 49 ብር 1ጊ.ባ");
        myListData.setTag2("በ25 ብር");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("ብር 5995 ያልተገደበ ዳታ እና");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("56 birr for weekly 1 GB");
        myListData.setForyou1("1;1;3;2;3;1");
        myListData.setGift1("1;2;3;2;3");
        myListData.setTab2("25 birr for 130 minute voice weekly");
        myListData.setForyou2("1;1;2;2;3;1");
        myListData.setGift2("1;2;2;2;3");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("5995 birr for unlimited internet and sms");
        myListData.setForyou8("1;1;7;2;#;3;1");
        myListData.setGift8("1;2;7;2;#;3");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklysaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklysaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");


        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklysaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweekly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tableweeklysaf);

        //  #################  monthly

        myListData.setTag1("በ 35 ብር 500ሜ.ባ");
        myListData.setTag2("በ35 ብር 125 ደቂቃ");
        myListData.setTag3("በ30 ብር 800 መልዕክት");
        myListData.setTag4("ብር 140 የ125 ደቂቃ፣2ጂቢ እና 50");
        myListData.setTag5("በ100 ብር 2280 ፍሌክሲ");
        myListData.setTag6("በ 449 ብር 150 ደቂቃ");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("በ 999ብር ያልተገደበ ድ");
        myListData.setTag10("");


        myListData.setTab1("35 birr for monthly 500MB");
        myListData.setForyou1("1;1;3;3;1;1;1");
        myListData.setGift1("1;2;3;3;1;1");
        myListData.setTab2("35 birr for 125 miniute voice monthly");
        myListData.setForyou2("1;1;2;3;1;1;1");
        myListData.setGift2("1;2;2;3;1;1");
        myListData.setTab3("30 birr for 656 sms");
        myListData.setForyou3("1;1;10;3;1;1");
        myListData.setGift3("1;2;10;3;1");
        myListData.setTab4("140 birr for 125 minute voice,2 GB  and 50 sms");
        myListData.setForyou4("1;1;4;3;1;1;1");
        myListData.setGift4("1;2;4;3;1;1");
        myListData.setTab5("100 birr for 2280 flexi package");
        myListData.setForyou5("1;1;5;3;1;1;1");
        myListData.setGift5("1;2;5;3;1;1");
        myListData.setTab6("149 birr for 150 minute selected 10 countries");
        myListData.setForyou6("1;1;8;1;3;1;1");
        myListData.setGift6("1;2;8;1;3;1");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("999 birr for unlimited voice ");
        myListData.setForyou9("1;1;6;2;1;1;1");
        myListData.setGift9("1;2;6;2;1;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 50 ብር 1ጊ.ባ");
        myListData.setTag2("በ50 ብር 185 ደቂቃ");
        myListData.setTag3("በ50 ብር 1500 መልዕክት");
        myListData.setTag4("ብር 200 የ375 ደ");
        myListData.setTag5("");
        myListData.setTag6("በ 999 ብር 150 ደቂቃ");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("በ 999ብር ያልተገደበ ኢንተርኔት");
        myListData.setTag10("");


        myListData.setTab1("50 birr for monthly 1GB");
        myListData.setForyou1("1;1;3;3;2;1;1");
        myListData.setGift1("1;2;3;3;2");
        myListData.setTab2("50 birr for 185 miniute voice monthly");
        myListData.setForyou2("1;1;2;3;2;1;1");
        myListData.setGift2("1;2;2;3;2;1");
        myListData.setTab3("50 birr for 1313 sms");
        myListData.setForyou3("1;1;10;3;1;1");
        myListData.setGift3("1;2;10;3;1");
        myListData.setTab4("200 birr for 375 minute voice, 2 GB  and 50 sms");
        myListData.setForyou4("1;1;4;3;1;1;1");
        myListData.setGift4("1;2;4;3;1;1");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("999 birr for 150 minute selected 11 countries");
        myListData.setForyou6("1;1;8;2;3;1;1");
        myListData.setGift6("1;2;8;2;3;1");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("999 birr for unlimited internet ");
        myListData.setForyou9("1;1;6;2;2;1;1");
        myListData.setGift9("1;2;6;2;2;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 100 ብር 2ጊ.ባ");
        myListData.setTag2("በ95 ብር 375 ደቂ");
        myListData.setTag3("");
        myListData.setTag4("ብር 1663 የ1250 ደቂቃ፣ያልተገደበ");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("በ 1700ብር ያልተገደበ");
        myListData.setTag10("");

        myListData.setTab1("100 birr for monthly 2GB");
        myListData.setForyou1("1;1;3;3;3;1;1");
        myListData.setGift1("1;2;3;3;3;1");
        myListData.setTab2("95 birr for 375 miniute voice monthly");
        myListData.setForyou2("1;1;2;3;3;1;1");
        myListData.setGift2("1;2;2;3;3;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("1663 birr for 1250 minute , unlimited internet and 50 sms");
        myListData.setForyou4("1;1;4;3;#;3;1;1");
        myListData.setGift4("1;2;4;3;#;3;1");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("1700 birr for unlimited voice and internet");
        myListData.setForyou9("1;1;6;2;3;1;1");
        myListData.setGift9("1;2;6;2;3;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 175 ብር 4ጊ.ባ");
        myListData.setTag2("በ120 ብር 500 ደቂቃ");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("በ 2330ብር ያልተገደበ");
        myListData.setTag10("");

        myListData.setTab1("175 birr for monthly 4GB");
        myListData.setForyou1("1;1;3;3;#;4;1;1");
        myListData.setGift1("1;2;3;3;#;4;1");
        myListData.setTab2("120 birr for 500 miniute voice monthly");
        myListData.setForyou2("1;1;2;3;#;4;1;1");
        myListData.setGift2("1;2;2;3;#;4;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("2330 birr for unlimited voice,internet,sms and international 100 minute and 50 sms");
        myListData.setForyou9("1;1;6;2;#;4;1;1");
        myListData.setGift9("1;2;6;2;#;4;1");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 379 ብር 10ጊ.ባ");
        myListData.setTag2("በ200 ብር 1000 ደቂቃ");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("379 birr for monthly 10GB");
        myListData.setForyou1("1;1;3;3;#;5;1;1");
        myListData.setGift1("1;2;3;3;#;5;1");
        myListData.setTab2("200 birr for 1000 miniute voice monthly");
        myListData.setForyou2("1;1;2;3;#;5;1;1");
        myListData.setGift2("1;2;2;3;#;5;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 549 ብር 20ጊ.ባ");
        myListData.setTag2("በ380 ብር");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("549 birr for monthly 20GB");
        myListData.setForyou1("1;1;3;3;#;6;1;1");
        myListData.setGift1("1;2;3;3;#;6;1");
        myListData.setTab2("380 birr for 2000 miniute voice monthly");
        myListData.setForyou2("1;1;2;3;#;6;1;1");
        myListData.setGift2("1;2;2;3;#;6;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 799 ብር 50ጊ.ባ");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");


        myListData.setTab1("799 birr for monthly 50GB");
        myListData.setForyou1("1;1;3;3;#;7;1;1");
        myListData.setGift1("1;2;3;3;#;7;1");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        myListData.setTag1("በ 849 ብር 100 ጊ.ባ");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");


        myListData.setTab1("849 birr for monthly 100GB");
        myListData.setForyou1("1;1;3;3;#;8;1;1");
        myListData.setGift1("1;2;3;3;#;8;1");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthly);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablemonthlysaf);

        //############ night

        myListData.setTag1("በ3 ብር 70 ሜ.ባ");
        myListData.setTag2("በ3 ብር 60 ደቂቃ");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("3 birr for night 70 MB");
        myListData.setForyou1("1;1;3;4;1;1");
        myListData.setGift1("1;2;3;4;1");
        myListData.setTab2("3 birr for 60 miniute voice night");
        myListData.setForyou2("1;1;2;4;1;1;1");
        myListData.setGift2("1;2;2;4;1;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightsaf);


        myListData.setTag1("በ5 ብር 160 ሜ.ባ");
        myListData.setTag2("በ6 ብር 140 ደቂቃ");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1(" 5 birr for night 160 MB");
        myListData.setForyou1("1;1;3;4;2;1");
        myListData.setGift1("1;2;3;4;2");
        myListData.setTab2("6 birr for 140 miniute voice night");
        myListData.setForyou2("1;1;2;4;2;1;1");
        myListData.setGift2("1;2;2;4;2;1");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightsaf);

        myListData.setTag1("በ7 ብር 300 ሜ.ባ");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("7 birr for night 300 MB");
        myListData.setForyou1("1;1;3;4;3;1");
        myListData.setGift1("1;2;3;4;3");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightsaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightsaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightsaf);

        myListData.setTag1("");
        myListData.setTag2("");
        myListData.setTag3("");
        myListData.setTag4("");
        myListData.setTag5("");
        myListData.setTag6("");
        myListData.setTag7("");
        myListData.setTag8("");
        myListData.setTag9("");
        myListData.setTag10("");

        myListData.setTab1("");
        myListData.setForyou1("");
        myListData.setGift1("");
        myListData.setTab2("");
        myListData.setForyou2("");
        myListData.setGift2("");
        myListData.setTab3("");
        myListData.setForyou3("");
        myListData.setGift3("");
        myListData.setTab4("");
        myListData.setForyou4("");
        myListData.setGift4("");
        myListData.setTab5("");
        myListData.setForyou5("");
        myListData.setGift5("");
        myListData.setTab6("");
        myListData.setForyou6("");
        myListData.setGift6("");
        myListData.setTab7("");
        myListData.setForyou7("");
        myListData.setGift7("");
        myListData.setTab8("");
        myListData.setForyou8("");
        myListData.setGift8("");
        myListData.setTab9("");
        myListData.setForyou9("");
        myListData.setGift9("");
        myListData.setTab10("");
        myListData.setForyou10("");
        myListData.setGift10("");

        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenight);
        loginDataBaseAdapter.inserttotable(myListData,loginDataBaseAdapter.tablenightsaf);

    }


}

